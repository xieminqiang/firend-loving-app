/**
 * 样式混入
 */
@import './variables.scss';

// Flex布局混入
@mixin flex {
  display: flex;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-around {
  display: flex;
  align-items: center;
  justify-content: space-around;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

// 文字省略
@mixin ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 居中定位
@mixin center($position: absolute) {
  position: $position;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 垂直居中
@mixin vertical-center($position: absolute) {
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

// 水平居中
@mixin horizontal-center($position: absolute) {
  position: $position;
  left: 50%;
  transform: translateX(-50%);
}

// 按钮样式
@mixin button($bg-color: $button-primary-bg, $text-color: $button-primary-text, $border-radius: $border-radius-base) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-base;
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: $border-radius;
  font-size: $font-size-base;
  cursor: pointer;
  transition: all $animation-duration-base;
  
  &:hover {
    opacity: 0.8;
  }
  
  &:active {
    transform: scale(0.98);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// 主按钮样式
@mixin button-primary {
  @include button($button-primary-bg, $button-primary-text);
  
  &:hover {
    background-color: $primary-hover;
  }
}

// 次按钮样式
@mixin button-secondary {
  @include button($button-secondary-bg, $button-secondary-text);
  border: 1rpx solid $button-secondary-border;
  
  &:hover {
    background-color: $primary-hover;
    color: $button-primary-text;
    border-color: $primary-hover;
  }
}

// 禁用按钮样式
@mixin button-disabled {
  @include button($button-disabled-bg, $button-disabled-text);
  cursor: not-allowed;
  
  &:hover {
    opacity: 1;
    transform: none;
  }
}

// 卡片样式
@mixin card($padding: $spacing-base, $border-radius: $border-radius-base, $shadow: $box-shadow-light) {
  background-color: $bg-color-primary;
  padding: $padding;
  border-radius: $border-radius;
  box-shadow: $shadow;
}

// 输入框样式
@mixin input($border-color: $border-color-light, $focus-color: $primary-color) {
  width: 100%;
  padding: $spacing-sm;
  border: 1rpx solid $border-color;
  border-radius: $border-radius-base;
  font-size: $font-size-base;
  color: $text-color-primary;
  background-color: $bg-color-primary;
  transition: border-color $animation-duration-base;
  
  &:focus {
    border-color: $focus-color;
    outline: none;
  }
  
  &::placeholder {
    color: $text-color-placeholder;
  }
  
  &:disabled {
    background-color: $bg-color-tertiary;
    color: $text-color-disabled;
    cursor: not-allowed;
  }
}

// 响应式断点
@mixin mobile {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: 769px) and (max-width: 1024px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: 1025px) {
    @content;
  }
}

// 动画
@mixin fade-in($duration: $animation-duration-base) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: $animation-duration-base) {
  animation: slideUp $duration ease-out;
}

@mixin bounce($duration: $animation-duration-base) {
  animation: bounce $duration ease-in-out;
}

// 关键帧动画
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -30rpx, 0);
  }
  70% {
    transform: translate3d(0, -15rpx, 0);
  }
  90% {
    transform: translate3d(0, -4rpx, 0);
  }
} 