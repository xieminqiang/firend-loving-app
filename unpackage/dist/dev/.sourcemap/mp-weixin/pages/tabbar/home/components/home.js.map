{"version":3,"file":"home.js","sources":["pages/tabbar/home/components/home.vue","/Users/xiaoqiang/Documents/friemd/firend-loving-app/pages/tabbar/home/components/home.vue?type=component"],"sourcesContent":["<template>\n\t<view class=\"home-container\" v-if=\"userStore.switch === 1\">\n\t  <!-- 顶部固定区域：只保留logo和城市选择器 -->\n\t  <view class=\"header\" :style=\"{ paddingTop: statusBarHeight + 'px' }\">\n\t\t<!-- 顶部区域：logo和城市选择器 -->\n\t\t<view class=\"header-top\">\n\t\t  <view class=\"logo-container\">\n\t\t\t\t\t\t\t<text class=\"logo\">随伴行</text>\n\t\t\t<text class=\"logo-tag\">提供精选服务</text>\n\t\t  </view>\n\t\t  <CitySelector @click=\"showCityPicker = true\" />\n\t\t</view>\n\t  </view>\n\t \n\t  \t  <!-- 服务选项卡 - 移到scroll-view外层，不跟随滚动 -->\n\t  <view class=\"category-tabs\">\n\t\t<u-tabs\n\t\t  :list=\"tabsList\"\n\t\t  :current=\"currentTabIndex\"\n\t\t  @change=\"handleTabChange\"\n\t\t  lineWidth=\"20\"\n\t\t  lineHeight=\"2\"\n\t\t  :lineColor=\"`linear-gradient(90deg, rgba(115, 99, 255, 1) 0%, rgba(255, 105, 222, 1) 100%)`\"\n\t\t  :activeStyle=\"{\n\t\t\tcolor: '#7363FF',\n\t\t\tfontWeight: '500',\n\t\t\tfontSize: '28rpx',\n\t\t\n\t\t  }\"\n\t\t  :inactiveStyle=\"{\n\t\t\tcolor: '#1A1A1A',\n\t\t\tfontWeight: '400',\n\t\t\tfontSize: '28rpx',\n\t\t\t\t\n\t\t  }\"\n\t\t  itemStyle=\"padding: 16rpx 50rpx; height: auto; border-radius: 30rpx;\"\n\t\t></u-tabs>\n\t  </view>\n  \n\t \n\t\n\t\t<!-- 页面内容 -->\n\t\t<view class=\"content-section\">\n\t\t  <!-- 服务选项卡滑动容器 -->\n\t\t  <swiper\n\t\t\tclass=\"tab-content-swiper\"\n\t\t\t:current=\"currentTabIndex\"\n\t\t\t@change=\"onSwiperChange\"\n\t\t\t:indicator-dots=\"false\"\n\t\t\t:circular=\"false\"\n\t\t\t:autoplay=\"false\"\n\t\t\t:duration=\"300\"\n\t\t  >\n\t\t\t<!-- 每个选项卡的内容 -->\n\t\t\t<swiper-item v-for=\"tab in serviceTabs\" :key=\"tab\">\n\t\t\t  <scroll-view \n\t\t\t\tclass=\"tab-scroll-view\" \n\t\t\t\tscroll-y=\"true\"\n\t\t\t\trefresher-enabled=\"true\"\n\t\t\t\t:refresher-triggered=\"refreshing\"\n\t\t\t\t@refresherrefresh=\"onRefresh(tab)\"\n\t\t\t\t@refresherrestore=\"onRefreshRestore\"\n\t\t\t\t@scrolltolower=\"onScrollToLower(tab)\"\n\t\t\t  >\n\t\t\t\t<view class=\"service-list-soul\">\n\t\t\t\t  <!-- 顶部加载指示器 - 只在有数据且正在加载时显示 -->\n\t\t\t\t\n\t\t\t\t  <!-- 服务列表 - 优先显示数据，加载期间也显示 -->\n\t\t\t\t  <view v-if=\"getTabServiceItems(tab).length > 0\">\n\t\t\t\t\t<view v-for=\"item in getTabServiceItems(tab)\" :key=\"item.id\" class=\"service-card-soul\" @click=\"navigateToServiceDetail(item.id)\">\n\t\t\t\t\t  <view class=\"service-img-wrap\">\n\t\t\t\t\t\t<image :src=\"$imgBaseUrl + item.img\" class=\"service-img-soul\" mode=\"aspectFill\" />\n\t\t\t\t\t  </view>\n\t\t\t\t\t  <view class=\"service-info-soul\">\n\t\t\t\t\t\t<text class=\"service-title-soul\">{{ item.name }}</text>\n\t\t\t\t\t\t<view class=\"service-tags-soul\">\n\t\t\t\t\t\t  <text v-for=\"tag in item.tags\" :key=\"tag\" class=\"tag-soul\">{{ tag }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"service-actions-soul\">\n\t\t\t\t\t\t  <view class=\"price-info\">\n\t\t\t\t\t\t\t<text class=\"price-amount\">¥{{ item.min_price || 0 }}</text>\n\t\t\t\t\t\t\t<text class=\"price-unit\">/{{ item.unit }}起</text>\n\t\t\t\t\t\t  </view>\n\t\t\t\t\t\t  <view class=\"order-btn-soul\" >\n\t\t\t\t\t\t\t<text>立即预约</text>\n\t\t\t\t\t\t  </view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t  </view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 底部加载更多指示器 -->\n\t\t\t\t\t<view v-if=\"pagination[tab].hasMore\" class=\"load-more-indicator\">\n\t\t\t\t\t  <view v-if=\"loadingMore[tab]\" class=\"loading-more\">\n\t\t\t\t\t\t<view class=\"loading-spinner-small\"></view>\n\t\t\t\t\t\t<text class=\"loading-text-small\">加载中...</text>\n\t\t\t\t\t  </view>\n\t\t\t\t\t  <view v-else class=\"load-more-text\">\n\t\t\t\t\t\t<text>上拉加载更多</text>\n\t\t\t\t\t  </view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 没有更多数据提示 -->\n\t\t\t\t\t<view v-else class=\"no-more-data\">\n\t\t\t\t\t\t<text>没有更多数据了</text>\n\t\t\t\t\t</view>\n\t\t\t\t  </view>\n\t\t\t\t  \n\t\t\t\t  <!-- 空状态 - 只在加载完成后且没有数据时显示 -->\n\t\t\t\t  <view v-else-if=\"dataLoaded[tab] && getTabServiceItems(tab).length === 0\" class=\"empty-state\">\n\t\t\t\t\t<image src=\"/static/images/empty.png\" class=\"empty-icon\" mode=\"aspectFit\" />\n\t\t\t\t\t<text class=\"empty-text\">暂无{{ tab }}服务</text>\n\t\t\t\t\t<text class=\"empty-desc\">更多精彩服务即将上线</text>\n\t\t\t\t  </view>\n\t\t\t\t  \n\t\t\t\t  <!-- 首次加载状态 - 只在没有数据且正在加载时显示 -->\n\t\t\t\t  <view v-else-if=\"dataLoading[tab] && getTabServiceItems(tab).length === 0\" class=\"loading-state\">\n\t\t\t\t\t<view class=\"loading-spinner\"></view>\n\t\t\t\t\t<text class=\"loading-text\">加载中...</text>\n\t\t\t\t  </view>\n\t\t\t\t</view>\n\t\t\t  </scroll-view>\n\t\t\t</swiper-item>\n\t\t  </swiper>\n\t\t</view>\n\t   \n\t   \n\t   \n\t   \t   <view style=\"height: 160rpx;\"></view>\n\n  \n\t  <!-- 城市选择弹窗 -->\n\t  <CityPicker \n\t\tv-model:visible=\"showCityPicker\" \n\t\t@city-selected=\"onCitySelected\"\n\t  /> \n\t\n\t</view>\n  </template>\n  \n  <script setup>\n  import { ref, computed, onMounted, onUnmounted, nextTick, watch } from 'vue'\n  import { getHotRecommendServices } from '@/api/home.js'\n  import { useCityStore } from '@/stores/city.js'\n  import CitySelector from '@/components/common/CitySelector.vue'\n  import CityPicker from '@/components/common/CityPicker.vue'\n  import { useUserStore } from '@/stores/user.js'\n  // 用户状态管理\n  const userStore = useUserStore()\n  // 状态栏高度适配\n  const statusBarHeight = ref(0)\n  const navBarHeight = ref(44) // 默认导航栏高度\n  function requestBackgroundLocation() {\n   \n  }\n  \n  // 获取系统信息\n  onMounted(async () => { \n  \n  \n  console.log('home组件挂载完成')\n  \n  \n\tconst systemInfo = uni.getSystemInfoSync()\n\tstatusBarHeight.value = systemInfo.statusBarHeight || 0\n\t\n\t// 不同平台的导航栏高度适配\n\t// #ifdef MP-WEIXIN\n\tnavBarHeight.value = 44\n\t// #endif\n\t// #ifdef APP-PLUS\n\tnavBarHeight.value = 44\n\t// #endif\n\t// #ifdef H5\n\tnavBarHeight.value = 0 // H5不需要导航栏高度\n\t// #endif\n\t\n  \n  \n\t// 初始化城市数据（获取位置和加载城市列表）\n\tawait cityStore.initCityData()\n\t\n\t// 只加载当前选中的选项卡数据（默认\"娱乐\"）\n\tawait loadSingleTabData(serviceTab.value)\n  })\n  \n  // 获取全局城市store\n  const cityStore = useCityStore()\n  \n  // 使用全局store的计算属性\n  const city = computed(() => cityStore.currentCity)\n  const currentCityCode = computed(() => cityStore.currentCityCode)\n  const cityList = computed(() => cityStore.cityList)\n  const cityIndex = computed(() => cityStore.cityIndex)\n  \n  \n  const serviceTab = ref('娱乐')\n  const serviceTabs = ['服务', '娱乐', '运动']\n  // const serviceTabs = ['服务']\n  \n  // u-tabs 需要的数据格式\n  const tabsList = computed(() => {\n    return serviceTabs.map(tab => ({\n      name: tab\n    }))\n  })\n  // 页面卸载时清除定时器\n  onUnmounted(() => {\n\tif (swiperChangeTimer) {\n\t  clearTimeout(swiperChangeTimer)\n\t}\n  })\n  \n  \n  \n  // 城市选择 - 使用全局store\n  function onCityChange(e) {\n\tcityStore.selectCity(e.detail.value)\n  }\n  \n  \n  \n  // 为每个选项卡存储数据\n  const allServiceItems = ref({\n\t'服务': [],\n\t'娱乐': [],\n\t'运动': []\n  })\n  \n  // 数据加载状态 - 添加loading状态\n  const dataLoaded = ref({\n\t'服务': false,\n\t'娱乐': false,\n\t'运动': false\n  })\n  \n  const dataLoading = ref({\n\t'服务': false,\n\t'娱乐': false,\n\t'运动': false\n  })\n  \n  // 添加分页状态管理\n  const pagination = ref({\n\t'服务': { page: 1, hasMore: true },\n\t'娱乐': { page: 1, hasMore: true },\n\t'运动': { page: 1, hasMore: true }\n  })\n  \n  // 上拉加载状态\n  const loadingMore = ref({\n\t'服务': false,\n\t'娱乐': false,\n\t'运动': false\n  })\n  \n  // 加载单个选项卡的服务数据 - 添加城市代码参数和强制刷新参数\n  const loadSingleTabData = async (tab, forceRefresh = false) => {\n\t// 添加参数验证\n\tif (!tab) {\n\t  console.error('loadSingleTabData: tab parameter is required')\n\t  return\n\t}\n\t\n\t// 确保 pagination 对象中有对应的 tab\n\tif (!pagination.value[tab]) {\n\t  console.log(`初始化 ${tab} 的分页状态`)\n\t  pagination.value[tab] = { page: 1, hasMore: true }\n\t}\n\t\n\t// 如果已经加载过且不是重新加载，直接返回（除非强制刷新）\n\tif (dataLoaded.value[tab] && !dataLoading.value[tab] && !forceRefresh) {\n\t  console.log(`${tab}数据已缓存，跳过加载`)\n\t  return\n\t}\n\t\n\t// 强制刷新时清除缓存状态\n\tif (forceRefresh) {\n\t  dataLoaded.value[tab] = false\n\t  console.log(`强制刷新${tab}，清除缓存状态`)\n\t}\n\t\n\tdataLoading.value[tab] = true\n\tconsole.log(`开始加载${tab}服务数据，当前城市代码:`, currentCityCode.value, forceRefresh ? '(强制刷新)' : '')\n\t\n\ttry {\n\t  const requestParams = {\n\t\tcategory: getTabCategoryId(tab),\n\t\tpage_size: 10,\n\t\tcity_code: currentCityCode.value, // 传递当前选中城市的代码\n\t\tpage: pagination.value[tab].page // 传递当前页码\n\t  }\n\t  \n\t  console.log(`${tab}服务请求参数:`, requestParams)\n\t  \n\t  const response = await getHotRecommendServices(requestParams)\n\t  \n\t  if (response.data && response.data.code === 0 && response.data.data && response.data.data.list) {\n\t\t// 转换API数据格式为模板需要的格式\n\t\tconst newData = response.data.data.list.map(item => ({\n\t\t  id: item.id,\n\t\t  name: item.name,\n\t\t  desc: item.description,\n\t\t  tags: item.tags || [],\n\t\t  img: item.image_url || '/static/images/service-default.png',\n\t\t  min_price: item.min_price || 0,\n\t\t  unit: item.unit || '次', // 添加单位字段\n\t\t  price_template_id: item.price_template_id // 添加价格模板ID\n\t\t}))\n\t\t\n\t\t// 只有在强制刷新时才替换数据，否则保留现有数据\n\t\tif (forceRefresh) {\n\t\t  console.log(`${tab}强制刷新前页码: ${pagination.value[tab].page}`)\n\t\t  allServiceItems.value[tab] = newData\n\t\t  pagination.value[tab].page = 1 // 强制刷新后重置页码\n\t\t  pagination.value[tab].hasMore = true // 强制刷新后重置加载更多状态\n\t\t  console.log(`${tab}服务数据强制刷新成功，共${newData.length}条，重置后页码: ${pagination.value[tab].page}`)\n\t\t} else {\n\t\t  // 初始加载时，直接替换数据，不增加页码\n\t\t  allServiceItems.value[tab] = newData\n\t\t  pagination.value[tab].hasMore = newData.length === 10 // 判断是否还有更多数据\n\t\t  console.log(`${tab}服务数据初始加载成功，共${newData.length}条`)\n\t\t}\n\t  } else {\n\t\t// API返回数据为空，但不清空现有数据（除非是强制刷新）\n\t\tif (forceRefresh) {\n\t\t  allServiceItems.value[tab] = []\n\t\t  pagination.value[tab].page = 1 // 强制刷新后重置页码\n\t\t  pagination.value[tab].hasMore = true // 强制刷新后重置加载更多状态\n\t\t  console.log(`${tab}服务数据强制刷新为空`)\n\t\t} else {\n\t\t  console.log(`${tab}服务数据为空，保留现有数据`)\n\t\t}\n\t  }\n\t  dataLoaded.value[tab] = true\n\t} catch (error) {\n\t  console.error(`获取${tab}服务数据失败:`, error)\n\t  // 请求失败时，只有在强制刷新时才清空数据\n\t  if (forceRefresh) {\n\t\tallServiceItems.value[tab] = []\n\t\tpagination.value[tab].page = 1 // 强制刷新后重置页码\n\t\tpagination.value[tab].hasMore = true // 强制刷新后重置加载更多状态\n\t\tconsole.log(`${tab}强制刷新失败，清空数据`)\n\t  } else {\n\t\tconsole.log(`${tab}数据加载失败，保留现有数据`)\n\t  }\n\t  dataLoaded.value[tab] = true\n\t} finally {\n\t  dataLoading.value[tab] = false\n\t}\n  }\n  \n  // 加载更多数据（上拉加载）\n  const loadMoreData = async (tab) => {\n\t// 添加参数验证\n\tif (!tab) {\n\t  console.error('loadMoreData: tab parameter is required')\n\t  return\n\t}\n\t\n\t// 确保 pagination 对象中有对应的 tab\n\tif (!pagination.value[tab]) {\n\t  console.log(`初始化 ${tab} 的分页状态`)\n\t  pagination.value[tab] = { page: 1, hasMore: true }\n\t}\n\t\n\t// 如果没有更多数据或正在加载，直接返回\n\tif (!pagination.value[tab].hasMore || loadingMore.value[tab] || dataLoading.value[tab]) {\n\t  console.log(`${tab}没有更多数据或正在加载中，跳过加载`)\n\t  return\n\t}\n\t\n\tloadingMore.value[tab] = true\n\tconsole.log(`开始加载更多${tab}数据，当前页码: ${pagination.value[tab].page}`)\n\t\n\ttry {\n\t  const requestParams = {\n\t\tcategory: getTabCategoryId(tab),\n\t\tpage_size: 10,\n\t\tcity_code: currentCityCode.value,\n\t\tpage: pagination.value[tab].page + 1 // 加载下一页\n\t  }\n\t  \n\t  console.log(`${tab}加载更多请求参数:`, requestParams)\n\t  \n\t  const response = await getHotRecommendServices(requestParams)\n\t  \n\t  if (response.data && response.data.code === 0 && response.data.data && response.data.data.list) {\n\t\tconst newData = response.data.data.list.map(item => ({\n\t\t  id: item.id,\n\t\t  name: item.name,\n\t\t  desc: item.description,\n\t\t  tags: item.tags || [],\n\t\t  img: item.image_url || '/static/images/service-default.png',\n\t\t  min_price: item.min_price || 0,\n\t\t  unit: item.unit || '次',\n\t\t  price_template_id: item.price_template_id\n\t\t}))\n\t\t\n\t\t// 追加新数据\n\t\tconst existingIds = new Set(allServiceItems.value[tab].map(item => item.id))\n\t\tconst uniqueNewData = newData.filter(item => !existingIds.has(item.id))\n\t\t\n\t\tif (uniqueNewData.length > 0) {\n\t\t  allServiceItems.value[tab] = [...allServiceItems.value[tab], ...uniqueNewData]\n\t\t  pagination.value[tab].page++\n\t\t  pagination.value[tab].hasMore = newData.length === 10 // 如果返回的数据少于10条，说明没有更多了\n\t\t  console.log(`${tab}加载更多成功，新增${uniqueNewData.length}条，当前页码: ${pagination.value[tab].page}`)\n\t\t} else {\n\t\t  // 没有新数据，标记为没有更多\n\t\t  pagination.value[tab].hasMore = false\n\t\t  console.log(`${tab}没有更多新数据`)\n\t\t}\n\t  } else {\n\t\t// API返回数据为空，标记为没有更多\n\t\tpagination.value[tab].hasMore = false\n\t\tconsole.log(`${tab}加载更多返回空数据`)\n\t  }\n\t} catch (error) {\n\t  console.error(`加载更多${tab}数据失败:`, error)\n\t} finally {\n\t  loadingMore.value[tab] = false\n\t}\n  }\n  \n  // 加载所有选项卡的服务数据 - 重新加载时清除缓存\n  const loadAllServicesData = async () => {\n\tconsole.log('重新加载所有选项卡数据')\n\t// 清除所有加载状态，强制重新加载\n\tObject.keys(dataLoaded.value).forEach(tab => {\n\t  dataLoaded.value[tab] = false\n\t  // 确保 pagination 对象中有对应的 tab\n\t  if (!pagination.value[tab]) {\n\t\tpagination.value[tab] = { page: 1, hasMore: true }\n\t  }\n\t  pagination.value[tab].page = 1 // 强制刷新后重置页码\n\t  pagination.value[tab].hasMore = true // 强制刷新后重置加载更多状态\n\t})\n\t\n\t// 只加载当前选中的选项卡\n\tawait loadSingleTabData(serviceTab.value)\n  }\n  \n  // 获取tab对应的分类ID\n  const getTabCategoryId = (tabName) => {\n\tswitch(tabName) {\n\t  case '服务': return 1\n\t  case '娱乐': return 2\n\t  case '运动': return 3\n\t  default: return 0\n\t}\n  }\n  \n  // 当前选项卡索引 - 默认选中\"娱乐\"选项卡（索引1）\n  const currentTabIndex = ref(1)\n  \n  // 防抖定时器\n  let swiperChangeTimer = null\n  \n  // 切换服务tab - 优化为懒加载\n  const switchServiceTab = async (tab) => {\n\tconst oldTab = serviceTab.value\n\tconst newTab = tab\n\t\n\tserviceTab.value = newTab\n\tcurrentTabIndex.value = serviceTabs.indexOf(newTab)\n\t\n\t// 如果切换到新的tab且该tab未加载数据，则加载数据\n\tif (oldTab !== newTab && !dataLoaded.value[newTab]) {\n\t  await loadSingleTabData(newTab)\n\t}\n  }\n  \n  // u-tabs 切换处理函数\n  const handleTabChange = async (item) => {\n\t// u-tabs 传递的是对象，包含 name, rect, index 等属性\n\tlet index, newTab\n\t\n\tif (typeof item === 'object' && item !== null) {\n\t  // 如果是对象，使用 index 属性\n\t  index = item.index\n\t  newTab = item.name\n\t} else if (typeof item === 'number') {\n\t  // 如果是数字，直接使用\n\t  index = item\n\t  newTab = serviceTabs[index]\n\t} else {\n\t  console.error('Invalid tab change item:', item)\n\t  return\n\t}\n\t\n\t// 添加边界检查\n\tif (index < 0 || index >= serviceTabs.length) {\n\t  console.error('Invalid tab index:', index)\n\t  return\n\t}\n\t\n\tif (!newTab) {\n\t  console.error('Tab not found for index:', index, 'item:', item)\n\t  return\n\t}\n\t\n\tconsole.log('Tab changed to:', newTab, 'index:', index)\n\tawait switchServiceTab(newTab)\n  }\n  \n  // swiper滑动改变时的处理（检查数据加载状态）\n  const onSwiperChange = async (e) => {\n\tconst index = e.detail.current\n\tconst newTab = serviceTabs[index]\n\tconst oldTab = serviceTab.value\n\t\n\tcurrentTabIndex.value = index\n\tserviceTab.value = newTab\n\t\n\t// 清除之前的定时器\n\tif (swiperChangeTimer) {\n\t  clearTimeout(swiperChangeTimer)\n\t}\n\t\n\t// 如果切换到新的tab且该tab未加载数据，则延迟加载数据（防抖）\n\tif (oldTab !== newTab && !dataLoaded.value[newTab]) {\n\t  swiperChangeTimer = setTimeout(async () => {\n\t\tawait loadSingleTabData(newTab)\n\t  }, 300) // 300ms防抖延迟\n\t}\n  }\n  \n  // 获取指定选项卡的服务数据\n  const getTabServiceItems = (tab) => {\n\treturn allServiceItems.value[tab] || []\n  }\n  \n  \n  \n  // 跳转到服务详情页功能\n  function navigateToServiceDetail(serviceId) {\n\tconsole.log('跳转到服务详情页, ID:', serviceId)\n\t\n\t// 获取当前服务项的数据\n\tconst currentTabItems = getTabServiceItems(serviceTab.value)\n\tconst serviceItem = currentTabItems.find(item => item.id === serviceId)\n\t\n\t// 构建URL参数\n\tlet url = `/subPackages/home/detail?id=${serviceId}`\n\tif (serviceItem && serviceItem.price_template_id) {\n\t  url += `&price_template_id=${serviceItem.price_template_id}`\n\t}\n\t\n\tconsole.log('跳转URL:', url)\n\tuni.navigateTo({\n\t  url: url\n\t})\n  }\n  \n  // 预约服务\n  function orderService(item) {\n\tconsole.log('预约服务:', item.name)\n\tuni.showToast({\n\t  title: `预约${item.name}成功`,\n\t  icon: 'success'\n\t})\n  }\n  \n  // 下拉刷新状态\n  const refreshing = ref(false)\n  const isRefreshing = ref(false) // 防止重复刷新\n  \n  // 下拉刷新处理\n  const onRefresh = async (tab) => {\n\tconsole.log(`下拉刷新触发，当前tab: ${tab}, 当前serviceTab: ${serviceTab.value}`)\n\t\n\t// 添加参数验证\n\tif (!tab) {\n\t  console.error('onRefresh: tab parameter is required')\n\t  return\n\t}\n\t\n\t// 确保 pagination 对象中有对应的 tab\n\tif (!pagination.value[tab]) {\n\t  console.log(`初始化 ${tab} 的分页状态`)\n\t  pagination.value[tab] = { page: 1, hasMore: true }\n\t}\n\t\n\t// 防止重复刷新和非当前选项卡刷新\n\tif (isRefreshing.value || tab !== serviceTab.value) {\n\t  console.log(`刷新被阻止: isRefreshing=${isRefreshing.value}, tab不匹配=${tab !== serviceTab.value}`)\n\t  return\n\t}\n\t\n\tisRefreshing.value = true\n\trefreshing.value = true\n\t\n\ttry {\n\t  // 检查城市列表是否为空，如果为空则重新加载\n\t  if (cityStore.cityList.length === 0) {\n\t\tconsole.log('城市列表为空，重新加载城市列表')\n\t\tawait cityStore.loadCityList()\n\t  }\n\t  \n\t  // 下拉刷新时强制重新加载数据\n\t  console.log(`下拉刷新${tab}选项卡数据，刷新前页码: ${pagination.value[tab].page}`)\n\t  \n\t  // 手动重置页码，确保下拉刷新时页码为1\n\t  pagination.value[tab].page = 1\n\t  console.log(`手动重置页码为1: ${pagination.value[tab].page}`)\n\t  \n\t  await loadSingleTabData(tab, true)\n\t  console.log(`下拉刷新${tab}选项卡数据完成，刷新后页码: ${pagination.value[tab].page}`)\n\t  \n\t  // 再次确保页码为1\n\t  if (pagination.value[tab].page !== 1) {\n\t\tconsole.warn(`页码重置失败，手动强制设置为1`)\n\t\tpagination.value[tab].page = 1\n\t  }\n\t  \n\t  // 模拟加载时间，确保用户能看到刷新动画\n\t  await new Promise(resolve => setTimeout(resolve, 800))\n\t} catch (error) {\n\t  console.error('刷新失败:', error)\n\t} finally {\n\t  // 确保刷新状态被重置\n\t  refreshing.value = false\n\t  isRefreshing.value = false\n\t}\n  }\n  \n  // 刷新完成处理\n  const onRefreshRestore = () => {\n\trefreshing.value = false\n\tisRefreshing.value = false\n  }\n  \n  // 上拉加载处理\n  const onScrollToLower = async (tab) => {\n\tconsole.log(`上拉加载触发，当前tab: ${tab}`)\n\tawait loadMoreData(tab)\n  }\n  \n  // 监听城市变化，自动刷新数据\n  watch(() => cityStore.currentCityCode, async (newCityCode, oldCityCode) => {\n\t// 只有当城市代码真正发生变化时才刷新数据\n\tif (newCityCode && newCityCode !== oldCityCode) {\n\t  console.log('城市发生变化，自动刷新数据:', newCityCode)\n\t  loadAllServicesData()\n\t}\n  })\n\n  // 自定义城市选择\n  const showCityPicker = ref(false)\n  \n  function onCitySelected(index) {\n\tconst oldCityIndex = cityStore.cityIndex\n\t\n\t// 如果城市发生变化，重新加载所有选项卡的数据\n\tif (oldCityIndex !== index) {\n\t  console.log(`手动选择城市: ${cityStore.cityList[index].name}`)\n\t  loadAllServicesData()\n\t}\n  }\n  \n  \n  </script>\n  \n  <style lang=\"scss\" scoped>\n  @import \"@/styles/variables.scss\";\n  \n  \n  \n  .home-container {\n\t\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n  /* 顶部区域 - 现在只包含logo */\n  .header {\n\n\tpadding: 20rpx 24rpx 20rpx 24rpx;\n\tborder-bottom: none;\n\n\tborder-radius: 0 0 32rpx 32rpx;\n\tposition: relative;\n\toverflow: hidden;\n\n\n\tbox-sizing: border-box;\n\t\n\t\n  }\n  \n \n  \n  .header-top {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tposition: relative;\n\tz-index: 2;\n\theight: 88rpx; /* 为胶囊按钮预留空间 */\n\tpadding-right: 200rpx; /* 为胶囊按钮预留右侧空间 */\n  }\n  \n  .logo-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n  }\n  \n  .logo {\n\tfont-size: 40rpx;\n\tfont-weight: 700;\n\tbackground: linear-gradient(135deg, $primary-color 0%, $primary-hover 60%, $highlight-color 100%);\n\t-webkit-background-clip: text;\n\tbackground-clip: text;\n\tcolor: transparent;\n\tmargin-bottom: 4rpx;\n\ttext-shadow: none;\n\tletter-spacing: 2rpx;\n\tposition: relative;\n  \n  }\n  \n  .logo-tag {\n\tfont-size: 22rpx;\n\tcolor: $text-color-secondary;\n\tfont-weight: 500;\n\tletter-spacing: 1rpx;\n  }\n  \n  \n  \n  \n  \n  /* 服务标签区域 - 现在在scroll-view外层，不跟随滚动 */\n  .category-tabs {\n\tmargin: 12rpx 32rpx 8rpx; /* 减少下边距从20rpx到8rpx */\n\tposition: relative;\n\tz-index: 2;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n  }\n  \n  /* 内容区域 */\n  .content-section {\n\tpadding: 0rpx 24rpx; /* 减少上边距从12rpx到4rpx */\n\tposition: relative;\n\t\n\t\n  }\n  \n  .section-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-bottom: 20rpx;\n\tposition: relative;\n\tz-index: 1;\n  }\n  \n  .section-title {\n\tfont-size: 32rpx;\n\tfont-weight: 700;\n\tcolor: $text-color-primary;\n\tposition: relative;\n\tpadding-left: 20rpx;\n\tletter-spacing: 0.5rpx;\n  }\n  \n  .section-title::before {\n\tcontent: '';\n\tposition: absolute;\n\tleft: 0;\n\ttop: 6rpx;\n\theight: 28rpx;\n\twidth: 6rpx;\n\tbackground: linear-gradient(to bottom, $primary-color 0%, $highlight-color 100%);\n\tborder-radius: 6rpx;\n\tbox-shadow: 0 2rpx 6rpx rgba(130, 160, 216, 0.25);\n  }\n  \n  .section-more {\n\tfont-size: 24rpx;\n\tcolor: #666666;\n\tfont-weight: 600;\n\tpadding: 6rpx 12rpx;\n\tborder-radius: 16rpx;\n\tbackground: linear-gradient(135deg, rgba(102, 102, 102, 0.06) 0%, rgba(255, 255, 255, 0.8) 100%);\n\tborder: 1rpx solid rgba(102, 102, 102, 0.12);\n\ttransition: all 0.3s;\n\t\n\t&:active {\n\t  transform: scale(0.95);\n\t  color: $primary-color;\n\t  background: linear-gradient(135deg, rgba(115, 99, 255, 0.08) 0%, rgba(255, 255, 255, 0.9) 100%);\n\t  border-color: rgba(115, 99, 255, 0.15);\n\t}\n  }\n  \n  /* 选项卡内容滑动容器 */\n  .tab-content-swiper {\n\theight: calc(100vh - 400rpx); /* 调整高度，为固定的category-tabs预留空间 */\n\twidth: 100%;\n\t\n  }\n  \n  .tab-scroll-view {\n\theight: 100%;\n\twidth: 100%;\n  }\n  \n  /* 服务卡片列表 */\n  .service-list-soul {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 24rpx;\n\tposition: relative;\n\tz-index: 1;\n\tpadding: 4rpx 0; /* 减少上下边距从12rpx到4rpx */\n  }\n  \n  .service-card-soul {\n\tdisplay: flex;\n\tborder-radius: 24rpx;\n\tpadding: 24rpx;\n\tposition: relative;\n\toverflow: hidden;\n\tmargin-bottom: 20rpx;\n   background: #ffffff;\n\n  }\n  \n  .service-img-wrap {\n\twidth: 160rpx;\n\theight: 160rpx;\n\tborder-radius: 20rpx;\n\toverflow: hidden;\n\tmargin-right: 24rpx;\n\tflex-shrink: 0;\n\tbox-shadow: 0 6rpx 20rpx rgba(0, 0, 0, 0.08);\n\tposition: relative;\n\tz-index: 1;\n\t\n\t&::before {\n\t  content: '';\n\t  position: absolute;\n\t  top: 0;\n\t  left: 0;\n\t  right: 0;\n\t  bottom: 0;\n\t  background: linear-gradient(135deg, rgba(255, 105, 222, 0.06) 0%, transparent 50%);\n\t  z-index: 1;\n\t  border-radius: 20rpx;\n\t}\n  }\n  \n  .service-rating {\n\tposition: absolute;\n\ttop: 8rpx;\n\tright: 8rpx;\n\tbackground: linear-gradient(135deg, $highlight-color 0%, #FF8A65 100%);\n\tcolor: white;\n\tfont-size: 20rpx;\n\tpadding: 4rpx 12rpx;\n\tborder-radius: 20rpx;\n\tz-index: 3;\n\tbackdrop-filter: blur(8rpx);\n\t-webkit-backdrop-filter: blur(8rpx);\n\tbox-shadow: 0 3rpx 12rpx rgba(255, 111, 97, 0.25);\n\tfont-weight: 600;\n\tborder: 1rpx solid rgba(255, 255, 255, 0.2);\n  }\n  \n  .service-img-soul {\n\twidth: 100%;\n\theight: 100%;\n\ttransition: transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\tz-index: 2;\n\tposition: relative;\n  }\n  \n  .service-img-wrap:active .service-img-soul {\n\ttransform: scale(1.05);\n  }\n  \n  .service-info-soul {\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-width: 0;\n\tposition: relative;\n\tz-index: 1;\n  }\n  \n  .service-title-soul {\n\tfont-weight: 700;\n\tfont-size: 32rpx;\n\tcolor: $text-color-primary;\n\tmargin-bottom: 8rpx;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\tletter-spacing: 0.5rpx;\n\tposition: relative;\n  }\n  \n  .service-desc-soul {\n\tfont-size: 24rpx;\n\tcolor: $text-color-secondary;\n\tmargin-bottom: 12rpx;\n\tline-height: 1.4;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 2;\n\t-webkit-box-orient: vertical;\n\toverflow: hidden;\n\tfont-weight: 400;\n  }\n  \n  .service-tags-soul {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tmargin-bottom: auto;\n\tmargin-top: 4rpx;\n\tgap: 8rpx;\n  }\n  \n  .tag-soul {\n\tfont-size: 20rpx;\n\tbackground: linear-gradient(135deg, rgba(108, 117, 125, 0.08) 0%, rgba(248, 249, 250, 0.6) 100%);\n\tcolor: #495057;\n\tpadding: 4rpx 12rpx;\n\tborder-radius: 16rpx;\n\tfont-weight: 600;\n\tborder: 1rpx solid rgba(108, 117, 125, 0.12);\n\tbackdrop-filter: blur(8rpx);\n\t-webkit-backdrop-filter: blur(8rpx);\n\ttransition: all 0.3s;\n\t\n\t&:active {\n\t  transform: scale(0.95);\n\t  background: linear-gradient(135deg, rgba(255, 105, 222, 0.1) 0%, rgba(255, 255, 255, 0.8) 100%);\n\t  color: $highlight-color;\n\t  border-color: rgba(255, 105, 222, 0.2);\n\t}\n  }\n  \n  .service-actions-soul {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-top: 16rpx;\n\tpadding-top: 12rpx;\n\t// border-top: 1rpx solid rgba(0, 0, 0, 0.06);\n  }\n  \n  .price-info {\n\tdisplay: flex;\n\talign-items: baseline;\n\tposition: relative;\n  }\n  \n  .price-amount {\n\tcolor:$pricelight-color;\n\tfont-weight: 700;\n\tfont-size: 30rpx;\n\ttext-shadow: 0 1rpx 3rpx rgba(255, 111, 97, 0.15);\n  }\n  \n  .price-unit {\n\tcolor: $text-color-secondary;\n\tfont-size: 20rpx;\n\tmargin-left: 4rpx;\n\tfont-weight: 500;\n  }\n  \n  .order-btn-soul {\n\tbackground: linear-gradient(135deg, $primary-color 0%, $highlight-color 100%);\n\tcolor: white;\n\tborder-radius: 32rpx;\n\tpadding: 12rpx 24rpx;\n\tfont-size: 24rpx;\n\tfont-weight: 700;\n\t\n\n\n  }\n  \n  \n  \n  /* 空状态样式 */\n  .empty-state {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 120rpx 60rpx;\n\ttext-align: center;\n  }\n  \n  .empty-icon {\n\twidth: 200rpx;\n\theight: 200rpx;\n\tmargin-bottom: 32rpx;\n\topacity: 0.6;\n  }\n  \n  .empty-text {\n\tfont-size: 32rpx;\n\tcolor: $text-color-primary;\n\tfont-weight: 600;\n\tmargin-bottom: 16rpx;\n  }\n  \n  .empty-desc {\n\tfont-size: 24rpx;\n\tcolor: $text-color-secondary;\n\tline-height: 1.4;\n  }\n  \n  /* 底部安全区域 */\n  .bottom-safe-area {\n\theight: 120rpx; /* 增加高度，为TabBar和安全区域预留空间 */\n\tbackground: transparent;\n  }\n  \n  /* 顶部加载指示器样式 */\n  .top-loading-indicator {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 20rpx;\n\tbackground: rgba(255, 255, 255, 0.9);\n\tborder-radius: 20rpx;\n\tmargin-bottom: 20rpx;\n\tbackdrop-filter: blur(10rpx);\n\t-webkit-backdrop-filter: blur(10rpx);\n\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.08);\n\tborder: 1rpx solid rgba(130, 160, 216, 0.1);\n  }\n  \n  .loading-spinner-small {\n\twidth: 32rpx;\n\theight: 32rpx;\n\tborder: 3rpx solid #f0f0f0;\n\tborder-top: 3rpx solid #7363ff;\n\tborder-radius: 50%;\n\tanimation: spin 1s linear infinite;\n\tmargin-right: 16rpx;\n  }\n  \n  .loading-text-small {\n\tfont-size: 24rpx;\n\tcolor: #666666;\n\tfont-weight: 500;\n  }\n  \n  /* 加载状态样式 */\n  .loading-state {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 120rpx 60rpx;\n\ttext-align: center;\n  }\n  \n  .loading-spinner {\n\twidth: 60rpx;\n\theight: 60rpx;\n\tborder: 6rpx solid #f0f0f0;\n\tborder-top: 6rpx solid #7363ff;\n\tborder-radius: 50%;\n\tanimation: spin 1s linear infinite;\n\tmargin-bottom: 32rpx;\n  }\n  \n  @keyframes spin {\n\t0% { transform: rotate(0deg); }\n\t100% { transform: rotate(360deg); }\n  }\n  \n  .loading-text {\n\tfont-size: 28rpx;\n\tcolor: #666666;\n\tfont-weight: 500;\n  }\n  \n  /* 加载更多指示器样式 */\n  .load-more-indicator {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 40rpx 20rpx;\n\tmargin-top: 20rpx;\n  }\n  \n  .loading-more {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 16rpx;\n  }\n  \n  .load-more-text {\n\tfont-size: 24rpx;\n\tcolor: $text-color-secondary;\n\tfont-weight: 500;\n\tpadding: 16rpx 32rpx;\n\tborder-radius: 20rpx;\n\tbackground: linear-gradient(135deg, rgba(130, 160, 216, 0.05) 0%, rgba(255, 255, 255, 0.8) 100%);\n\tborder: 1rpx solid rgba(130, 160, 216, 0.1);\n\tbackdrop-filter: blur(10rpx);\n\t-webkit-backdrop-filter: blur(10rpx);\n  }\n  \n  .no-more-data {\n\ttext-align: center;\n\tpadding: 40rpx 20rpx;\n\tmargin-top: 20rpx;\n  }\n  \n  .no-more-data text {\n\tfont-size: 24rpx;\n\tcolor: $text-color-secondary;\n\tfont-weight: 500;\n\tpadding: 16rpx 32rpx;\n\tborder-radius: 20rpx;\n\tbackground: linear-gradient(135deg, rgba(130, 160, 216, 0.03) 0%, rgba(255, 255, 255, 0.6) 100%);\n\tborder: 1rpx solid rgba(130, 160, 216, 0.08);\n  }\n  </style> ","import Component from '/Users/xiaoqiang/Documents/friemd/firend-loving-app/pages/tabbar/home/components/home.vue'\nwx.createComponent(Component)"],"names":["CitySelector","CityPicker","userStore","useUserStore","statusBarHeight","ref","navBarHeight","onMounted","uni","systemInfo","cityStore","loadSingleTabData","serviceTab","useCityStore","computed","currentCityCode","serviceTabs","tabsList","tab","onUnmounted","swiperChangeTimer","allServiceItems","dataLoaded","dataLoading","pagination","loadingMore","forceRefresh","requestParams","getTabCategoryId","response","getHotRecommendServices","newData","item","error","loadMoreData","existingIds","uniqueNewData","loadAllServicesData","tabName","currentTabIndex","switchServiceTab","oldTab","newTab","handleTabChange","index","onSwiperChange","getTabServiceItems","navigateToServiceDetail","serviceId","serviceItem","url","refreshing","isRefreshing","onRefresh","resolve","onRefreshRestore","onScrollToLower","watch","newCityCode","oldCityCode","showCityPicker","onCitySelected","Component"],"mappings":"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"}