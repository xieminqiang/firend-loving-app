{"version":3,"file":"index.js","sources":["subPackages/partner/order/index.vue","subPackages/partner/order/index.vue?type=page"],"sourcesContent":["<template>\n    <view class=\"order-container\">\n      <!-- 状态筛选栏 -->\n      <view class=\"status-filter\">\n        <scroll-view class=\"filter-scroll\" scroll-x=\"true\" show-scrollbar=\"false\">\n          <view class=\"filter-tabs\">\n            <view \n              v-for=\"(tab, index) in statusTabs\" \n              :key=\"index\"\n              class=\"filter-tab\"\n              :class=\"{ active: currentTabIndex === index }\"\n              @click=\"switchStatus(tab.value)\"\n            >\n              <text class=\"tab-text\">{{ tab.label }}</text>\n            </view>\n          </view>\n        </scroll-view>\n      </view>\n  \n      <!-- 订单列表滑动容器 -->\n      <view class=\"order-content\">\n        <swiper\n          class=\"order-swiper\"\n          :current=\"currentTabIndex\"\n          @change=\"onSwiperChange\"\n          :indicator-dots=\"false\"\n          :circular=\"false\"\n          :autoplay=\"false\"\n          :duration=\"300\"\n        >\n          <!-- 每个状态选项卡的内容 -->\n          <swiper-item v-for=\"tab in statusTabs\" :key=\"tab.value\">\n            <scroll-view \n              class=\"order-scroll-view\" \n              scroll-y=\"true\"\n              refresher-enabled=\"true\"\n              :refresher-triggered=\"isRefreshing\"\n              @refresherrefresh=\"onRefresh\"\n              @refresherrestore=\"onRefreshRestore\"\n              @scrolltolower=\"loadMore\"\n            >\n              <!-- 空状态 -->\n              <view v-if=\"getTabOrderList(tab.value).length === 0 && !isLoading\" class=\"empty-state\">\n                <image src=\"@/static/images/empty.png\" class=\"empty-image\" mode=\"aspectFit\" />\n                <text class=\"empty-text\">暂无订单</text>\n                <text class=\"empty-desc\">继续努力，订单会越来越多的</text>\n              </view>\n  \n              <!-- 订单卡片列表 -->\n              <view v-else class=\"order-cards\">\n                <view \n                  v-for=\"order in getTabOrderList(tab.value)\" \n                  :key=\"order.id\"\n                  class=\"order-card\"\n                  @click=\"navigateToDetail(order.id)\"\n                >\n                  <!-- 订单头部 -->\n                  <view class=\"order-header\">\n                    <view class=\"order-info\">\n                      <text class=\"order-time\">{{ formatTime(order.created_at) }}</text>\n                    </view>\n                    <view class=\"order-status\" :class=\"getStatusClass(order.status)\">\n                      <text class=\"status-text\">{{ getStatusText(order.status) }}</text>\n                    </view>\n                  </view>\n  \n                \n  \n                  <!-- 服务信息 -->\n                  <view class=\"service-info\">\n                    <image :src=\"$imgBaseUrl + order.service_image_url\" class=\"service-image\" mode=\"aspectFill\" />\n                    <view class=\"service-details\">\n                      <text class=\"service-name\">{{ order.service_name }}</text>\n                      <view class=\"service-meta\">\n                        <text class=\"service-price\">¥{{ order.unit_price }}/{{ order.unit }}</text>\n                        <text class=\"service-duration\">x{{ order.quantity }}</text>\n                      </view>\n                      <view class=\"service-amount\">\n                        <text class=\"amount-label\">总金额：</text>\n                        <text class=\"amount-value\">¥{{ order.total_amount }}</text>\n                      </view>\n                    </view>\n                  </view>\n  \n                  <!-- 服务信息 服务地址和时间 -->\n                  <view v-if=\"[2, 3, 4, 5, 11].includes(order.status)\" class=\"service-location-time\">\n\n                    <view class=\"location-info\" v-if=\"order.status != 2 && order.user\">\n                      <text class=\"location-label\">服务信息：</text>\n                      <text class=\"location-value\">{{ order?.user?.nick_name }}  {{ order?.user?.phone }}</text>\n                    </view>\n                    <view class=\"location-info\">\n                      <text class=\"location-label\">服务地址：</text>\n                      <text class=\"location-value\">{{ order.service_address }}</text>\n                    </view>\n                    <view class=\"time-info\">\n                      <text class=\"time-label\">预约时间：</text>\n                      <text class=\"time-value\">{{ formatServiceDateTime(order.service_date, order.service_time) }}</text>\n                    </view>\n                  </view>\n\n                  <!-- 状态4的提示语 -->\n                  <view v-if=\"order.status === 4\" class=\"tip-container\">\n                    <view class=\"auto-start-tip\">\n                      <image src=\"@/static/icons/common/shijian.png\" class=\"tip-icon\" mode=\"aspectFit\" />\n                      <text class=\"tip-text\">您已到达服务地点，5分钟后将自动开始计时服务</text>\n                    </view>\n                  </view>\n  \n                  <!-- 操作按钮 -->\n                  <view class=\"order-actions\">\n                    <view \n                      v-for=\"(action, actionIndex) in getOrderActions(order.status)\" \n                      :key=\"actionIndex\"\n                      class=\"action-btn\"\n                      :class=\"action.type\"\n                      @click.stop=\"handleOrderAction(action.action, order)\"\n                    >\n                      <text class=\"action-text\">{{ action.text }}</text>\n                    </view>\n                  </view>\n                </view>\n  \n                <!-- 加载更多 -->\n                <view v-if=\"hasMore && getTabOrderList(tab.value).length > 0\" class=\"load-more\">\n                  <text v-if=\"isLoadingMore\" class=\"loading-text\">加载中...</text>\n                </view>\n              </view>\n            </scroll-view>\n          </swiper-item>\n        </swiper>\n      </view>\n    </view>\n  </template>\n  \n  <script setup>\n  import { ref, computed, watch, onUnmounted } from 'vue'\n  import { onLoad } from '@dcloudio/uni-app'\n  import { \n  getCompanionOrderList, \n  deleteCompanionOrder,\n  acceptCompanionOrder,\n  rejectCompanionOrder,\n  arrivedCompanionOrder,\n  departCompanionOrder,\n  startCompanionService,\n  endCompanionService\n} from '@/api/order.js'\n  \n  // 页面状态\n  const currentStatus = ref('all')\n  const currentTabIndex = ref(0)\n  const isRefreshing = ref(false)\n  const isLoading = ref(false)\n  const isLoadingMore = ref(false)\n  const hasMore = ref(true)\n  const page = ref(1)\n  const pageSize = ref(20)\n  const companionId = ref(null)\n  \n  // 订单列表数据缓存 - 为每个状态维护独立的列表\n  const orderListCache = ref({})\n  const orderListData = ref({\n    'all': [],\n    'pending_accept': [],\n    'pending_service': [],\n    'in_service': [],\n    'completed': []\n  })\n  \n  // 防抖定时器\n  let swiperChangeTimer = null\n  \n  // 页面卸载时清除定时器\n  onUnmounted(() => {\n    if (swiperChangeTimer) {\n      clearTimeout(swiperChangeTimer)\n    }\n  })\n  \n  // 状态筛选标签\n  const statusTabs = ref([\n    { label: '全部', value: 'all', count: 0 },\n    { label: '待接单', value: 'pending_accept', count: 0 },\n    { label: '待服务', value: 'pending_service', count: 0 },\n    { label: '服务中', value: 'in_service', count: 0 },\n    { label: '已完成', value: 'completed', count: 0 }\n  ])\n  \n  // 处理页面参数\n  onLoad((options) => {\n    console.log('友伴订单页面接收到的参数:', options)\n    \n    // 保存companion_id\n    if (options.companion_id) {\n      console.log('设置companion_id为:', options.companion_id)\n      companionId.value = options.companion_id\n    }\n    \n    if (options.status) {\n      console.log('设置订单状态为:', options.status)\n      currentStatus.value = options.status\n      // 设置对应的选项卡索引\n      const statusIndex = statusTabs.value.findIndex(tab => tab.value === options.status)\n      if (statusIndex !== -1) {\n        currentTabIndex.value = statusIndex\n      }\n      // 重置页面状态\n      page.value = 1\n      hasMore.value = true\n      // 清除缓存，强制重新加载\n      delete orderListCache.value[options.status]\n    } else {\n      console.log('没有传递状态参数，使用默认状态: all')\n      currentStatus.value = 'all'\n      currentTabIndex.value = 0\n    }\n    \n    // 在onLoad中加载数据\n    console.log('onLoad中加载数据，当前状态:', currentStatus.value)\n    loadOrderList()\n  })\n  \n  // 监听状态变化\n  watch(currentStatus, (newStatus, oldStatus) => {\n    console.log('状态变化:', oldStatus, '->', newStatus)\n  })\n  \n  // 切换状态筛选\n  const switchStatus = async (status) => {\n    if (currentStatus.value === status) return // 避免重复切换\n    \n    currentStatus.value = status\n    const statusIndex = statusTabs.value.findIndex(tab => tab.value === status)\n    if (statusIndex !== -1) {\n      currentTabIndex.value = statusIndex\n    }\n    \n    // 检查缓存中是否已有该状态的数据\n    if (orderListCache.value[status]) {\n      // 从缓存恢复数据\n      orderListData.value[status] = orderListCache.value[status].list\n      page.value = orderListCache.value[status].page\n      hasMore.value = orderListCache.value[status].hasMore\n    } else {\n      // 缓存中没有数据，需要请求\n      page.value = 1\n      hasMore.value = true\n      orderListData.value[status] = []\n      \n      try {\n        await loadOrderList()\n      } catch (error) {\n        console.error('切换状态失败:', error)\n      }\n    }\n  }\n  \n  // swiper滑动改变时的处理\n  const onSwiperChange = async (e) => {\n    const index = e.detail.current\n    const newStatus = statusTabs.value[index].value\n    const oldStatus = currentStatus.value\n    \n    currentTabIndex.value = index\n    currentStatus.value = newStatus\n    \n    // 清除之前的定时器\n    if (swiperChangeTimer) {\n      clearTimeout(swiperChangeTimer)\n    }\n    \n    // 如果切换到新的状态且该状态未加载数据，则延迟加载数据（防抖）\n    if (oldStatus !== newStatus && !orderListCache.value[newStatus]) {\n      swiperChangeTimer = setTimeout(async () => {\n        page.value = 1\n        hasMore.value = true\n        orderListData.value[newStatus] = []\n        await loadOrderList()\n      }, 300) // 300ms防抖延迟\n    }\n  }\n  \n  // 获取指定状态的订单列表\n  const getTabOrderList = (status) => {\n    return orderListData.value[status] || []\n  }\n  \n  // 加载订单列表\n  const loadOrderList = async () => {\n    if (isLoading.value) return\n    \n    isLoading.value = true\n    \n    try {\n      const params = {\n        page: page.value,\n        page_size: pageSize.value,\n        companion_id: Number(companionId.value)\n      }\n      \n      // 根据状态添加不同的参数\n      if (currentStatus.value === 'all') {\n        // 全部状态不传状态参数\n      } else if (currentStatus.value === 'pending_accept') {\n        params.status = 2\n      } else if (currentStatus.value === 'pending_service') {\n        params.status_group = 'pending_service'\n      } else if (currentStatus.value === 'in_service') {\n        params.status = 5\n      } else if (currentStatus.value === 'completed') {\n        params.status = 6\n      }\n      \n      const response = await getCompanionOrderList(params)\n      console.log(\"response.data\", response.data)\n      \n      if (response.data.code === 0) {\n        const { list, total } = response.data.data\n        \n        if (page.value === 1) {\n          orderListData.value[currentStatus.value] = list || []\n          // 更新当前状态的计数\n          updateCurrentStatusCount(total)\n        } else {\n          orderListData.value[currentStatus.value].push(...(list || []))\n        }\n        \n        hasMore.value = orderListData.value[currentStatus.value].length < total\n        \n        // 缓存当前状态的数据\n        orderListCache.value[currentStatus.value] = {\n          list: [...orderListData.value[currentStatus.value]],\n          page: page.value,\n          hasMore: hasMore.value\n        }\n      } else {\n        throw new Error(response.data.msg || '获取订单列表失败')\n      }\n    } catch (error) {\n      console.error('加载订单列表失败:', error)\n      uni.showToast({\n        title: error.message || '加载失败',\n        icon: 'none'\n      })\n    } finally {\n      isLoading.value = false\n    }\n  }\n  \n  // 更新当前状态的计数\n  const updateCurrentStatusCount = (total) => {\n    const currentTab = statusTabs.value.find(tab => tab.value === currentStatus.value)\n    if (currentTab) {\n      currentTab.count = total || 0\n    }\n  }\n  \n  // 下拉刷新\n  const onRefresh = async () => {\n    if (isRefreshing.value) return // 防止重复刷新\n    \n    isRefreshing.value = true\n    page.value = 1\n    hasMore.value = true\n    \n    // 清除当前状态的缓存，强制重新加载\n    delete orderListCache.value[currentStatus.value]\n    \n    try {\n      await loadOrderList()\n      \n      // 模拟加载时间，确保用户能看到刷新动画\n      await new Promise(resolve => setTimeout(resolve, 800))\n    } catch (error) {\n      console.error('刷新失败:', error)\n    } finally {\n      isRefreshing.value = false\n    }\n  }\n  \n  const onRefreshRestore = () => {\n    isRefreshing.value = false\n  }\n  \n  // 加载更多\n  const loadMore = async () => {\n    if (isLoadingMore.value || !hasMore.value) return\n    \n    isLoadingMore.value = true\n    page.value++\n    \n    try {\n      await loadOrderList()\n    } catch (error) {\n      console.error('加载更多失败:', error)\n      page.value--\n    } finally {\n      isLoadingMore.value = false\n    }\n  }\n  \n  // 获取状态样式类\n  const getStatusClass = (status) => {\n    const statusMap = {\n      1: 'status-pending',      // 待付款\n      2: 'status-to-serve',     // 已支付待确认\n      3: 'status-to-serve',     // 已确认待到达\n      4: 'status-to-serve',     // 已到达待开始\n      5: 'status-in-progress',  // 进行中\n      6: 'status-completed',    // 已完成\n      7: 'status-cancelled',    // 已取消\n      8: 'status-cancelled',    // 已取消（原已退款）\n      9: 'status-cancelled',    // 已取消（原退款中）\n      11: 'status-to-serve'     // 已确认待开始出发\n    }\n    return statusMap[status] || 'status-default'\n  }\n  \n  // 获取状态文本\n  const getStatusText = (status) => {\n    const statusMap = {\n      1: '待付款',\n      2: '等待接单',\n      3: '我已出发',\n      4: '已到达，等待开始服务',\n      5: '服务中',\n      6: '已完成',\n      7: '已取消',\n      8: '已取消',\n      9: '已取消',\n      11: '待服务'\n    }\n    return statusMap[status] || '未知状态'\n  }\n  \n  // 获取订单操作按钮\n  const getOrderActions = (status) => {\n    const actionMap = {\n      2: [ // 已支付待确认\n        { text: '拒绝', action: 'reject', type: 'secondary' },\n        { text: '接单', action: 'accept', type: 'primary' }\n      ],\n      3: [ // 已确认待到达\n        { text: '电话联系', action: 'contact', type: 'secondary' },\n        { text: '我已到达服务地点', action: 'arrived', type: 'primary' }\n      ],\n      4: [ // 已到达待开始\n        { text: '电话联系', action: 'call', type: 'secondary' }\n      ],\n      5: [ // 服务中\n        { text: '电话联系', action: 'contact', type: 'secondary' },\n        { text: '结束服务', action: 'end', type: 'primary' }\n      ],\n      6: [ // 已完成\n        { text: '查看评价', action: 'review', type: 'secondary' },\n        { text: '删除订单', action: 'delete', type: 'secondary' }\n        // { text: '再次服务', action: 'rebook', type: 'primary' }\n      ],\n      7: [ // 已取消\n        { text: '删除订单', action: 'delete', type: 'secondary' }\n      ],\n      8: [ // 已取消（原已退款）\n\n        { text: '删除订单', action: 'delete', type: 'secondary' }\n      ],\n      9: [ // 已取消（原退款中）\n        { text: '订单已取消，给客户退款中', action: 'info', type: 'info' }\n      ],\n      11: [ // 已确认待开始出发\n        { text: '电话联系', action: 'contact', type: 'secondary' },\n        { text: '我已出发', action: 'depart', type: 'depart' }\n      ]\n    }\n    return actionMap[status] || []\n  }\n  \n  // 处理订单操作\n  const handleOrderAction = (action, order) => {\n    switch (action) {\n      case 'contact':\n        handleContactCustomer(order)\n        break\n      case 'accept':\n        handleAcceptOrder(order)\n        break\n      case 'reject':\n        handleRejectOrder(order)\n        break\n      case 'arrived':\n        handleArrived(order)\n        break\n      case 'depart':\n        handleDepart(order)\n        break\n      case 'call':\n        handleCallCustomer(order)\n        break\n      case 'start':\n        handleStartService(order)\n        break\n      case 'end':\n        handleEndService(order)\n        break\n      case 'review':\n        handleViewReview(order)\n        break\n      case 'rebook':\n        handleRebookService(order)\n        break\n      case 'delete':\n        handleDeleteOrder(order)\n        break\n      case 'info':\n        // 信息提示，不执行任何操作\n        break\n    }\n  }\n  \n  // 电话联系客户\n  const handleContactCustomer = (order) => {\n    if (order.user && order.user.phone) {\n      uni.showModal({\n        title: '电话联系',\n        content: `是否拨打客户 ${order.user.nick_name} 的电话？`,\n        confirmText: '拨打',\n        cancelText: '取消',\n        success: (res) => {\n          if (res.confirm) {\n            uni.makePhoneCall({\n              phoneNumber: order.user.phone\n            })\n          }\n        }\n      })\n    }\n  }\n\n  // 接单\n  const handleAcceptOrder = (order) => {\n    uni.showModal({\n      title: '确认接单',\n      content: '确定要接受这个订单吗？',\n      confirmText: '接单',\n      cancelText: '取消',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            uni.showLoading({\n              title: '处理中...'\n            })\n            \n            const response = await acceptCompanionOrder({ \n              order_id: order.id,\n              companion_id: Number(companionId.value)\n            })\n            \n            if (response.data.code === 0) {\n              uni.showToast({\n                title: '接单成功',\n                icon: 'success'\n              })\n              \n              // 跳转到待服务状态\n              const pendingServiceIndex = statusTabs.value.findIndex(tab => tab.value === 'pending_service')\n              if (pendingServiceIndex !== -1) {\n                currentTabIndex.value = pendingServiceIndex\n                currentStatus.value = 'pending_service'\n              }\n              \n              // 清除待服务状态的缓存，强制重新加载\n              delete orderListCache.value['pending_service']\n              \n              // 刷新待服务状态的列表\n              page.value = 1\n              hasMore.value = true\n              orderListData.value['pending_service'] = []\n              await loadOrderList()\n            } else {\n              throw new Error(response.data.msg || '接单失败')\n            }\n          } catch (error) {\n            console.error('接单失败:', error)\n            uni.showToast({\n              title: error.message || '接单失败',\n              icon: 'none'\n            })\n          } finally {\n            uni.hideLoading()\n          }\n        }\n      }\n    })\n  }\n\n  // 拒绝订单\n  const handleRejectOrder = (order) => {\n    uni.showModal({\n      title: '拒绝订单',\n      content: '确定要拒绝这个订单吗？',\n      confirmText: '拒绝',\n      cancelText: '取消',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            uni.showLoading({\n              title: '处理中...'\n            })\n            \n            const response = await rejectCompanionOrder({ \n              order_id: order.id,\n              companion_id: Number(companionId.value)\n            })\n            \n            if (response.data.code === 0) {\n              uni.showToast({\n                title: '已拒绝订单',\n                icon: 'success'\n              })\n              \n              // 刷新列表\n              onRefresh()\n            } else {\n              throw new Error(response.data.msg || '拒绝订单失败')\n            }\n          } catch (error) {\n            console.error('拒绝订单失败:', error)\n            uni.showToast({\n              title: error.message || '操作失败',\n              icon: 'none'\n            })\n          } finally {\n            uni.hideLoading()\n          }\n        }\n      }\n    })\n  }\n\n  // 我已到达\n  const handleArrived = (order) => {\n    uni.showModal({\n      title: '确认到达',\n      content: '确认您已到达服务地点？',\n      confirmText: '确认',\n      cancelText: '取消',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            uni.showLoading({\n              title: '更新中...'\n            })\n            \n            const response = await arrivedCompanionOrder({ \n              order_id: order.id,\n              companion_id: Number(companionId.value)\n            })\n            \n            if (response.data.code === 0) {\n              uni.showToast({\n                title: '已确认到达',\n                icon: 'success'\n              })\n              \n              // 刷新列表\n              onRefresh()\n            } else {\n              throw new Error(response.data.msg || '确认到达失败')\n            }\n          } catch (error) {\n            console.error('确认到达失败:', error)\n            uni.showToast({\n              title: error.message || '操作失败',\n              icon: 'none'\n            })\n          } finally {\n            uni.hideLoading()\n          }\n        }\n      }\n    })\n  }\n\n  // 电话联系客户\n  const handleCallCustomer = (order) => {\n    if (order.user && order.user.phone) {\n      uni.showModal({\n        title: '电话联系',\n        content: `是否拨打客户 ${order.user.nick_name} 的电话？`,\n        confirmText: '拨打',\n        cancelText: '取消',\n        success: (res) => {\n          if (res.confirm) {\n            uni.makePhoneCall({\n              phoneNumber: order.user.phone\n            })\n          }\n        }\n      })\n    }\n  }\n\n  // 我已出发\n  const handleDepart = (order) => {\n    uni.showModal({\n      title: '确认出发',\n      content: '确认您已开始出发前往服务地点？',\n      confirmText: '确认',\n      cancelText: '取消',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            uni.showLoading({\n              title: '更新中...'\n            })\n            \n            const response = await departCompanionOrder({ \n              order_id: order.id,\n              companion_id: Number(companionId.value)\n            })\n            \n            if (response.data.code === 0) {\n              uni.showToast({\n                title: '已确认出发',\n                icon: 'success'\n              })\n              \n              // 刷新列表\n              onRefresh()\n            } else {\n              throw new Error(response.data.msg || '确认出发失败')\n            }\n          } catch (error) {\n            console.error('确认出发失败:', error)\n            uni.showToast({\n              title: error.message || '操作失败',\n              icon: 'none'\n            })\n          } finally {\n            uni.hideLoading()\n          }\n        }\n      }\n    })\n  }\n  \n  // 开始服务\n  const handleStartService = (order) => {\n    uni.showModal({\n      title: '开始服务',\n      content: '确定要开始服务吗？',\n      confirmText: '开始',\n      cancelText: '取消',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            uni.showLoading({\n              title: '更新中...'\n            })\n            \n            const response = await startCompanionService({ \n              order_id: order.id,\n              companion_id: companionId.value\n            })\n            \n            if (response.data.code === 0) {\n              uni.showToast({\n                title: '服务已开始',\n                icon: 'success'\n              })\n              \n              // 刷新列表\n              onRefresh()\n            } else {\n              throw new Error(response.data.msg || '开始服务失败')\n            }\n          } catch (error) {\n            console.error('开始服务失败:', error)\n            uni.showToast({\n              title: error.message || '操作失败',\n              icon: 'none'\n            })\n          } finally {\n            uni.hideLoading()\n          }\n        }\n      }\n    })\n  }\n  \n  // 结束服务\n  const handleEndService = (order) => {\n    uni.showModal({\n      title: '结束服务',\n      content: '确定要结束服务吗？',\n      confirmText: '结束',\n      cancelText: '取消',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            uni.showLoading({\n              title: '更新中...'\n            })\n            \n            const response = await endCompanionService({ \n              order_id: order.id,\n              companion_id: companionId.value\n            })\n            \n            if (response.data.code === 0) {\n              uni.showToast({\n                title: '服务已结束',\n                icon: 'success'\n              })\n              \n              // 刷新列表\n              onRefresh()\n            } else {\n              throw new Error(response.data.msg || '结束服务失败')\n            }\n          } catch (error) {\n            console.error('结束服务失败:', error)\n            uni.showToast({\n              title: error.message || '操作失败',\n              icon: 'none'\n            })\n          } finally {\n            uni.hideLoading()\n          }\n        }\n      }\n    })\n  }\n  \n  // 查看评价\n  const handleViewReview = (order) => {\n    uni.navigateTo({\n      url: `/subPackages/partner/review?orderId=${order.id}`\n    })\n  }\n  \n  // 再次服务\n  const handleRebookService = (order) => {\n    uni.navigateTo({\n      url: `/subPackages/partner/rebook?orderId=${order.id}`\n    })\n  }\n  \n  // 删除订单\n  const handleDeleteOrder = (order) => {\n    uni.showModal({\n      title: '删除订单',\n      content: '确定要删除这个订单吗？删除后不可恢复。',\n      confirmText: '删除',\n      cancelText: '取消',\n      success: async (res) => {\n        if (res.confirm) {\n          try {\n            uni.showLoading({\n              title: '删除中...'\n            })\n            \n            // 调用删除订单API\n            const deleteData = {\n              order_id: order.id,\n              companion_id: companionId.value\n            }\n            \n            const response = await deleteCompanionOrder(deleteData)\n            \n            if (response.data.code === 0) {\n              // 前端移除\n              orderListData.value[currentStatus.value] = orderListData.value[currentStatus.value].filter(o => o.id !== order.id)\n              uni.showToast({\n                title: '订单已删除',\n                icon: 'success'\n              })\n            } else {\n              throw new Error(response.data.msg || '删除订单失败')\n            }\n          } catch (error) {\n            console.error('删除订单失败:', error)\n            uni.showToast({\n              title: error.message || '删除失败',\n              icon: 'none'\n            })\n          } finally {\n            uni.hideLoading()\n          }\n        }\n      }\n    })\n  }\n  \n  // 跳转到订单详情\n  const navigateToDetail = (orderId) => {\n    // uni.navigateTo({\n    //   url: `/subPackages/partner/order/detail?orderId=${orderId}`\n    // })\n  }\n  \n  // 格式化时间\n  const formatTime = (timeStr) => {\n    const date = new Date(timeStr)\n    \n    // 格式化为 YYYY-MM-DD HH:mm 格式\n    const year = date.getFullYear()\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const day = String(date.getDate()).padStart(2, '0')\n    const hours = String(date.getHours()).padStart(2, '0')\n    const minutes = String(date.getMinutes()).padStart(2, '0')\n    \n    return `${year}-${month}-${day} ${hours}:${minutes}`\n  }\n  \n  // 格式化服务时间\n  const formatServiceTime = (timeStr) => {\n    if (!timeStr) return '待确认'\n    \n    const date = new Date(timeStr)\n    \n    // 格式化为 MM-DD HH:mm 格式\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const day = String(date.getDate()).padStart(2, '0')\n    const hours = String(date.getHours()).padStart(2, '0')\n    const minutes = String(date.getMinutes()).padStart(2, '0')\n    \n    return `${month}-${day} ${hours}:${minutes}`\n  }\n\n  // 格式化服务日期和时间\n  const formatServiceDateTime = (serviceDate, serviceTime) => {\n    if (!serviceDate && !serviceTime) return '待确认'\n    \n    let result = ''\n    \n    // 处理服务日期\n    if (serviceDate) {\n      const date = new Date(serviceDate)\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const weekday = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][date.getDay()]\n      result += `${year}-${month}-${day} ${weekday}`\n    }\n    \n    // 处理时间段\n    if (serviceTime) {\n      if (result) {\n        result += ' '\n      }\n      result += serviceTime\n    }\n    \n    return result || '待确认'\n  }\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  .order-container {\n    height: 100vh;\n    background-color: #F7F8FA;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n  }\n  \n  /* 状态筛选栏 */\n  .status-filter {\n    background: #FFFFFF;\n    border-bottom: 1rpx solid #f0f0f0;\n    flex-shrink: 0;\n  }\n  \n  .filter-scroll {\n    white-space: nowrap;\n  }\n  \n  .filter-tabs {\n    display: flex;\n    padding: 0rpx 10rpx 24rpx 0;\n    justify-content: space-around;\n  }\n  \n  .filter-tab {\n    display: flex;\n    align-items: center;\n    padding: 12rpx 16rpx;\n    transition: all 0.3s ease;\n    position: relative;\n    flex: 1;\n    justify-content: center;\n  }\n  \n  .filter-tab.active::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 50rpx;\n    height: 6rpx;\n    background: #7363FF;\n    border-radius: 3rpx;\n  }\n  \n  .tab-text {\n    font-size: 28rpx;\n    font-weight: 500;\n    color: #666666;\n    transition: color 0.3s ease;\n  }\n  \n  .filter-tab.active .tab-text {\n    color: #7363FF;\n    font-weight: 600;\n  }\n  \n  /* 订单列表滑动容器 */\n  .order-content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n  }\n  \n  .order-swiper {\n    flex: 1;\n    height: 100%;\n  }\n  \n  .order-scroll-view {\n    height: 100%;\n    padding:0 24rpx;\n    box-sizing: border-box;\n  }\n  \n  /* 空状态 */\n  .empty-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 120rpx 0;\n  }\n  \n  .empty-image {\n    width: 200rpx;\n    height: 200rpx;\n    margin-bottom: 32rpx;\n    opacity: 0.6;\n  }\n  \n  .empty-text {\n    font-size: 32rpx;\n    color: #999999;\n    margin-bottom: 16rpx;\n  }\n  \n  .empty-desc {\n    font-size: 26rpx;\n    color: #cccccc;\n  }\n  \n  /* 订单卡片 */\n  .order-cards {\n    display: flex;\n    flex-direction: column;\n    gap: 20rpx;\n    margin-top: 20rpx;\n  }\n  \n  .order-card {\n    background: #FFFFFF;\n    border-radius: 16rpx;\n    padding: 24rpx;\n    box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.06);\n    border: 1rpx solid #f0f0f0;\n  }\n  \n  /* 订单头部 */\n  .order-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: 20rpx;\n    padding-bottom: 20rpx;\n    border-bottom: 1rpx solid #f0f0f0;\n  }\n  \n  .order-info {\n    flex: 1;\n  }\n  \n\n  \n  .order-time {\n    font-size: 26rpx;\n    color: #999999;\n  }\n  \n  .order-status {\n    font-size: 24rpx;\n    font-weight: 500;\n  }\n  \n  .status-pending {\n    color: #ff6b35;\n  }\n  \n  .status-to-serve {\n    color: #007bff;\n  }\n  \n  .status-in-progress {\n    color: #28a745;\n  }\n  \n  .status-completed {\n    color: #6c757d;\n  }\n  \n  .status-cancelled {\n    color: #b0b0b0;\n  }\n  \n  .status-refunded {\n    color: #00bcd4;\n  }\n  \n  .status-refunding {\n    color: #ff9800;\n  }\n  \n  /* 客户信息 */\n  .customer-info {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20rpx;\n    padding-bottom: 20rpx;\n    border-bottom: 1rpx solid #f0f0f0;\n  }\n  \n  .customer-avatar {\n    width: 80rpx;\n    height: 80rpx;\n    border-radius: 50%;\n    margin-right: 16rpx;\n  }\n  \n  .customer-details {\n    flex: 1;\n  }\n  \n  .customer-name {\n    font-size: 28rpx;\n    color: #1A1A1A;\n    font-weight: 500;\n    margin-bottom: 4rpx;\n    display: block;\n  }\n  \n  .customer-phone {\n    font-size: 24rpx;\n    color: #666666;\n  }\n  \n  /* 服务信息 */\n  .service-info {\n    display: flex;\n    margin-bottom: 20rpx;\n    padding-bottom: 20rpx;\n    border-bottom: 1rpx solid #f0f0f0;\n  }\n  \n  .service-image {\n    width: 120rpx;\n    height: 120rpx;\n    border-radius: 12rpx;\n    margin-right: 20rpx;\n    flex-shrink: 0;\n  }\n  \n  .service-details {\n    flex: 1;\n  }\n  \n  .service-name {\n    font-size: 28rpx;\n    color: #1A1A1A;\n\n    margin-bottom: 8rpx;\n    display: block;\n  }\n  \n  .service-meta {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8rpx;\n  }\n  \n  .service-price {\n    font-size: 26rpx;\n    color: #1a1a1a;\n  }\n  \n  .service-duration {\n    font-size: 26rpx;\n    color: #1a1a1a;\n  }\n  \n  .service-amount {\n    display: flex;\n    align-items: center;\n    margin-top: 8rpx;\n  }\n  \n  .amount-label {\n    font-size: 26rpx;\n    color: #666666;\n  }\n  \n  .amount-value {\n    font-size: 28rpx;\n    color: #f43f5e;\n    font-weight: 600;\n  }\n  \n  /* 服务地址和时间 */\n  .service-location-time {\n    margin-bottom: 20rpx;\n    padding-bottom: 20rpx;\n    border-bottom: 1rpx solid #f0f0f0;\n  }\n  \n  .location-info,\n  .time-info {\n    display: flex;\n    align-items: flex-start;\n    margin-bottom: 12rpx;\n  }\n  \n  .location-info:last-child,\n  .time-info:last-child {\n    margin-bottom: 0;\n  }\n  \n  .location-label,\n  .time-label {\n    font-size: 26rpx;\n    color: #666666;\n    min-width: 140rpx;\n    flex-shrink: 0;\n  }\n  \n  .location-value,\n  .time-value {\n    font-size: 26rpx;\n    color: #1a1a1a;\n    flex: 1;\n    word-break: break-all;\n    line-height: 1.4;\n  }\n  \n  /* 操作按钮 */\n  .order-actions {\n    display: flex;\n    gap: 16rpx;\n    justify-content: flex-end;\n  }\n  \n  .action-btn {\n    padding: 16rpx 32rpx;\n    border-radius: 99999rpx;\n    font-size: 26rpx;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    border: 1rpx solid transparent;\n    box-sizing: border-box;\n    height: 72rpx;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .action-btn.primary {\n  background: #7363FF;\n  color: #FFFFFF;\n  border-color: #7363FF;\n}\n\n.action-btn.primary:active {\n  background: #6354e6;\n  transform: scale(0.96);\n}\n\n.action-btn.depart {\n  background: #4CAF50;\n  color: #FFFFFF;\n  border-color: #4CAF50;\n}\n\n.action-btn.depart:active {\n  background: #45a049;\n  transform: scale(0.96);\n}\n  \n  .action-btn.secondary {\n    background: #FFFFFF;\n    color: #666666;\n    border-color: #e9ecef;\n  }\n  \n  .action-btn.secondary:active {\n    background: #f8f9fa;\n    transform: scale(0.96);\n  }\n\n  .action-btn.info {\n    background: transparent;\n    color: #999999;\n    border-color: transparent;\n    cursor: default;\n    padding: 16rpx 0;\n  }\n\n  .action-btn.info:active {\n    background: transparent;\n    transform: none;\n  }\n\n  /* 提示容器 */\n  .tip-container {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 20rpx;\n  }\n\n  /* 自动开始服务提示 */\n  .auto-start-tip {\n    background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\n    border: 1rpx solid #ffc107;\n    border-radius: 12rpx;\n    padding: 12rpx 16rpx;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    max-width: fit-content;\n    gap: 8rpx;\n  }\n\n  .tip-icon {\n    width: 34rpx;\n    height: 34rpx;\n    flex-shrink: 0;\n  }\n\n  .tip-text {\n    font-size: 24rpx;\n    color: #856404;\n    font-weight: 500;\n    text-align: center;\n    line-height: 1.4;\n    white-space: nowrap;\n  }\n  \n  /* 加载更多 */\n  .load-more {\n    display: flex;\n    justify-content: center;\n    padding: 32rpx 0;\n  }\n  \n  .loading-text {\n    font-size: 26rpx;\n    color: #999999;\n  }\n</style>","import MiniProgramPage from '/Users/xiaoqiang/Documents/friemd/firend-loving-app/subPackages/partner/order/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","onUnmounted","onLoad","uni","watch","getCompanionOrderList","acceptCompanionOrder","rejectCompanionOrder","arrivedCompanionOrder","departCompanionOrder","startCompanionService","endCompanionService","deleteCompanionOrder"],"mappings":"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"}