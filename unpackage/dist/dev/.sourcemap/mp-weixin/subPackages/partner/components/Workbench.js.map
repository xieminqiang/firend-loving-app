{"version":3,"file":"Workbench.js","sources":["subPackages/partner/components/Workbench.vue","/Users/xiaoqiang/Documents/friemd/firend-loving-app/subPackages/partner/components/Workbench.vue?type=component"],"sourcesContent":["<template>\n    <scroll-view class=\"workbench-content\" scroll-y=\"true\" refresher-enabled=\"true\" :refresher-triggered=\"isRefreshing\" @refresherrefresh=\"onRefresh\" @refresherrestore=\"onRefreshRestore\">\n    \n      <!-- 上线/下线状态控制 -->\n      <view class=\"status-control\">\n        <view class=\"status-card\" :class=\"{ 'online': isOnline }\">\n          <!-- 左侧：状态信息和头像 -->\n          <view class=\"status-left\">\n            <!-- 头像显示 -->\n            <view class=\"avatar-container\" v-if=\"applicationInfo && applicationInfo.avatar\">\n              <image :src=\"applicationInfo.avatar\" class=\"avatar-img\" mode=\"aspectFill\" />\n            </view>\n            \n            <view class=\"status-info\">\n              <view class=\"status-indicator\">\n                <view class=\"status-dot\" :class=\"{ 'active': isOnline }\"></view>\n                <text class=\"status-text\">{{ isOnline ? '已上线' : '已下线' }}</text>\n              </view>\n              <text class=\"status-desc\">{{ isOnline ? '正在接单中' : '暂停接单' }}</text>\n            </view>\n          </view>\n          \n          <!-- 右侧：切换按钮 -->\n          <view class=\"status-right\">\n            <view class=\"toggle-button\" :class=\"{ 'online': isOnline }\" @click=\"toggleStatus\">\n          <!--    <view class=\"toggle-icon\">\n                <view class=\"icon-container\">\n                  <view class=\"icon-play\" v-if=\"!isOnline\"></view>\n                  <view class=\"icon-pause\" v-if=\"isOnline\"></view>\n                </view>\n              </view> -->\n              <text class=\"toggle-text\">{{ isOnline ? '下线休息' : '开始上线' }}</text>\n            </view>\n          </view>\n        </view>\n      </view>\n      \n      <!-- 位置管理 -->\n      <view class=\"status-control\">\n        <view class=\"location-card\">\n          <view class=\"location-content\">\n            <view class=\"flex-between\">\n        <!--      <view class=\"location-header\">\n              <image class=\"location-icon\" src=\"@/static/icons/partner/dizhi.png\" mode=\"aspectFit\" />\n              <text class=\"location-title\">当前位置</text>\n            </view> -->\n            <view class=\"location-actions\">\n              <view class=\"action-btn refresh-btn\" @click=\"refreshLocation\">\n                <image class=\"btn-icon\" src=\"@/static/icons/partner/shuaxin.png\" mode=\"aspectFit\" />\n                <text class=\"location-btn-text\">刷新位置</text>\n              </view>\n              <view class=\"action-btn select-btn\" @click=\"selectLocation\">\n                <image class=\"btn-icon\" src=\"@/static/icons/partner/shoudong.png\" mode=\"aspectFit\" />\n                <text class=\"location-btn-text\">手动选择</text>\n              </view>\n            </view>\n              </view>\n           \n            <view class=\"location-info\">\n              <text class=\"location-address\">{{ currentLocation || '正在获取位置...' }}</text>\n            \n            </view>\n           \n          </view>\n        </view>\n      </view>\n      \n      <!-- 日期安排 -->\n      <view class=\"schedule-control\">\n          <view class=\"schedule-card\" @click=\"goToDataSelect\">\n            <view class=\"schedule-header\">\n              <view class=\"schedule-title\">\n                <image class=\"schedule-icon\" src=\"@/static/icons/profile/riqi.png\" mode=\"aspectFit\" />\n                <text>日期安排</text>\n              </view>\n              <text class=\"schedule-status\" :class=\"{ 'loading': scheduleLoading }\">{{ currentScheduleStatus }}</text>\n            </view>\n          <view class=\"schedule-content\">\n            <text class=\"schedule-desc\">{{ todaySchedule }}</text>\n            <view class=\"schedule-actions\">\n              <view class=\"action-btn schedule-btn\" @click.stop=\"refreshScheduleData\">\n                <text class=\"btn-text\">{{ scheduleLoading ? '刷新中...' : '刷新' }}</text>\n              </view>\n              <view class=\"action-btn schedule-btn\">设置时间</view>\n            </view>\n          </view>\n        </view>\n      </view>\n      \n      <!-- 最近订单 -->\n      <view class=\"recent-orders\">\n        <view class=\"section-header\">\n          <text class=\"section-title\">最近订单</text>\n          <text class=\"view-all\" @click=\"viewAllOrders\">查看全部</text>\n        </view>\n        \n        <!-- 加载状态 -->\n        <view v-if=\"recentOrdersLoading\" class=\"loading-orders\">\n          <text class=\"loading-text\">加载中...</text>\n        </view>\n        \n        <!-- 空状态 -->\n        <view v-else-if=\"recentOrders.length === 0\" class=\"empty-orders\">\n          <image src=\"@/static/images/empty.png\" class=\"empty-icon\" mode=\"aspectFit\" />\n          <text class=\"empty-text\">暂无订单</text>\n          <text class=\"empty-desc\">开始接单，获得收入</text>\n        </view>\n        \n        <!-- 订单列表 -->\n        <view v-else class=\"order-list\">\n          <view \n            v-for=\"order in recentOrders\" \n            :key=\"order.id\"\n            class=\"order-item\"\n            @click=\"navigateToOrderDetail(order.id)\"\n          >\n            <!-- 订单头部 -->\n            <view class=\"order-header\">\n              <view class=\"order-info\">\n                <text class=\"order-time\">{{ formatOrderTime(order.created_at) }}</text>\n              </view>\n              <view class=\"order-status\" :class=\"getOrderStatusClass(order.status)\">\n                <text class=\"status-text\">{{ getOrderStatusText(order.status) }}</text>\n              </view>\n            </view>\n            \n            <!-- 服务信息 -->\n            <view class=\"service-info\">\n              <image :src=\"$imgBaseUrl + order.service_image_url\" class=\"service-image\" mode=\"aspectFill\" />\n              <view class=\"service-details\">\n                <text class=\"service-name\">{{ order.service_name }}</text>\n                <view class=\"service-meta\">\n                  <text class=\"service-price\">¥{{ order.unit_price }}/{{ order.unit }}</text>\n                  <text class=\"service-duration\">x{{ order.quantity }}</text>\n                </view>\n                <view class=\"service-amount\">\n                  <text class=\"amount-label\">总金额：</text>\n                  <text class=\"amount-value\">¥{{ order.total_amount }}</text>\n                </view>\n              </view>\n            </view>\n            \n            <!-- 服务地址和时间 -->\n            <view v-if=\"[2, 3, 4, 5].includes(order.status)\" class=\"service-location-time\">\n              <view class=\"location-info\" v-if=\"order.status != 2 && order.user\">\n                <text class=\"location-label\">服务信息：</text>\n                <text class=\"location-value\">{{ order?.user?.nick_name }} {{ order?.user?.phone }}</text>\n              </view>\n              <view class=\"location-info\">\n                <text class=\"location-label\">服务地址：</text>\n                <text class=\"location-value\">{{ order.service_address }}</text>\n              </view>\n              <view class=\"time-info\">\n                <text class=\"time-label\">预约时间：</text>\n                <text class=\"time-value\">{{ formatServiceDateTime(order.service_date, order.service_time) }}</text>\n              </view>\n            </view>\n            \n            <!-- 操作按钮 -->\n            <view class=\"order-actions\">\n              <view \n                v-for=\"(action, actionIndex) in getOrderActions(order.status)\" \n                :key=\"actionIndex\"\n                class=\"action-btn\"\n                :class=\"action.type\"\n                @click.stop=\"handleOrderAction(action.action, order)\"\n              >\n                <text class=\"action-text\">{{ action.text }}</text>\n              </view>\n            </view>\n          </view>\n        </view>\n\n      </view>\n       <view style=\"height: 180rpx;\"></view>\n    </scroll-view>\n  \n  <!-- 视频上传弹框 -->\n  <VideoUploadModal \n    :show=\"showVideoUploadModal\" \n    :applicationInfo=\"applicationInfo\"\n    @close=\"hideVideoUploadModal\"\n    @success=\"handleVideoUploadSuccess\"\n  />\n  \n\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch, nextTick } from 'vue'\nimport { getCurrentLocationAddress, getCacheStatus } from '@/utils/location.js'\nimport { updateCompanionOnlineStatus, getCompanionSchedule } from '@/api/user.js'\nimport { \n  getCompanionActiveOrders,\n  acceptCompanionOrder,\n  rejectCompanionOrder,\n  arrivedCompanionOrder,\n  endCompanionService\n} from '@/api/order.js'\nimport { processAddress, analyzeAddress } from '@/utils/address.js'\nimport VideoUploadModal from './VideoUploadModal.vue'\n\n// 定义props\nconst props = defineProps({\n  applicationInfo: {\n    type: Object,\n    default: null\n  }\n})\n\n// 状态管理\nconst isOnline = ref(false)\nconst currentLocation = ref('')\nconst locationUpdateTime = ref('')\nconst isInitialized = ref(false)\nconst isUpdatingStatus = ref(false) // 防止重复点击\n\n// 视频上传相关状态\nconst showVideoUploadModal = ref(false)\n\n// 日期安排相关状态\nconst scheduleData = ref([])\nconst scheduleLoading = ref(false)\n\n// 最近订单相关状态\nconst recentOrders = ref([])\nconst recentOrdersLoading = ref(false)\n\n// 刷新相关状态\nconst isRefreshing = ref(false)\n\n// 计算属性：检查applicationInfo是否有效\nconst hasValidApplicationInfo = computed(() => {\n  return props.applicationInfo && typeof props.applicationInfo === 'object'\n})\n\n// 获取今日的日期数据\nconst getTodayScheduleData = () => {\n  if (!scheduleData.value || scheduleData.value.length === 0) {\n    return null\n  }\n  \n  // 查找今天的数据\n  const todayData = scheduleData.value.find(item => item.is_today === true)\n  return todayData\n}\n\n// 计算今日可约时间段数量\nconst getTodayAvailableSlots = () => {\n  const todayData = getTodayScheduleData()\n  if (!todayData || !todayData.schedule) {\n    return 0\n  }\n  \n  return Object.values(todayData.schedule).filter(status => status === 1).length\n}\n\n// 计算今日已约时间段数量\nconst getTodayBookedSlots = () => {\n  const todayData = getTodayScheduleData()\n  if (!todayData || !todayData.schedule) {\n    return 0\n  }\n  \n  return Object.values(todayData.schedule).filter(status => status === 3).length\n}\n\n// 日期安排相关计算属性\nconst currentScheduleStatus = computed(() => {\n  if (scheduleLoading.value) {\n    return '加载中...'\n  }\n  \n  const todayData = getTodayScheduleData()\n  if (!todayData) {\n    return '未设置'\n  }\n  \n  const availableCount = getTodayAvailableSlots()\n  const bookedCount = getTodayBookedSlots()\n  \n  if (bookedCount > 0) {\n    return `${bookedCount}个已约`\n  } else if (availableCount === 48) {\n    return '全天可约'\n  } else if (availableCount === 0) {\n    return '全天休息'\n  } else {\n    return `${availableCount}个可约`\n  }\n})\n\nconst todaySchedule = computed(() => {\n  if (scheduleLoading.value) {\n    return '正在加载今日安排...'\n  }\n  \n  const todayData = getTodayScheduleData()\n  if (!todayData) {\n    return '今日未设置时间安排'\n  }\n  \n  const availableCount = getTodayAvailableSlots()\n  const bookedCount = getTodayBookedSlots()\n  \n  if (bookedCount > 0) {\n    return `今日有${bookedCount}个时间点已被预约`\n  } else if (availableCount === 48) {\n    return '今日全天可接单'\n  } else if (availableCount === 0) {\n    return '今日休息，暂停接单'\n  } else {\n    return `今日可接单 ${availableCount}个时间点`\n  }\n})\n\n// 从applicationInfo中获取默认的在线状态\nconst initOnlineStatus = () => {\n  if (hasValidApplicationInfo.value && typeof props.applicationInfo.is_online !== 'undefined') {\n    isOnline.value = props.applicationInfo.is_online === 1\n    console.log('从applicationInfo获取在线状态:', isOnline.value, '原始值:', props.applicationInfo.is_online)\n  } else {\n    isOnline.value = false\n    console.log('使用默认在线状态: 下线')\n  }\n}\n\n// 初始化组件\nconst initializeComponent = async () => {\n  if (isInitialized.value) {\n    console.log('组件已经初始化过，跳过重复初始化')\n    return\n  }\n  \n  console.log('开始初始化Workbench组件')\n  \n  // 等待下一个tick确保DOM更新\n  await nextTick()\n  \n  // 初始化在线状态\n  initOnlineStatus()\n  \n  // 获取位置信息（不强制刷新）\n  getLocationInfo()\n  \n  // 获取日期安排数据\n  await fetchScheduleData()\n  \n  // 获取最近订单数据\n  await fetchRecentOrders()\n  \n  isInitialized.value = true\n  console.log('Workbench组件初始化完成')\n}\n\n// 监听applicationInfo变化\nwatch(() => props.applicationInfo, (newVal, oldVal) => {\n  console.log('applicationInfo发生变化:', { old: oldVal, new: newVal })\n  \n  if (newVal && hasValidApplicationInfo.value) {\n    // 如果组件已经初始化过，只更新在线状态、日期安排数据和最近订单数据\n    if (isInitialized.value) {\n      console.log('组件已初始化，更新在线状态、日期安排数据和最近订单数据')\n      initOnlineStatus()\n      fetchScheduleData()\n      fetchRecentOrders()\n    } else {\n      // 首次初始化\n      initializeComponent()\n    }\n  }\n}, { immediate: true, deep: true })\n\n// 切换上线/下线状态\nconst toggleStatus = async () => {\n  if (isUpdatingStatus.value) {\n    console.log('正在更新状态，忽略重复点击')\n    return\n  }\n  \n  const newStatus = !isOnline.value\n  const statusText = newStatus ? '上线' : '下线'\n  \n  // 检查是否需要上传视频\n  if (newStatus && hasValidApplicationInfo.value && props.applicationInfo.can_accept_orders === 'N') {\n    // 检查是否已有视频且已通过审核\n    if (!props.applicationInfo.intro_video_url || props.applicationInfo.video_review_status !== 'approved') {\n      // 显示视频上传弹框\n      showVideoUploadModal.value = true\n      return\n    }\n  }\n  \n  uni.showModal({\n    title: `确认${statusText}`,\n    content: newStatus ? '上线后将开始接收订单，确认上线吗？' : '下线后将停止接收订单，确认下线吗？',\n    success: async (res) => {\n      if (res.confirm) {\n        await updateOnlineStatus(newStatus)\n      }\n    }\n  })\n}\n\n// 更新在线状态到服务器\nconst updateOnlineStatus = async (newStatus) => {\n  isUpdatingStatus.value = true\n  \n  try {\n    // 获取当前位置信息\n    let locationInfo = null\n    \n    if (newStatus) {\n      // 上线时需要获取位置信息\n      uni.showLoading({ title: '获取位置中...' })\n      \n      try {\n        locationInfo = await getCurrentLocationAddress(false) // 强制刷新位置\n        console.log('获取位置成功:', locationInfo)\n      } catch (error) {\n        console.error('获取位置失败:', error)\n        uni.hideLoading()\n        uni.showToast({\n          title: '获取位置失败，无法上线',\n          icon: 'none'\n        })\n        return\n      }\n    } else {\n      // 下线时可以使用缓存的位置信息\n      const cacheStatus = getCacheStatus()\n      if (cacheStatus.hasCache) {\n        locationInfo = {\n          latitude: cacheStatus.coordinates.latitude,\n          longitude: cacheStatus.coordinates.longitude,\n          address: cacheStatus.address\n        }\n      }\n    }\n    \n    // 处理地址字符串\n    const processedAddress = processAddress(locationInfo ? locationInfo.address : '')\n    \n    // 准备请求数据\n    const requestData = {\n      is_online: newStatus ? 1 : 0,\n      latitude: locationInfo ? locationInfo.latitude : null,\n      longitude: locationInfo ? locationInfo.longitude : null,\n      location_text: processedAddress\n    }\n    \n    // 添加详细的调试信息\n    console.log('准备更新在线状态:', requestData)\n  \n    \n    // 调用API更新状态\n    const response = await updateCompanionOnlineStatus(requestData)\n     console.log('在线', response )\n    if (response.data && response.data.code === 0) {\n      // 更新成功\n      isOnline.value = newStatus\n      \n      // 更新位置显示\n      if (locationInfo) {\n        currentLocation.value = locationInfo.address\n        locationUpdateTime.value = new Date().toLocaleTimeString()\n      }\n      \n      uni.hideLoading()\n      uni.showToast({\n        title: newStatus ? '已上线，开始接单' : '已下线，暂停接单',\n       icon: 'none'\n      })\n      \n      console.log('在线状态更新成功:', response.data)\n    } else {\n      // 更新失败\n      uni.hideLoading()\n      uni.showToast({\n        title: response.data?.msg || '状态更新失败',\n       icon: 'none'\n      })\n      console.error('在线状态更新失败:', response.data)\n    }\n  } catch (error) {\n    uni.hideLoading()\n    uni.showToast({\n      title: '网络错误，请重试',\n       icon: 'none'\n    })\n    console.error('更新在线状态失败:', error)\n  } finally {\n    isUpdatingStatus.value = false\n  }\n}\n\n// 获取位置信息（不强制刷新）\nconst getLocationInfo = () => {\n  const cacheStatus = getCacheStatus()\n  \n  // 如果有有效缓存，直接使用\n  if (cacheStatus.hasCache && cacheStatus.isValid) {\n    currentLocation.value = cacheStatus.address\n    locationUpdateTime.value = new Date(cacheStatus.timestamp).toLocaleTimeString()\n    console.log('使用缓存位置信息:', cacheStatus.address)\n    console.log('使用缓存:', cacheStatus)\n     updateLocationToServer(cacheStatus.coordinates.latitude, cacheStatus.coordinates.longitude, cacheStatus.address)\n    return\n  }\n  \n  // 没有有效缓存时，获取位置\n  getCurrentLocationAddress(false)\n    .then(locationInfo => {\n      currentLocation.value = locationInfo.address\n      locationUpdateTime.value = new Date().toLocaleTimeString()\n      console.log('获取位置成功', locationInfo)\n      \n      // 更新位置信息到服务器\n      updateLocationToServer(locationInfo.latitude, locationInfo.longitude, locationInfo.address)\n    })\n    .catch(err => {\n      console.error('获取位置失败:', err)\n      // 如果获取失败，显示默认信息\n      currentLocation.value = '位置获取失败'\n      locationUpdateTime.value = '获取失败'\n    })\n}\n\n// 刷新位置\nconst refreshLocation = () => {\n  uni.showLoading({\n    title: '更新位置中'\n  })\n  \n  getCurrentLocationAddress(false) // 不强制刷新\n    .then(locationInfo => {\n      // 更新显示\n      currentLocation.value = locationInfo.address\n      locationUpdateTime.value = new Date().toLocaleTimeString()\n      console.log('位置更新成功', locationInfo)\n      uni.hideLoading()\n      uni.showToast({\n        title: '位置更新成功',\n        icon: 'none'\n      })\n      \n   \n\n        updateLocationToServer(locationInfo.latitude, locationInfo.longitude, locationInfo.address)\n     \n    })\n    .catch(err => {\n      uni.hideLoading()\n      uni.showToast({\n        title: '获取位置失败',\n        icon: 'none'\n      })\n      console.error('获取位置失败:', err)\n    })\n}\n\n// 更新位置信息到服务器\nconst updateLocationToServer = async (latitude, longitude, address) => {\n\n  try {\n    // 处理地址字符串\n    const processedAddress = processAddress(address)\n    \n    const requestData = {\n      is_online: isOnline.value ? 1 : 0,\n      latitude: latitude,\n      longitude: longitude,\n      location_text: processedAddress\n    }\n    \n    console.log('准备更新位置信息到服务器:', requestData)\n    console.log('位置描述分析:', analyzeAddress(address))\n    \n    const response = await updateCompanionOnlineStatus(requestData)\n    \n    if (response.data && response.data.code === 0) {\n      console.log('位置信息更新成功:', response.data)\n    } else {\n      console.error('位置信息更新失败:', response.data?.msg)\n    }\n  } catch (error) {\n    console.error('位置信息更新API调用失败:', error)\n  }\n}\n\n// 手动选择位置\nconst selectLocation = () => {\n  // #ifdef MP-WEIXIN\n  uni.chooseLocation({\n    success: async (res) => {\n      const address = res.address || res.name || '已选择位置'\n      console.log('手动选择位置', res)\n      \n      // 更新显示\n      currentLocation.value = address\n      locationUpdateTime.value = new Date().toLocaleTimeString()\n      \n      // 如果用户已上线，更新位置信息到服务器\n      await updateLocationToServer(res.latitude, res.longitude, address)\n    },\n    fail: (err) => {\n      if (err.errMsg && err.errMsg.indexOf('cancel') === -1) {\n        uni.showToast({\n          title: '获取位置失败',\n          icon: 'none'\n        })\n        console.error('获取位置失败:', err.errMsg)\n      }\n    }\n  })\n  // #endif\n  // #ifndef MP-WEIXIN\n  uni.showToast({\n    title: '请在微信小程序中使用地图选点',\n    icon: 'none'\n  })\n  // #endif\n}\n\n// 查看全部订单\nconst viewAllOrders = () => {\n  // 确保有applicationInfo和id\n  if (!props.applicationInfo || !props.applicationInfo.id) {\n    uni.showToast({\n      title: '用户信息不完整',\n      icon: 'none'\n    })\n    return\n  }\n  \n  uni.navigateTo({\n    url: `/subPackages/partner/order/index?companion_id=${props.applicationInfo.id}`\n  })\n}\n\n// 跳转到订单详情\nconst navigateToOrderDetail = (orderId) => {\n  uni.navigateTo({\n    url: `/subPackages/partner/order/detail?orderId=${orderId}`\n  })\n}\n\n// 获取订单操作按钮\nconst getOrderActions = (status) => {\n  const actionMap = {\n    2: [ // 已支付待确认\n      { text: '拒绝', action: 'reject', type: 'secondary' },\n      { text: '接单', action: 'accept', type: 'primary' }\n    ],\n    3: [ // 已确认待到达\n      { text: '电话联系', action: 'contact', type: 'secondary' },\n      { text: '我已到达服务地点', action: 'arrived', type: 'primary' }\n    ],\n    4: [ // 已到达待开始\n      { text: '电话联系', action: 'call', type: 'secondary' }\n    ],\n    5: [ // 服务中\n      { text: '电话联系', action: 'contact', type: 'secondary' },\n      { text: '结束服务', action: 'end', type: 'primary' }\n    ]\n  }\n  return actionMap[status] || []\n}\n\n// 处理订单操作\nconst handleOrderAction = (action, order) => {\n  switch (action) {\n    case 'contact':\n      handleContactCustomer(order)\n      break\n    case 'accept':\n      handleAcceptOrder(order)\n      break\n    case 'reject':\n      handleRejectOrder(order)\n      break\n    case 'arrived':\n      handleArrived(order)\n      break\n    case 'call':\n      handleCallCustomer(order)\n      break\n    case 'end':\n      handleEndService(order)\n      break\n  }\n}\n\n// 电话联系客户\nconst handleContactCustomer = (order) => {\n  if (order.user && order.user.phone) {\n    uni.showModal({\n      title: '电话联系',\n      content: `是否拨打客户 ${order.user.nick_name} 的电话？`,\n      confirmText: '拨打',\n      cancelText: '取消',\n      success: (res) => {\n        if (res.confirm) {\n          uni.makePhoneCall({\n            phoneNumber: order.user.phone\n          })\n        }\n      }\n    })\n  }\n}\n\n// 接单\nconst handleAcceptOrder = (order) => {\n  uni.showModal({\n    title: '确认接单',\n    content: '确定要接受这个订单吗？',\n    confirmText: '接单',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          uni.showLoading({\n            title: '处理中...'\n          })\n          \n          const response = await acceptCompanionOrder({ \n            order_id: order.id,\n            companion_id: Number(props.applicationInfo.id)\n          })\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '接单成功',\n              icon: 'success'\n            })\n            \n            // 刷新最近订单数据\n            await fetchRecentOrders()\n          } else {\n            throw new Error(response.data.msg || '接单失败')\n          }\n        } catch (error) {\n          console.error('接单失败:', error)\n          uni.showToast({\n            title: error.message || '接单失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 拒绝订单\nconst handleRejectOrder = (order) => {\n  uni.showModal({\n    title: '拒绝订单',\n    content: '确定要拒绝这个订单吗？',\n    confirmText: '拒绝',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          uni.showLoading({\n            title: '处理中...'\n          })\n          \n          const response = await rejectCompanionOrder({ \n            order_id: order.id,\n            companion_id: Number(props.applicationInfo.id)\n          })\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '已拒绝订单',\n              icon: 'success'\n            })\n            \n            // 刷新最近订单数据\n            await fetchRecentOrders()\n          } else {\n            throw new Error(response.data.msg || '拒绝订单失败')\n          }\n        } catch (error) {\n          console.error('拒绝订单失败:', error)\n          uni.showToast({\n            title: error.message || '操作失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 我已到达\nconst handleArrived = (order) => {\n  uni.showModal({\n    title: '确认到达',\n    content: '确认您已到达服务地点？',\n    confirmText: '确认',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          uni.showLoading({\n            title: '更新中...'\n          })\n          \n          const response = await arrivedCompanionOrder({ \n            order_id: order.id,\n            companion_id: Number(props.applicationInfo.id)\n          })\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '已确认到达',\n              icon: 'success'\n            })\n            \n            // 刷新最近订单数据\n            await fetchRecentOrders()\n          } else {\n            throw new Error(response.data.msg || '确认到达失败')\n          }\n        } catch (error) {\n          console.error('确认到达失败:', error)\n          uni.showToast({\n            title: error.message || '操作失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 电话联系客户\nconst handleCallCustomer = (order) => {\n  if (order.user && order.user.phone) {\n    uni.showModal({\n      title: '电话联系',\n      content: `是否拨打客户 ${order.user.nick_name} 的电话？`,\n      confirmText: '拨打',\n      cancelText: '取消',\n      success: (res) => {\n        if (res.confirm) {\n          uni.makePhoneCall({\n            phoneNumber: order.user.phone\n          })\n        }\n      }\n    })\n  }\n}\n\n// 结束服务\nconst handleEndService = (order) => {\n  uni.showModal({\n    title: '结束服务',\n    content: '确定要结束服务吗？',\n    confirmText: '结束',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          uni.showLoading({\n            title: '更新中...'\n          })\n          \n          const response = await endCompanionService({ \n            order_id: order.id,\n            companion_id: Number(props.applicationInfo.id)\n          })\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '服务已结束',\n              icon: 'success'\n            })\n            \n            // 刷新最近订单数据\n            await fetchRecentOrders()\n          } else {\n            throw new Error(response.data.msg || '结束服务失败')\n          }\n        } catch (error) {\n          console.error('结束服务失败:', error)\n          uni.showToast({\n            title: error.message || '操作失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 视频上传相关方法\nconst hideVideoUploadModal = () => {\n  showVideoUploadModal.value = false\n}\n\n// 处理视频上传成功\nconst handleVideoUploadSuccess = (data) => {\n  console.log('视频上传成功:', data)\n  // 发送事件通知父组件刷新数据\n  uni.$emit('applicationStatusChanged', data)\n}\n\n// 获取日期安排数据\nconst fetchScheduleData = async () => {\n  if (!hasValidApplicationInfo.value || !props.applicationInfo.id) {\n    console.log('applicationInfo不完整，跳过获取日期安排数据')\n    return\n  }\n  \n  // scheduleLoading.value = true\n  \n  try {\n    console.log('开始获取日期安排数据，companion_id:', props.applicationInfo.id)\n    \n    const requestData = {\n      companion_id: props.applicationInfo.id\n    }\n    \n    const response = await getCompanionSchedule(requestData)\n    console.log('日期安排数据获取成功:', response)\n    \n    if (response.data && response.data.code === 0) {\n      scheduleData.value = response.data.data\n      console.log('解析后的日期安排数据:', scheduleData.value)\n    } else {\n      console.error('获取日期安排数据失败:', response.data?.msg)\n    }\n  } catch (error) {\n    console.error('获取日期安排数据接口调用失败:', error)\n  } finally {\n    scheduleLoading.value = false\n  }\n}\n\n// 获取最近订单数据\nconst fetchRecentOrders = async () => {\n  if (!hasValidApplicationInfo.value || !props.applicationInfo.id) {\n    console.log('applicationInfo不完整，跳过获取最近订单数据')\n    return\n  }\n\n  // recentOrdersLoading.value = true\n  try {\n    console.log('开始获取最近订单数据，companion_id:', props.applicationInfo.id)\n    const requestData = {\n      companion_id: Number(props.applicationInfo.id),\n      page: 1, // 只获取第一页\n      page_size: 10 // 获取10条\n    }\n    const response = await getCompanionActiveOrders(requestData)\n    console.log('最近订单数据获取成功:', response)\n    if (response.data && response.data.code === 0) {\n      recentOrders.value = response.data.data.list\n      console.log('解析后的最近订单数据:', recentOrders.value)\n    } else {\n      console.error('获取最近订单数据失败:', response.data?.msg)\n    }\n  } catch (error) {\n    console.error('获取最近订单数据接口调用失败:', error)\n  } finally {\n    recentOrdersLoading.value = false\n  }\n}\n\n// 日期安排相关方法\nconst goToDataSelect = () => {\n  // 确保有applicationInfo和id\n  if (!props.applicationInfo || !props.applicationInfo.id) {\n    uni.showToast({\n      title: '用户信息不完整',\n      icon: 'none'\n    })\n    return\n  }\n  \n  uni.navigateTo({\n    url: `/subPackages/partner/components/DataSelect?companion_id=${props.applicationInfo.id}`\n  })\n}\n\n// 刷新日期安排数据\nconst refreshScheduleData = async () => {\n  await fetchScheduleData()\n}\n\n// 下拉刷新\nconst onRefresh = async () => {\n  if (isRefreshing.value) return // 防止重复刷新\n  \n  isRefreshing.value = true\n  \n  try {\n    // 并行刷新所有数据\n    await Promise.all([\n      fetchScheduleData(),\n      fetchRecentOrders()\n    ])\n    \n    // 模拟加载时间，确保用户能看到刷新动画\n    await new Promise(resolve => setTimeout(resolve, 800))\n  } catch (error) {\n    console.error('刷新失败:', error)\n  } finally {\n    isRefreshing.value = false\n  }\n}\n\nconst onRefreshRestore = () => {\n  isRefreshing.value = false\n}\n\n// 获取订单状态文本\nconst getOrderStatusText = (status) => {\n  const statusMap = {\n    2: '等待接单',\n    3: '我已出发',\n    4: '已到达，等待开始服务',\n    5: '服务中'\n  }\n  return statusMap[status] || '未知状态'\n}\n\n// 获取订单状态样式类\nconst getOrderStatusClass = (status) => {\n  const statusMap = {\n    2: 'status-pending',\n    3: 'status-departing',\n    4: 'status-arrived',\n    5: 'status-serving'\n  }\n  return statusMap[status] || 'status-default'\n}\n\n// 格式化订单时间\nconst formatOrderTime = (timeStr) => {\n  if (!timeStr) return ''\n  \n  const date = new Date(timeStr)\n  const month = String(date.getMonth() + 1).padStart(2, '0')\n  const day = String(date.getDate()).padStart(2, '0')\n  const hours = String(date.getHours()).padStart(2, '0')\n  const minutes = String(date.getMinutes()).padStart(2, '0')\n  \n  return `${month}-${day} ${hours}:${minutes}`\n}\n\n// 格式化服务日期和时间\nconst formatServiceDateTime = (serviceDate, serviceTime) => {\n  if (!serviceDate && !serviceTime) return '待确认'\n  \n  let result = ''\n  \n  // 处理服务日期\n  if (serviceDate) {\n    const date = new Date(serviceDate)\n    const year = date.getFullYear()\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const day = String(date.getDate()).padStart(2, '0')\n    const weekday = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][date.getDay()]\n    result += `${year}-${month}-${day} ${weekday}`\n  }\n  \n  // 处理时间段\n  if (serviceTime) {\n    if (result) {\n      result += ' '\n    }\n    result += serviceTime\n  }\n  \n  return result || '待确认'\n}\n\n\n\n\n\n// 页面加载时的处理\nonMounted(() => {\n  console.log('Workbench组件mounted，applicationInfo状态:', {\n    hasApplicationInfo: !!props.applicationInfo,\n    applicationInfo: props.applicationInfo\n  })\n  \n  // 如果applicationInfo已经存在，立即初始化\n  if (hasValidApplicationInfo.value) {\n    initializeComponent()\n  } else {\n    console.log('applicationInfo还未准备好，等待watch触发初始化')\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.workbench-content {\n  padding: 20rpx;\n  height: 100vh;\n  box-sizing: border-box;\n}\n\n\n\n// 状态控制样式\n.status-control {\n  margin-bottom: 20rpx;\n}\n\n.status-card {\n  background: #FFFFFF;\n  border-radius: 20rpx;\n  padding: 28rpx;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  \n\n}\n\n.status-left {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  min-width: 0; // 防止flex子元素溢出\n}\n\n.status-info {\n  margin-left: 20rpx;\n  flex: 1;\n  min-width: 0; // 防止文本溢出\n}\n\n.status-indicator {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8rpx;\n}\n\n.status-dot {\n  width: 16rpx;\n  height: 16rpx;\n  border-radius: 50%;\n  background: #CCCCCC;\n  margin-right: 12rpx;\n  transition: all 0.3s ease;\n  position: relative;\n  \n  &.active {\n    background: #4CAF50;\n    box-shadow: 0 0 8rpx rgba(76, 175, 80, 0.4);\n    \n    &::after {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 8rpx;\n      height: 8rpx;\n      background: #FFFFFF;\n      border-radius: 50%;\n    }\n  }\n}\n\n.status-text {\n  font-size: 28rpx;\n  font-weight: 600;\n  white-space: nowrap;\n  transition: all 0.3s ease;\n  \n  // 下线状态\n  &:not(.online) {\n    color: #666666;\n  }\n  \n  // 上线状态\n  .online & {\n    color: #4CAF50;\n  }\n}\n\n.status-desc {\n  font-size: 24rpx;\n  color: #666666;\n  display: block;\n  white-space: nowrap;\n}\n\n// 头像样式\n.avatar-container {\n  width: 80rpx;\n  height: 80rpx;\n  border-radius: 50%;\n  overflow: hidden;\n\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: 50%;\n    box-shadow: inset 0 0 0 1rpx rgba(255, 255, 255, 0.3);\n  }\n}\n\n.avatar-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.status-right {\n  display: flex;\n  align-items: center;\n  margin-left: 20rpx;\n  flex-shrink: 0;\n}\n\n.toggle-button {\n  background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n  border-radius: 50000rpx;\n  padding: 16rpx 28rpx;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  position: relative;\n  overflow: hidden;\n  border: 2rpx solid rgba(255, 255, 255, 0.3);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.5s ease;\n  }\n  \n  &.online {\n    background: linear-gradient(135deg, #F44336 0%, #FF5722 100%);\n    border: none;\n    \n    &::before {\n      left: 100%;\n    }\n    \n    .toggle-icon {\n      transform: scale(1.1);\n    }\n    \n    .icon-play {\n      transform: scale(0.8);\n    }\n    \n    .icon-pause::before,\n    .icon-pause::after {\n      transform: scale(1.2);\n    }\n  }\n  \n  &:active {\n    transform: scale(0.96);\n    \n    &::before {\n      left: 100%;\n    }\n    \n    .toggle-icon {\n      transform: scale(0.9);\n    }\n  }\n}\n\n.toggle-icon {\n  margin-right: 8rpx;\n  transition: transform 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.icon-container {\n  width: 32rpx;\n  height: 32rpx;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.icon-play {\n  width: 0;\n  height: 0;\n  border-left: 14rpx solid #FFFFFF;\n  border-top: 10rpx solid transparent;\n  border-bottom: 10rpx solid transparent;\n  margin-left: 3rpx;\n  transition: all 0.3s ease;\n  filter: drop-shadow(0 2rpx 4rpx rgba(0, 0, 0, 0.2));\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: -10rpx;\n    left: -14rpx;\n    width: 0;\n    height: 0;\n    border-left: 14rpx solid rgba(255, 255, 255, 0.3);\n    border-top: 10rpx solid transparent;\n    border-bottom: 10rpx solid transparent;\n    z-index: -1;\n  }\n}\n\n.icon-pause {\n  display: flex;\n  gap: 6rpx;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.icon-pause::before,\n.icon-pause::after {\n  content: '';\n  width: 5rpx;\n  height: 18rpx;\n  background: #FFFFFF;\n  border-radius: 3rpx;\n  transition: all 0.3s ease;\n  box-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.2);\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.3);\n    border-radius: 3rpx;\n    z-index: -1;\n  }\n}\n\n.toggle-text {\n  color: #FFFFFF;\n  font-size: 26rpx;\n  font-weight: 600;\n  text-shadow: 0 1rpx 2rpx rgba(0, 0, 0, 0.1);\n}\n\n// 位置管理样式\n\n\n.location-card {\n  background: #FFFFFF;\n  border-radius: 20rpx;\n  padding: 28rpx;\n  \n}\n\n.location-content {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n}\n\n.location-header {\n  display: flex;\n  align-items: center;\n}\n\n.location-icon {\n  width: 32rpx;\n  height: 32rpx;\n  margin-right: 6rpx;\n\n}\n\n.location-title {\n  font-size: 28rpx;\n  font-weight: 600;\n  color: #1A1A1A;\n}\n\n.location-info {\n  margin-top: 0rpx;\n}\n\n.location-address {\n  font-size: 26rpx;\n  color: #1A1A1A;\n  display: block;\n  margin-bottom: 8rpx;\n  line-height: 1.4;\n}\n\n.location-time {\n  font-size: 22rpx;\n  color: #999999;\n  display: block;\n}\n\n.location-actions {\n  display: flex;\n  flex-direction: row;\n  gap: 16rpx;\n  margin-top: 8rpx;\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 12rpx 20rpx;\n  border-radius: 10rpx;\n  border: 1rpx solid #E5E5E5;\n  background: #F7F8FA;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n  \n  &:active {\n    transform: scale(0.96);\n    background: #F0F0F0;\n  }\n}\n\n.refresh-btn {\n  border-color: #5AC8FA;\n  background: rgba(90, 200, 250, 0.1);\n}\n\n.select-btn {\n  border-color: #FF9500;\n  background: rgba(255, 149, 0, 0.1);\n}\n\n.btn-icon {\n  width: 28rpx;\n  height: 28rpx;\n  margin-right: 8rpx;\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.location-btn-text {\n  font-size: 24rpx;\n  color: #1A1A1A;\n  font-weight: 500;\n}\n\n.recent-orders {\n  background: #FFFFFF;\n  border-radius: 20rpx;\n  padding: 28rpx;\n  box-sizing: border-box;\n}\n\n.loading-orders {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 60rpx 0;\n}\n\n.loading-text {\n  font-size: 28rpx;\n  color: #999999;\n}\n\n.order-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n}\n\n.order-item {\n  background: #FFFFFF;\n  border-radius: 16rpx;\n  padding: 24rpx;\n  box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.06);\n  border: 1rpx solid #f0f0f0;\n  transition: all 0.3s ease;\n  \n  &:active {\n    transform: scale(0.98);\n  }\n}\n\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 20rpx;\n  padding-bottom: 20rpx;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n.order-info {\n  flex: 1;\n}\n\n.order-time {\n  font-size: 26rpx;\n  color: #999999;\n}\n\n.order-status {\n  font-size: 24rpx;\n  font-weight: 500;\n}\n\n.status-pending {\n  color: #ff6b35;\n}\n\n.status-departing {\n  color: #007bff;\n}\n\n.status-arrived {\n  color: #007bff;\n}\n\n.status-serving {\n  color: #28a745;\n}\n\n.status-default {\n  color: #999999;\n}\n\n.service-info {\n  display: flex;\n  margin-bottom: 20rpx;\n  padding-bottom: 20rpx;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n.service-image {\n  width: 120rpx;\n  height: 120rpx;\n  border-radius: 12rpx;\n  margin-right: 20rpx;\n  flex-shrink: 0;\n}\n\n.service-details {\n  flex: 1;\n}\n\n.service-name {\n  font-size: 28rpx;\n  color: #1A1A1A;\n  font-weight: 500;\n  margin-bottom: 8rpx;\n  display: block;\n}\n\n.service-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8rpx;\n}\n\n.service-price {\n  font-size: 26rpx;\n  color: #1a1a1a;\n}\n\n.service-duration {\n  font-size: 26rpx;\n  color: #1a1a1a;\n}\n\n.service-amount {\n  display: flex;\n  align-items: center;\n  margin-top: 8rpx;\n}\n\n.amount-label {\n  font-size: 26rpx;\n  color: #666666;\n}\n\n.amount-value {\n  font-size: 28rpx;\n  color: #f43f5e;\n  font-weight: 600;\n}\n\n.service-location-time {\n  margin-bottom: 20rpx;\n  padding-bottom: 20rpx;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n.location-info,\n.time-info {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 12rpx;\n}\n\n.location-info:last-child,\n.time-info:last-child {\n  margin-bottom: 0;\n}\n\n.location-label,\n.time-label {\n  font-size: 26rpx;\n  color: #666666;\n  min-width: 140rpx;\n  flex-shrink: 0;\n}\n\n.location-value,\n.time-value {\n  font-size: 26rpx;\n  color: #1a1a1a;\n  flex: 1;\n  word-break: break-all;\n  line-height: 1.4;\n}\n\n/* 操作按钮 */\n.order-actions {\n  display: flex;\n  gap: 16rpx;\n  justify-content: flex-end;\n}\n\n.action-btn {\n  padding: 16rpx 32rpx;\n  border-radius: 99999rpx;\n  font-size: 26rpx;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  border: 1rpx solid transparent;\n  box-sizing: border-box;\n  height: 72rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn.primary {\n  background: #7363FF;\n  color: #FFFFFF;\n  border-color: #7363FF;\n}\n\n.action-btn.primary:active {\n  background: #6354e6;\n  transform: scale(0.96);\n}\n\n.action-btn.secondary {\n  background: #FFFFFF;\n  color: #666666;\n  border-color: #e9ecef;\n}\n\n.action-btn.secondary:active {\n  background: #f8f9fa;\n  transform: scale(0.96);\n}\n\n.action-text {\n  color: inherit;\n  font-size: 26rpx;\n  font-weight: 500;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24rpx;\n}\n\n.section-title {\n  font-size: 32rpx;\n  font-weight: 600;\n  color: #1A1A1A;\n}\n\n.view-all {\n  font-size: 24rpx;\n  color: #7363FF;\n  font-weight: 500;\n}\n\n.empty-orders {\n  text-align: center;\n  padding: 60rpx 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.empty-icon {\n  width: 200rpx;\n  height: 200rpx;\n  margin-bottom: 24rpx;\n  opacity: 0.6;\n}\n\n.empty-text {\n  font-size: 28rpx;\n  color: #1A1A1A;\n  font-weight: 500;\n  display: block;\n  margin-bottom: 8rpx;\n}\n\n.empty-desc {\n  font-size: 24rpx;\n  color: #666666;\n  display: block;\n}\n\n// 日期安排样式\n.schedule-control {\n  margin-bottom: 20rpx;\n}\n\n.schedule-card {\n  background: #FFFFFF;\n  border-radius: 20rpx;\n  padding: 28rpx;\n  box-shadow: 0 4rpx 24rpx rgba(115,99,255,0.06);\n}\n\n.schedule-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16rpx;\n}\n\n.schedule-title {\n  font-size: 32rpx;\n  font-weight: 600;\n  color: #1A1A1A;\n  display: flex;\n  align-items: center;\n}\n\n.schedule-icon {\n  width: 32rpx;\n  height: 32rpx;\n  margin-right: 8rpx;\n}\n\n.schedule-status {\n  font-size: 24rpx;\n  color: #4CAF50;\n  background: rgba(76, 175, 80, 0.1);\n  padding: 4rpx 12rpx;\n  border-radius: 12rpx;\n  \n  &.loading {\n    color: #FF9500;\n    background: rgba(255, 149, 0, 0.1);\n    animation: pulse 1.5s ease-in-out infinite;\n  }\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.6;\n  }\n}\n\n.schedule-content {\n  display: flex;\n  flex-direction: column;\n  gap: 12rpx;\n}\n\n.schedule-desc {\n  font-size: 26rpx;\n  color: #666666;\n  line-height: 1.4;\n}\n\n.schedule-actions {\n  display: flex;\n  gap: 12rpx;\n}\n\n.schedule-btn, .quick-btn {\n  background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n  color: #FFFFFF;\n  padding: 8rpx 16rpx;\n  border-radius: 12rpx;\n  font-size: 24rpx;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  \n  &:active {\n    transform: scale(0.95);\n  }\n}\n\n.quick-btn {\n  background: linear-gradient(135deg, #FF9500 0%, #FF5722 100%);\n}\n\n.btn-text {\n  color: #FFFFFF;\n  font-size: 24rpx;\n  font-weight: 500;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* uni-data-picker弹框样式优化 */\n:deep(.uni-data-picker__popup) {\n  border-radius: 20rpx 20rpx 0 0 !important;\n}\n\n:deep(.uni-data-picker__popup-header) {\n  border-radius: 20rpx 20rpx 0 0 !important;\n  background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%) !important;\n}\n\n:deep(.uni-data-picker__popup-content) {\n  border-radius: 0 0 0 0 !important;\n}\n\n:deep(.uni-data-picker__popup-item) {\n  font-size: 28rpx !important;\n  color: #1A1A1A !important;\n  font-weight: 500 !important;\n}\n\n:deep(.uni-data-picker__popup-item-selected) {\n  color: #7363FF !important;\n  font-weight: 600 !important;\n}\n\n.time-picker-content {\n  background: #FFFFFF;\n  border-radius: 20rpx;\n  width: 85%;\n  max-width: 640rpx;\n  position: relative;\n  z-index: 1001;\n  box-shadow: 0 20rpx 60rpx rgba(0, 0, 0, 0.15);\n  animation: slideUp 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(40rpx) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.time-picker-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 28rpx 32rpx;\n  border-bottom: 1rpx solid rgba(115, 99, 255, 0.1);\n}\n\n.time-picker-title {\n  font-size: 30rpx;\n  font-weight: 600;\n  color: #1A1A1A;\n}\n\n.time-picker-body {\n  padding: 40rpx 32rpx;\n}\n\n.time-input-group {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 40rpx;\n  padding: 8rpx 0;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.time-label {\n  font-size: 28rpx;\n  color: #1A1A1A;\n  font-weight: 500;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -4rpx;\n    left: 0;\n    width: 0;\n    height: 2rpx;\n    background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n    transition: width 0.3s ease;\n  }\n  \n  &:hover::after {\n    width: 100%;\n  }\n}\n\n.time-display {\n  flex: 1;\n  margin-left: 32rpx;\n  background: linear-gradient(135deg, #f8f9fe 0%, #ffffff 100%);\n  border: 2rpx solid #e9ecf5;\n  border-radius: 20rpx;\n  padding: 24rpx 28rpx;\n  text-align: center;\n  min-width: 160rpx;\n  font-weight: 500;\n  transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n  \n  &:active {\n    border-color: #7363FF;\n    transform: scale(0.98);\n  }\n  \n  /* 添加微妙的阴影效果 */\n  box-shadow: 0 2rpx 8rpx rgba(115, 99, 255, 0.08);\n}\n\n.time-text {\n  color: #1A1A1A;\n  font-size: 28rpx;\n  font-weight: 500;\n}\n\n.time-placeholder {\n  color: #999999;\n  font-size: 28rpx;\n}\n\n\n\n.time-picker-footer {\n  display: flex;\n  gap: 20rpx;\n  padding: 28rpx 32rpx;\n  border-top: 1rpx solid rgba(115, 99, 255, 0.1);\n}\n\n.cancel-btn, .confirm-btn {\n  flex: 1;\n  padding: 20rpx;\n  border-radius: 16rpx;\n  text-align: center;\n  font-size: 28rpx;\n  font-weight: 600;\n  transition: all 0.3s ease;\n}\n\n.cancel-btn {\n  background: #f8f9fe;\n  color: #666666;\n  border: 2rpx solid #e9ecf5;\n  \n  &:active {\n    background: #f0f0f0;\n    transform: scale(0.98);\n  }\n}\n\n.confirm-btn {\n  background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n  color: #FFFFFF;\n  box-shadow: 0 6rpx 20rpx rgba(115, 99, 255, 0.3);\n  \n  &:active {\n    transform: scale(0.98);\n    box-shadow: 0 4rpx 16rpx rgba(115, 99, 255, 0.4);\n  }\n}\n\n// 时间选择弹框样式\n.time-select-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1000;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.time-select-content {\n  background: #FFFFFF;\n  border-radius: 20rpx 20rpx 0 0;\n  width: 100%;\n  max-height: 70%;\n  position: relative;\n  z-index: 1001;\n  box-shadow: 0 -20rpx 60rpx rgba(0, 0, 0, 0.15);\n  animation: slideUp 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.time-select-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 28rpx 32rpx;\n  border-bottom: 1rpx solid rgba(115, 99, 255, 0.1);\n  background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n  border-radius: 20rpx 20rpx 0 0;\n}\n\n.time-select-title {\n  font-size: 30rpx;\n  font-weight: 600;\n  color: #FFFFFF;\n}\n\n.time-select-body {\n  padding: 32rpx;\n  max-height: 60vh;\n  overflow-y: auto;\n}\n\n.time-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 16rpx;\n}\n\n.time-item {\n  background: #F8F9FA;\n  border: 2rpx solid #E5E5E5;\n  border-radius: 16rpx;\n  padding: 20rpx 16rpx;\n  text-align: center;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  \n  &:active {\n    transform: scale(0.95);\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n    border-color: #7363FF;\n    box-shadow: 0 4rpx 16rpx rgba(115, 99, 255, 0.3);\n  }\n}\n\n.time-item-text {\n  font-size: 26rpx;\n  font-weight: 500;\n  color: #1A1A1A;\n  \n  .time-item.active & {\n    color: #FFFFFF;\n  }\n}\n\n</style> \n","import Component from '/Users/xiaoqiang/Documents/friemd/firend-loving-app/subPackages/partner/components/Workbench.vue'\nwx.createComponent(Component)"],"names":["ref","computed","uni","nextTick","watch","getCurrentLocationAddress","getCacheStatus","processAddress","updateCompanionOnlineStatus","analyzeAddress","acceptCompanionOrder","rejectCompanionOrder","arrivedCompanionOrder","endCompanionService","getCompanionSchedule","getCompanionActiveOrders","onMounted"],"mappings":"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"}