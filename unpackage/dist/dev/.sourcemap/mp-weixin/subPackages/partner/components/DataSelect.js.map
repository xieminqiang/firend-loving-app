{"version":3,"file":"DataSelect.js","sources":["subPackages/partner/components/DataSelect.vue","subPackages/partner/components/DataSelect.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"data-select-container\">\n\n\n      \n      <!-- 星期选择器 -->\n      <view class=\"week-selector\">\n        <view \n          v-for=\"(day, index) in weekDays\" \n          :key=\"day.key\"\n          class=\"day-item\"\n          :class=\"{ \n            'active': selectedDay === index,\n            'today': isToday(index)\n          }\"\n          @click=\"selectDay(index)\"\n        >\n          <text class=\"day-name\">{{ day.name }}</text>\n          <text class=\"day-status\">{{ getDayStatus(index) }}</text>\n        </view>\n      </view>\n      \n      <!-- 时间网格 -->\n      <view class=\"time-grid-container\">\n        <view class=\"time-grid-header\">\n          <text class=\"grid-title\">{{ getSelectedDayName() }} 时间段设置</text>\n          <view class=\"quick-actions\">\n            <view class=\"action-btn\" @click=\"setAllAvailable\">全部可约</view>\n            <view class=\"action-btn\" @click=\"setAllUnavailable\">全部休息</view>\n          </view>\n        </view>\n        \n        <view class=\"time-grid\" :style=\"{ height: (timeGridHeight ) + 'px' }\">\n          <view \n            v-for=\"(timeSlot, timeKey) in getCurrentDaySchedule()\" \n            :key=\"timeKey\"\n            class=\"time-slot\"\n            :class=\"getTimeSlotClass(timeSlot)\"\n            @click=\"toggleTimeSlot(timeKey)\"\n          >\n            <text class=\"time-text\">{{ timeKey }}</text>\n            <text class=\"status-text\">{{ getStatusText(timeSlot) }}</text>\n          </view>\n        </view>\n      </view>\n      \n      <!-- 底部固定区域 -->\n      <view class=\"bottom-fixed\">\n        <!-- 状态说明 -->\n        <view class=\"status-legend\">\n          <view class=\"legend-item\">\n            <view class=\"legend-color available\"></view>\n            <text class=\"legend-text\">可约</text>\n          </view>\n                  <view class=\"legend-item\">\n          <view class=\"legend-color unavailable\"></view>\n          <text class=\"legend-text\">休息</text>\n        </view>\n                  <!-- <view class=\"legend-item\">\n          <view class=\"legend-color booked\"></view>\n          <text class=\"legend-text\">已约</text>\n        </view> -->\n        </view>\n        \n        <!-- 保存按钮 -->\n        <view class=\"save-section\">\n          <view class=\"save-btn\" @click=\"saveSchedule\">\n            <text class=\"save-text\">保存设置</text>\n          </view>\n        </view>\n      </view>\n    </view>\n\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { getCompanionSchedule, saveCompanionSchedule } from '@/api/user.js'\n\n// 响应式数据\nconst companion_id = ref(null)\nconst loading = ref(true)\nconst selectedDay = ref(0) // 默认选中周一\nconst scheduleData = ref([])\nconst timeGridHeight = ref(0) // 时间网格高度\nconst originalScheduleData = ref([]) // 保存原始数据，用于比较是否有修改\n\n// 星期数据\nconst weekDays = ref([\n  { key: 'monday', name: '周一' },\n  { key: 'tuesday', name: '周二' },\n  { key: 'wednesday', name: '周三' },\n  { key: 'thursday', name: '周四' },\n  { key: 'friday', name: '周五' },\n  { key: 'saturday', name: '周六' },\n  { key: 'sunday', name: '周日' }\n])\n\n// 获取页面参数\nconst getPageParams = () => {\n  const pages = getCurrentPages()\n  const currentPage = pages[pages.length - 1]\n  const options = currentPage.options\n  \n  if (options.companion_id) {\n    companion_id.value = parseInt(options.companion_id)\n    console.log('获取到companion_id:', companion_id.value)\n  } else {\n    console.error('未获取到companion_id参数')\n    uni.showToast({\n      title: '参数错误',\n      icon: 'none'\n    })\n  }\n}\n\n// 调用接口获取数据\nconst callScheduleAPI = async () => {\n  if (!companion_id.value) {\n    console.error('companion_id为空，无法调用接口')\n    return\n  }\n  \n  try {\n    console.log('开始调用getCompanionSchedule接口，companion_id:', companion_id.value)\n    \n    let obj = {\n      \"companion_id\": companion_id.value,\n    }\n    console.log('obj:', obj)\n    const response = await getCompanionSchedule(obj)\n    console.log('接口调用成功:', response)\n    \n    if (response.data && response.data.code === 0) {\n      scheduleData.value = response.data.data\n      // 深拷贝保存原始数据\n      originalScheduleData.value = JSON.parse(JSON.stringify(response.data.data))\n      console.log('解析后的数据:', scheduleData.value)\n      \n      // 设置默认选中的星期\n      setDefaultSelectedDay()\n    } else {\n      uni.showToast({\n        title: response.data?.msg || '获取数据失败',\n        icon: 'none'\n      })\n    }\n  } catch (error) {\n    console.error('接口调用失败:', error)\n    uni.showToast({\n      title: '网络错误',\n      icon: 'none'\n    })\n  } finally {\n    loading.value = false\n  }\n}\n\n// 设置默认选中的星期\nconst setDefaultSelectedDay = () => {\n  // 查找今天的数据\n  const todayData = scheduleData.value.find(item => item.is_today === true)\n  \n  if (todayData) {\n    // 找到今天，设置为选中状态\n    selectedDay.value = todayData.day_of_week - 1 // 转换为数组索引 (0-6)\n    console.log('设置为今天:', todayData.day_of_week, '选中索引:', selectedDay.value)\n  } else {\n    // 没找到今天的数据，默认选中周一\n    selectedDay.value = 0\n    console.log('未找到今天数据，默认选中周一')\n  }\n}\n\n// 选择星期\nconst selectDay = (index) => {\n  // 如果切换星期，重置当前星期的数据为原始状态\n  if (selectedDay.value !== index) {\n    resetCurrentDayData()\n  }\n  selectedDay.value = index\n}\n\n// 重置当前星期的数据为原始状态\nconst resetCurrentDayData = () => {\n  const currentDayOfWeek = selectedDay.value + 1\n  const originalDayData = originalScheduleData.value.find(item => item.day_of_week === currentDayOfWeek)\n  const currentDayData = scheduleData.value.find(item => item.day_of_week === currentDayOfWeek)\n  \n  if (originalDayData && currentDayData) {\n    // 将当前数据重置为原始数据\n    currentDayData.schedule = JSON.parse(JSON.stringify(originalDayData.schedule))\n    console.log('重置星期数据:', currentDayOfWeek, '为原始状态')\n  }\n}\n\n// 判断是否是今天\nconst isToday = (index) => {\n  const dayOfWeek = index + 1\n  const dayData = scheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  return dayData ? dayData.is_today : false\n}\n\n// 获取选中星期的名称\nconst getSelectedDayName = () => {\n  return weekDays.value[selectedDay.value].name\n}\n\n// 获取当前选中星期的数据\nconst getCurrentDaySchedule = () => {\n  const dayOfWeek = selectedDay.value + 1 // 转换为后端格式 (1-7)\n  const dayData = scheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  return dayData ? dayData.schedule : {}\n}\n\n// 获取星期状态\nconst getDayStatus = (index) => {\n  const dayOfWeek = index + 1\n  const dayData = scheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  if (!dayData) return '未设置'\n  \n  const schedule = dayData.schedule\n  const availableCount = Object.values(schedule).filter(v => v === 1).length\n  const bookedCount = Object.values(schedule).filter(v => v === 3).length\n  \n  let statusText = ''\n  if (bookedCount > 0) {\n    statusText = `${bookedCount}个已约`\n  } else if (availableCount === 48) {\n    statusText = '全天可约'\n  } else if (availableCount === 0) {\n    statusText = '全天休息'\n  } else {\n    statusText = `${availableCount}个可约`\n  }\n  \n  // 如果是今天，添加\"今天\"标识\n  if (dayData.is_today) {\n    statusText =  statusText\n  }\n  \n  return statusText\n}\n\n// 获取时间段样式类\nconst getTimeSlotClass = (status) => {\n  switch (status) {\n    case 1: return 'available'\n    case 2: return 'unavailable'\n    case 3: return 'booked'\n    default: return 'unavailable'\n  }\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  switch (status) {\n    case 1: return '可约'\n    case 2: return '休息'\n    case 3: return '已约'\n    default: return '休息'\n  }\n}\n\n// 切换时间段状态\nconst toggleTimeSlot = (timeKey) => {\n  const dayOfWeek = selectedDay.value + 1\n  const dayData = scheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  \n  if (!dayData) return\n  \n  const currentStatus = dayData.schedule[timeKey]\n  \n  // 已约状态不能修改\n  if (currentStatus === 3) {\n    uni.showToast({\n      title: '已约时间段不能修改',\n      icon: 'none'\n    })\n    return\n  }\n  \n  // 切换可约/不可约状态\n  dayData.schedule[timeKey] = currentStatus === 1 ? 2 : 1\n}\n\n// 设置全部可约\nconst setAllAvailable = () => {\n  const dayOfWeek = selectedDay.value + 1\n  const dayData = scheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  \n  if (!dayData) return\n  \n  Object.keys(dayData.schedule).forEach(timeKey => {\n    if (dayData.schedule[timeKey] !== 3) { // 已约的不修改\n      dayData.schedule[timeKey] = 1\n    }\n  })\n}\n\n// 设置全部不可约\nconst setAllUnavailable = () => {\n  const dayOfWeek = selectedDay.value + 1\n  const dayData = scheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  \n  if (!dayData) return\n  \n  Object.keys(dayData.schedule).forEach(timeKey => {\n    if (dayData.schedule[timeKey] !== 3) { // 已约的不修改\n      dayData.schedule[timeKey] = 2\n    }\n  })\n}\n\n// 保存设置\nconst saveSchedule = async () => {\n  if (!companion_id.value) {\n    uni.showToast({\n      title: '用户信息不完整',\n      icon: 'none'\n    })\n    return\n  }\n  \n  // 获取当前选中的星期数据\n  const dayOfWeek = selectedDay.value + 1\n  const dayData = scheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  \n  if (!dayData) {\n    uni.showToast({\n      title: '未找到当前星期的数据',\n      icon: 'none'\n    })\n    return\n  }\n  \n  // 检查是否有修改\n  const originalDayData = originalScheduleData.value.find(item => item.day_of_week === dayOfWeek)\n  if (originalDayData && JSON.stringify(originalDayData.schedule) === JSON.stringify(dayData.schedule)) {\n    uni.showToast({\n      title: '没有修改内容',\n      icon: 'none'\n    })\n    return\n  }\n  \n  // 准备保存数据\n  const saveData = {\n    companion_id: companion_id.value,\n    day_of_week: dayOfWeek,\n    schedule: dayData.schedule\n  }\n  \n  console.log('准备保存的数据:', saveData)\n  \n  try {\n    uni.showLoading({\n      title: '保存中...'\n    })\n    \n    const response = await saveCompanionSchedule(saveData)\n    \n    uni.hideLoading()\n    \n    if (response.data && response.data.code === 0) {\n      // 保存成功后，更新原始数据中对应星期的数据\n      const originalIndex = originalScheduleData.value.findIndex(item => item.day_of_week === dayOfWeek)\n      if (originalIndex !== -1) {\n        originalScheduleData.value[originalIndex] = JSON.parse(JSON.stringify(dayData))\n      }\n      \n      uni.showToast({\n        title: '保存成功',\n        icon: 'success'\n      })\n      console.log('保存成功:', response.data)\n    } else {\n      uni.showToast({\n        title: response.data?.msg || '保存失败',\n        icon: 'none'\n      })\n      console.error('保存失败:', response.data)\n    }\n  } catch (error) {\n    uni.hideLoading()\n    uni.showToast({\n      title: '网络错误，请重试',\n      icon: 'none'\n    })\n    console.error('保存接口调用失败:', error)\n  }\n}\n\n// 计算时间网格高度\nconst calculateTimeGridHeight = () => {\n  // 获取系统信息\n  const systemInfo = uni.getSystemInfoSync()\n  const screenHeight = systemInfo.windowHeight\n\n\n\n  \n  timeGridHeight.value = screenHeight - 10\n  console.log('timeGridHeight.value:', timeGridHeight.value)\n  uni.createSelectorQuery()\n\t\t\t.select('.time-grid-header') // 选择器\n\t\t\t.boundingClientRect(rect => {\n\t\t\t\tif (rect) {\n                    //  console.log('rect:', rect.bottom)\n                  timeGridHeight.value = timeGridHeight.value - rect.bottom \n                    }\n\t\t\t})\n\t\t\t.exec()\n\n            uni.createSelectorQuery()\n\t\t\t.select('.bottom-fixed') // 选择器\n\t\t\t.boundingClientRect(rect => {\n\t\t\t\tif (rect) {\n                     console.log('rect:', rect.height)\n                    //  bottomFixedHeight = rect.height\n                 timeGridHeight.value = timeGridHeight.value - rect.height\n                    \n\t\t\t\t}\n\t\t\t})\n\t\t\t.exec()\n\n}\n\n// 页面加载时执行\nonMounted(() => {\n  console.log('DataSelect组件mounted')\n  getPageParams()\n  callScheduleAPI()\n  calculateTimeGridHeight()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.data-select-container {\n  height: 100vh;\n  background: #ffffff;\n  padding: 20rpx;\n  box-sizing: border-box;\n  position: relative;\n  overflow: hidden;\n}\n\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 400rpx;\n}\n\n.loading-text {\n  font-size: 28rpx;\n  color: #666666;\n}\n\n\n.header {\n  text-align: center;\n  margin-bottom: 30rpx;\n}\n\n.title {\n  font-size: 36rpx;\n  font-weight: 600;\n  color: #1a1a1a;\n  display: block;\n  margin-bottom: 8rpx;\n}\n\n.subtitle {\n  font-size: 24rpx;\n  color: #666666;\n  display: block;\n}\n\n// 星期选择器\n.week-selector {\n  display: flex;\n  gap: 12rpx;\n  margin-bottom: 40rpx;\n  flex-wrap: wrap;\n}\n\n.day-item {\n  flex: 1;\n  min-width: 120rpx;\n  background: #f8f9fa;\n  border: 2rpx solid #e9ecef;\n  border-radius: 16rpx;\n  padding: 10rpx 16rpx;\n  text-align: center;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  position: relative;\n  \n  &:active {\n    transform: scale(0.95);\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n    border-color: #7363FF;\n    box-shadow: 0 4rpx 16rpx rgba(115, 99, 255, 0.3);\n  }\n  \n  // 今天的特殊样式\n  &.today {\n    border-color: #FF9500;\n    background: linear-gradient(135deg, #FF9500 0%, #FF5722 100%);\n    \n    .day-name, .day-status {\n      color: #ffffff;\n    }\n    \n    &::before {\n      content: '今天';\n      position: absolute;\n      top: -8rpx;\n      right: -8rpx;\n      background: #FF5722;\n      color: #ffffff;\n      font-size: 18rpx;\n      padding: 2rpx 8rpx;\n      border-radius: 8rpx;\n      font-weight: 600;\n    }\n  }\n}\n\n.day-name {\n  font-size: 28rpx;\n  font-weight: 600;\n  color: #1a1a1a;\n  display: block;\n  margin-bottom: 4rpx;\n  \n  .day-item.active & {\n    color: #ffffff;\n  }\n}\n\n.day-status {\n  font-size: 20rpx;\n  color: #666666;\n  display: block;\n  \n  .day-item.active & {\n    color: rgba(255, 255, 255, 0.8);\n  }\n}\n\n// 时间网格容器\n.time-grid-container {\n  margin-bottom: 0rpx;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.time-grid-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  flex-shrink: 0;\n}\n\n.grid-title {\n  font-size: 30rpx;\n  font-weight: 600;\n  color: #1a1a1a;\n}\n\n.quick-actions {\n  display: flex;\n  gap: 12rpx;\n}\n\n.action-btn {\n  background: #f8f9fa;\n  border: 1rpx solid #e9ecef;\n  border-radius: 12rpx;\n  padding: 8rpx 16rpx;\n  font-size: 22rpx;\n  color: #666666;\n  transition: all 0.3s ease;\n  \n  &:active {\n    transform: scale(0.95);\n    background: #e9ecef;\n  }\n}\n\n// 时间网格\n.time-grid {\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 12rpx;\n  overflow-y: auto;\n  overflow-x: hidden;\n  \n  // 自定义滚动条样式\n  &::-webkit-scrollbar {\n    width: 6rpx;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n    border-radius: 3rpx;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #c1c1c1;\n    border-radius: 3rpx;\n    \n    &:hover {\n      background: #a8a8a8;\n    }\n  }\n}\n\n.time-slot {\n  background: #f8f9fa;\n  border: 2rpx solid #e9ecef;\n  border-radius: 12rpx;\n  padding: 16rpx 8rpx;\n  text-align: center;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  position: relative;\n  \n  &:active {\n    transform: scale(0.95);\n  }\n  \n  &.available {\n    background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);\n    border-color: #4CAF50;\n    box-shadow: 0 2rpx 8rpx rgba(76, 175, 80, 0.3);\n    \n    .time-text, .status-text {\n      color: #ffffff;\n    }\n  }\n  \n  &.unavailable {\n    background: #f8f9fa;\n    border-color: #e9ecef;\n    \n    .time-text {\n      color: #999999;\n    }\n    \n    .status-text {\n      color: #cccccc;\n    }\n  }\n  \n  &.booked {\n    background: linear-gradient(135deg, #FF5722 0%, #f4511e 100%);\n    border-color: #FF5722;\n    box-shadow: 0 2rpx 8rpx rgba(255, 87, 34, 0.3);\n    cursor: not-allowed;\n    \n    .time-text, .status-text {\n      color: #ffffff;\n    }\n    \n    &:active {\n      transform: none;\n    }\n  }\n}\n\n.time-text {\n  font-size: 22rpx;\n  font-weight: 500;\n  color: #1a1a1a;\n  display: block;\n  margin-bottom: 4rpx;\n}\n\n.status-text {\n  font-size: 18rpx;\n  color: #666666;\n  display: block;\n}\n\n// 底部固定区域\n.bottom-fixed {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #ffffff;\n  padding: 20rpx;\n  box-shadow: 0 -4rpx 20rpx rgba(0, 0, 0, 0.1);\n  z-index: 100;\n}\n\n// 状态说明\n.status-legend {\n  display: flex;\n  justify-content: center;\n  gap: 40rpx;\n  margin-bottom: 20rpx;\n  padding: 20rpx;\n  background: #f8f9fa;\n  border-radius: 16rpx;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 8rpx;\n}\n\n.legend-color {\n  width: 24rpx;\n  height: 24rpx;\n  border-radius: 6rpx;\n  \n  &.available {\n    background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);\n  }\n  \n  &.unavailable {\n    background: #e9ecef;\n  }\n  \n  &.booked {\n    background: linear-gradient(135deg, #FF5722 0%, #f4511e 100%);\n  }\n}\n\n.legend-text {\n  font-size: 24rpx;\n  color: #666666;\n}\n\n// 保存按钮\n.save-section {\n  text-align: center;\n  margin-bottom: 20rpx; // 为安全区域留出空间\n}\n\n.save-btn {\n  background: linear-gradient(135deg, #7363FF 0%, #FF69DE 100%);\n  border-radius: 16rpx;\n  padding: 24rpx 40rpx;\n  box-shadow: 0 6rpx 20rpx rgba(115, 99, 255, 0.3);\n  transition: all 0.3s ease;\n  \n  &:active {\n    transform: scale(0.98);\n    box-shadow: 0 4rpx 16rpx rgba(115, 99, 255, 0.4);\n  }\n}\n\n.save-text {\n  color: #ffffff;\n  font-size: 30rpx;\n  font-weight: 600;\n}\n</style>","import MiniProgramPage from '/Users/xiaoqiang/Documents/friemd/firend-loving-app/subPackages/partner/components/DataSelect.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","getCompanionSchedule","saveCompanionSchedule","onMounted"],"mappings":"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"}