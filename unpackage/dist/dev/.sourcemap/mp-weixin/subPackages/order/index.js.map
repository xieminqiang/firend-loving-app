{"version":3,"file":"index.js","sources":["subPackages/order/index.vue","subPackages/order/index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"order-container\">\n    <!-- 状态筛选栏 -->\n    <view class=\"status-filter\">\n      <scroll-view class=\"filter-scroll\" scroll-x=\"true\" show-scrollbar=\"false\">\n        <view class=\"filter-tabs\">\n          <view \n            v-for=\"(tab, index) in statusTabs\" \n            :key=\"index\"\n            class=\"filter-tab\"\n            :class=\"{ active: currentTabIndex === index }\"\n            @click=\"switchStatus(tab.value)\"\n          >\n            <text class=\"tab-text\">{{ tab.label }}</text>\n          </view>\n        </view>\n      </scroll-view>\n    </view>\n\n    <!-- 订单列表滑动容器 -->\n    <view class=\"order-content\">\n      <swiper\n        class=\"order-swiper\"\n        :current=\"currentTabIndex\"\n        @change=\"onSwiperChange\"\n        :indicator-dots=\"false\"\n        :circular=\"false\"\n        :autoplay=\"false\"\n        :duration=\"300\"\n      >\n        <!-- 每个状态选项卡的内容 -->\n        <swiper-item v-for=\"tab in statusTabs\" :key=\"tab.value\">\n          <scroll-view \n            class=\"order-scroll-view\" \n            scroll-y=\"true\"\n            refresher-enabled=\"true\"\n            :refresher-triggered=\"isRefreshing\"\n            @refresherrefresh=\"onRefresh\"\n            @refresherrestore=\"onRefreshRestore\"\n            @scrolltolower=\"loadMore\"\n          >\n            <!-- 空状态 -->\n            <view v-if=\"getTabOrderList(tab.value).length === 0 && !isLoading\" class=\"empty-state\">\n              <image src=\"@/static/images/empty.png\" class=\"empty-image\" mode=\"aspectFit\" />\n              <text class=\"empty-text\">暂无订单</text>\n              <text class=\"empty-desc\">快去发现更多精彩服务吧</text>\n            </view>\n\n            <!-- 订单卡片列表 -->\n            <view v-else class=\"order-cards\">\n              <view \n                v-for=\"order in getTabOrderList(tab.value)\" \n                :key=\"order.id\"\n                class=\"order-card\"\n                @click=\"navigateToDetail(order.id)\"\n              >\n                <!-- 订单头部 -->\n                <view class=\"order-header\">\n                  <view class=\"order-info\">\n                    <text class=\"order-time\">{{ formatTime(order.created_at) }}</text>\n                  </view>\n                  <view class=\"order-status\" :class=\"getStatusClass(order.status)\">\n                    <text class=\"status-text\">{{ getStatusText(order.status) }}</text>\n                  </view>\n                </view>\n\n                <!-- 服务信息和订单金额 -->\n                <view class=\"service-amount-row\">\n                  <view class=\"service-info\">\n                    <image :src=\"$imgBaseUrl + order.service_image_url\" class=\"service-image\" mode=\"aspectFill\" />\n                    <view class=\"service-details\">\n                      <text class=\"service-name\">{{ order.service_name }}</text>\n                      <view class=\"service-meta\">\n                        \n                        <text class=\"service-price\">¥{{ order.unit_price }}/{{ order.unit }}</text>\n                        <text class=\"service-duration\">x{{ order.quantity }}</text>\n                      </view>\n                      <view class=\"order-amount\">\n                    <text class=\"amount-label\">{{ getAmountLabel(order.status) }}</text>\n                    <text class=\"amount-value\">¥{{ order.total_amount }}</text>\n                  </view>\n                    </view>\n                  </view>\n                 \n                </view>\n\n                <!-- 状态4的提示语 -->\n                <view v-if=\"order.status === 4\" class=\"tip-container\">\n                  <view class=\"auto-start-tip\">\n                    <image src=\"@/static/icons/common/shijian.png\" class=\"tip-icon\" mode=\"aspectFit\" />\n                    <text class=\"tip-text\">友伴师已到达，5分钟后将自动开始计时服务</text>\n                  </view>\n                </view>\n\n                <!-- 操作按钮 -->\n                <view class=\"order-actions\">\n                  <view \n                    v-for=\"(action, actionIndex) in getOrderActions(order.status)\" \n                    :key=\"actionIndex\"\n                    class=\"action-btn\"\n                    :class=\"action.type\"\n                    @click.stop=\"handleOrderAction(action.action, order)\"\n                  >\n                    <text class=\"action-text\">{{ action.text }}</text>\n                    <!-- #ifdef MP-WEIXIN -->\n                    <button v-if=\"action.text === '联系客服'\" open-type=\"contact\" class=\"kf_btn\" @tap.stop></button>\n                    <!-- #endif -->\n                  </view>\n                </view>\n              </view>\n\n              <!-- 加载更多 -->\n              <view v-if=\"hasMore && getTabOrderList(tab.value).length > 0\" class=\"load-more\">\n                <text v-if=\"isLoadingMore\" class=\"loading-text\">加载中...</text>\n                <!-- <text v-else class=\"load-more-text\">上拉加载更多</text> -->\n              </view>\n            </view>\n          </scroll-view>\n        </swiper-item>\n      </swiper>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onUnmounted } from 'vue'\nimport { onLoad } from '@dcloudio/uni-app'\nimport { useUserStore } from '@/stores/user.js'\nimport { useCityStore } from '@/stores/city.js'\nimport { getOrderList, cancelOrder, deleteOrder, applyRefund, applyRefundAfterDeparture, startService, orderParams } from '@/api/order.js'\n\n// 用户状态管理\nconst userStore = useUserStore()\nconst cityStore = useCityStore()\n\n// 页面状态\nconst currentStatus = ref('all')\nconst currentTabIndex = ref(0)\nconst isRefreshing = ref(false)\nconst isLoading = ref(false)\nconst isLoadingMore = ref(false)\nconst hasMore = ref(true)\nconst page = ref(1)\nconst pageSize = ref(20)\n\n// 订单列表数据缓存 - 为每个状态维护独立的列表\nconst orderListCache = ref({})\nconst orderListData = ref({\n  'all': [],\n  'pending_payment': [],\n  'pending_service': [],\n  'in_service': [],\n  'completed': [],\n  'cancelled': [],\n  'refunded': [],\n  'refunding': []\n})\n\n// 防抖定时器\nlet swiperChangeTimer = null\n\n// 页面卸载时清除定时器\nonUnmounted(() => {\n  if (swiperChangeTimer) {\n    clearTimeout(swiperChangeTimer)\n  }\n})\n\n// 状态筛选标签\nconst statusTabs = ref([\n  { label: '全部', value: 'all', count: 0 },\n  { label: '待付款', value: 'pending_payment', count: 0 },\n  { label: '待服务', value: 'pending_service', count: 0 },\n  { label: '进行中', value: 'in_service', count: 0 },\n  { label: '已完成', value: 'completed', count: 0 },\n  // { label: '已取消', value: 'cancelled', count: 0 },\n  // { label: '已退款', value: 'refunded', count: 0 },\n  // { label: '退款中', value: 'refunding', count: 0 }\n])\n\n// 处理页面参数\nonLoad((options) => {\n  console.log('订单页面接收到的参数:', options)\n  if (options.status) {\n    console.log('设置订单状态为:', options.status)\n    currentStatus.value = options.status\n    // 设置对应的选项卡索引\n    const statusIndex = statusTabs.value.findIndex(tab => tab.value === options.status)\n    if (statusIndex !== -1) {\n      currentTabIndex.value = statusIndex\n    }\n    // 重置页面状态\n    page.value = 1\n    hasMore.value = true\n    // 清除缓存，强制重新加载\n    delete orderListCache.value[options.status]\n  } else {\n    console.log('没有传递状态参数，使用默认状态: all')\n    currentStatus.value = 'all'\n    currentTabIndex.value = 0\n  }\n  \n  // 在onLoad中加载数据，这是唯一的数据加载入口\n  console.log('onLoad中加载数据，当前状态:', currentStatus.value)\n  loadOrderList()\n})\n\n// 监听状态变化\nwatch(currentStatus, (newStatus, oldStatus) => {\n  console.log('状态变化:', oldStatus, '->', newStatus)\n})\n\n// 切换状态筛选\nconst switchStatus = async (status) => {\n  if (currentStatus.value === status) return // 避免重复切换\n  \n  currentStatus.value = status\n  const statusIndex = statusTabs.value.findIndex(tab => tab.value === status)\n  if (statusIndex !== -1) {\n    currentTabIndex.value = statusIndex\n  }\n  \n  // 检查缓存中是否已有该状态的数据\n  if (orderListCache.value[status]) {\n    // 从缓存恢复数据\n    orderListData.value[status] = orderListCache.value[status].list\n    page.value = orderListCache.value[status].page\n    hasMore.value = orderListCache.value[status].hasMore\n  } else {\n    // 缓存中没有数据，需要请求\n    page.value = 1\n    hasMore.value = true\n    orderListData.value[status] = []\n    \n    try {\n      await loadOrderList()\n    } catch (error) {\n      console.error('切换状态失败:', error)\n    }\n  }\n}\n\n// swiper滑动改变时的处理\nconst onSwiperChange = async (e) => {\n  const index = e.detail.current\n  const newStatus = statusTabs.value[index].value\n  const oldStatus = currentStatus.value\n  \n  currentTabIndex.value = index\n  currentStatus.value = newStatus\n  \n  // 清除之前的定时器\n  if (swiperChangeTimer) {\n    clearTimeout(swiperChangeTimer)\n  }\n  \n  // 如果切换到新的状态且该状态未加载数据，则延迟加载数据（防抖）\n  if (oldStatus !== newStatus && !orderListCache.value[newStatus]) {\n    swiperChangeTimer = setTimeout(async () => {\n      page.value = 1\n      hasMore.value = true\n      orderListData.value[newStatus] = []\n      await loadOrderList()\n    }, 300) // 300ms防抖延迟\n  }\n}\n\n// 获取指定状态的订单列表\nconst getTabOrderList = (status) => {\n  return orderListData.value[status] || []\n}\n\n// 加载订单列表\nconst loadOrderList = async () => {\n  if (isLoading.value) return\n  \n  isLoading.value = true\n  \n  try {\n    const params = {\n      page: page.value,\n      page_size: pageSize.value,\n      status_group: currentStatus.value\n    }\n    \n    const response = await getOrderList(params)\n    console.log(\"response.data\",response.data)\n    if (response.data.code === 0) {\n      const { list, total } = response.data.data\n\n      \n      if (page.value === 1) {\n        orderListData.value[currentStatus.value] = list || []\n        // 更新当前状态的计数\n        updateCurrentStatusCount(total)\n      } else {\n        orderListData.value[currentStatus.value].push(...(list || []))\n      }\n      \n      hasMore.value = orderListData.value[currentStatus.value].length < total\n      \n      // 缓存当前状态的数据\n      orderListCache.value[currentStatus.value] = {\n        list: [...orderListData.value[currentStatus.value]],\n        page: page.value,\n        hasMore: hasMore.value\n      }\n    } else {\n      throw new Error(response.msg || '获取订单列表失败')\n    }\n  } catch (error) {\n    console.error('加载订单列表失败:', error)\n    uni.showToast({\n      title: error.message || '加载失败',\n      icon: 'none'\n    })\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// 更新当前状态的计数（不需要额外API请求）\nconst updateCurrentStatusCount = (total) => {\n  const currentTab = statusTabs.value.find(tab => tab.value === currentStatus.value)\n  if (currentTab) {\n    currentTab.count = total || 0\n  }\n}\n\n// 更新状态计数（用于需要单独获取计数的场景）\nconst updateStatusCounts = async () => {\n  try {\n    // 只更新当前状态的计数，避免重复请求\n    const currentTab = statusTabs.value.find(tab => tab.value === currentStatus.value)\n    if (currentTab) {\n      const response = await getOrderList({ page: 1, page_size: 1, status_group: currentStatus.value })\n      if (response.data.code === 0) {\n        currentTab.count = response.data.data?.total || 0\n      }\n    }\n  } catch (error) {\n    console.error('更新状态计数失败:', error)\n  }\n}\n\n// 下拉刷新\nconst onRefresh = async () => {\n  if (isRefreshing.value) return // 防止重复刷新\n  \n  isRefreshing.value = true\n  page.value = 1\n  hasMore.value = true\n  \n  // 清除当前状态的缓存，强制重新加载\n  delete orderListCache.value[currentStatus.value]\n  \n  try {\n    await loadOrderList()\n    \n    // 模拟加载时间，确保用户能看到刷新动画\n    await new Promise(resolve => setTimeout(resolve, 800))\n  } catch (error) {\n    console.error('刷新失败:', error)\n  } finally {\n    isRefreshing.value = false\n  }\n}\n\nconst onRefreshRestore = () => {\n  isRefreshing.value = false\n}\n\n// 加载更多\nconst loadMore = async () => {\n  if (isLoadingMore.value || !hasMore.value) return\n  \n  isLoadingMore.value = true\n  page.value++\n  \n  try {\n    await loadOrderList()\n  } catch (error) {\n    console.error('加载更多失败:', error)\n    page.value--\n  } finally {\n    isLoadingMore.value = false\n  }\n}\n\n// 获取状态样式类\nconst getStatusClass = (status) => {\n  const statusMap = {\n    1: 'status-pending',      // 待付款\n    2: 'status-to-serve',     // 待服务（已支付待确认）\n    3: 'status-to-serve',     // 待服务（已确认待到达）\n    4: 'status-to-serve',     // 待服务（已到达待开始）\n    5: 'status-in-progress',  // 进行中\n    6: 'status-completed',    // 已完成\n    7: 'status-cancelled',    // 已取消\n    8: 'status-refunded',     // 已退款\n    9: 'status-refunding',    // 退款中\n    10: 'status-cancelled',   // 超时取消\n    11: 'status-to-serve'     // 待服务（已确认待开始出发）\n  }\n  return statusMap[status] || 'status-default'\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  const statusMap = {\n    1: '待付款',\n    2: '等待接单',\n    3: '友伴已出发',\n    4: '友伴已到达',\n    5: '进行中',\n    6: '已完成',\n    7: '已取消',\n    8: '已退款',\n    9: '退款中',\n    10: '超时取消',\n    11: '已接单，等待出发'\n  }\n  return statusMap[status] || '未知状态'\n}\n\n// 获取金额标签文本\nconst getAmountLabel = (status) => {\n  if (status === 1) {\n    return '需付款：'\n  } else if (status === 2 || status === 3 || status === 4 || status === 5 || status === 6 || status === 11) {\n    return '实付款：'\n  } else {\n    return '订单金额：'\n  }\n}\n\n// 获取订单操作按钮\nconst getOrderActions = (status) => {\n  const actionMap = {\n    1: [ // 待付款\n      { text: '取消订单', action: 'cancel', type: 'secondary' },\n      { text: '立即支付', action: 'pay', type: 'primary' }\n    ],\n    2: [ // 待服务（已支付待确认）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '联系友伴', action: 'contact', type: 'primary' }\n    ],\n    3: [ // 待服务（已确认待到达）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '联系友伴', action: 'contact', type: 'primary' }\n    ],\n    4: [ // 待服务（已到达待开始）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '开始服务', action: 'start', type: 'start' }\n    ],\n    5: [ // 进行中\n      { text: '续钟', action: 'extend', type: 'primary' },\n      { text: '联系友伴', action: 'contact', type: 'secondary' }\n    ],\n    6: [ // 已完成\n      { text: '再次预约', action: 'rebook', type: 'primary' }\n    ],\n    7: [ // 已取消\n      { text: '删除订单', action: 'delete', type: 'secondary' }\n    ],\n    8: [ // 已退款\n      { text: '删除订单', action: 'delete', type: 'secondary' }\n    ],\n    9: [ // 退款中\n      { text: '联系客服', action: 'contact', type: 'primary' }\n    ],\n    10: [ // 超时取消\n      { text: '删除订单', action: 'delete', type: 'secondary' }\n    ],\n    11: [ // 待服务（已确认待开始出发）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '联系友伴', action: 'contact', type: 'primary' }\n    ]\n  }\n  return actionMap[status] || []\n}\n\n// 处理订单操作\nconst handleOrderAction = (action, order) => {\n  switch (action) {\n    case 'cancel':\n      handleCancelOrder(order)\n      break\n    case 'refund':\n      // 根据订单状态选择不同的退款处理方式\n      if (order.status === 3) {\n        handleApplyRefundAfterDeparture(order)\n      } else if (order.status === 4) {\n        handleApplyRefundAfterArrival(order)\n      } else {\n        handleApplyRefund(order)\n      }\n      break\n    case 'pay':\n      handlePayOrder(order)\n      break\n    case 'contact':\n      handleContactPartner(order)\n      break\n    case 'extend':\n      handleExtendOrder(order)\n      break\n    case 'rebook':\n      handleRebookOrder(order)\n      break\n    case 'review':\n      handleReviewOrder(order)\n      break\n    case 'delete':\n      handleDeleteOrder(order)\n      break\n    case 'start':\n      handleStartService(order)\n      break\n  }\n}\n\n// 取消订单\nconst handleCancelOrder = (order) => {\n  uni.showModal({\n    title: '取消订单',\n    content: '确定要取消这个订单吗？',\n    confirmText: '确定取消',\n    cancelText: '再想想',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '取消中...'\n          })\n          \n          // 调用取消订单API\n          const cancelData = {\n            order_id: order.id,\n            cancel_reason: '用户取消'\n          }\n          \n          const response = await cancelOrder(cancelData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '订单已取消',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '取消订单失败')\n          }\n        } catch (error) {\n          console.error('取消订单失败:', error)\n          uni.showToast({\n            title: error.message || '取消订单失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 申请退款\nconst handleApplyRefund = (order) => {\n  uni.showModal({\n    title: '申请退款',\n    content: '确定要申请退款吗？',\n    confirmText: '继续退款',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '申请中...'\n          })\n          \n          // 调用申请退款API\n          const refundData = {\n            order_id: order.id,\n            refund_reason: '用户申请退款'\n          }\n          \n          const response = await applyRefund(refundData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '退款申请已提交',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '申请退款失败')\n          }\n        } catch (error) {\n          console.error('申请退款失败:', error)\n          uni.showToast({\n            title: error.message || '申请退款失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 申请退款（出发后）\nconst handleApplyRefundAfterDeparture = (order) => {\n  uni.showModal({\n    title: '申请退款',\n    content: '确定要申请退款吗？由于对方已出发，退款时将扣除来回程车费。',\n    confirmText: '继续退款',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '申请中...'\n          })\n          \n          // 调用申请退款API（出发后）\n          const refundData = {\n            order_id: order.id,\n            refund_reason: '部分退款，扣除来回程车费'\n          }\n          \n          const response = await applyRefundAfterDeparture(refundData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '退款申请已提交',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '申请退款失败')\n          }\n        } catch (error) {\n          console.error('申请退款失败:', error)\n          uni.showToast({\n            title: error.message || '申请退款失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 申请退款（到达后）\nconst handleApplyRefundAfterArrival = (order) => {\n  uni.showModal({\n    title: '申请退款',\n    content: '确定要申请退款吗？由于对方已到达，退款时将扣除友伴师来回程车费。',\n    confirmText: '申请退款',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '申请中...'\n          })\n          \n          // 调用申请退款API（到达后）\n          const refundData = {\n            order_id: order.id,\n            refund_reason: '部分退款，扣除友伴师来回程车费'\n          }\n          \n          const response = await applyRefundAfterDeparture(refundData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '退款申请已提交',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '申请退款失败')\n          }\n        } catch (error) {\n          console.error('申请退款失败:', error)\n          uni.showToast({\n            title: error.message || '申请退款失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 支付订单\nconst handlePayOrder = async (order) => {\n  try {\n    // 显示加载提示\n    uni.showLoading({\n      title: '处理中...'\n    })\n    \n    // 调用支付参数接口\n    const orderParamsData = {\n      order_id: order.id,\n      payment_method: 1\n    }\n    \n    const paramsResponse = await orderParams(orderParamsData)\n    \n    if (paramsResponse.data.code === 0) {\n      // 调用微信支付\n      uni.requestPayment({\n        provider: 'wxpay',\n        ...paramsResponse.data.data.pay_params,\n        success: (res) => {\n          console.log('支付成功', res);\n          uni.showToast({\n            title: '支付成功',\n            icon: 'success',\n          });\n          // 支付成功后刷新列表\n          setTimeout(() => {\n            onRefresh()\n          }, 1500)\n        },\n        fail: (err) => {\n          console.error('支付失败', JSON.stringify(err));\n          uni.showToast({\n            title: '支付失败',\n            icon: 'none'\n          })\n        },\n      });\n    } else {\n      throw new Error(paramsResponse.data.msg || '获取支付参数失败')\n    }\n  } catch (error) {\n    console.error('支付失败:', error)\n    uni.showToast({\n      title: error.message || '支付失败',\n      icon: 'none'\n    })\n  } finally {\n    uni.hideLoading()\n  }\n}\n\n// 联系友伴师\nconst handleContactPartner = (order) => {\n  if (order.companion_id) {\n    uni.showModal({\n      title: '联系友伴师',\n      content: `是否拨打友伴师的电话？`,\n      confirmText: '拨打',\n      cancelText: '取消',\n      success: (res) => {\n        if (res.confirm) {\n          // 这里应该调用友伴师的电话\n          uni.makePhoneCall({\n            phoneNumber: '13800138000'\n          })\n        }\n      }\n    })\n  }\n}\n\n// 开始计时服务\nconst handleStartService = (order) => {\n  uni.showModal({\n    title: '开始服务',\n    content: '确认友伴师已到达并开始服务吗？',\n    confirmText: '开始服务',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '处理中...'\n          })\n          \n          // 调用开始计时API\n          const startData = {\n            order_id: order.id\n          }\n          \n          const response = await startService(startData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '服务已开始',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '开始服务失败')\n          }\n        } catch (error) {\n          console.error('开始服务失败:', error)\n          uni.showToast({\n            title: error.message || '开始服务失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 续钟\nconst handleExtendOrder = (order) => {\n  uni.navigateTo({\n    url: `/subPackages/order/extend?orderId=${order.id}`\n  })\n}\n\n// 再次预约\nconst handleRebookOrder = (order) => {\n  if (order.companion_id) {\n    let url = '/subPackages/friend/detail?id=' + order.companion_id + '&city_code=' + cityStore.currentCityCode\n    \n    uni.navigateTo({\n      url: url\n    })\n  } else {\n    uni.showToast({\n      title: '友伴信息不存在',\n      icon: 'none'\n    })\n  }\n}\n\n// 评价订单\nconst handleReviewOrder = (order) => {\n  uni.navigateTo({\n    url: `/subPackages/order/review?orderId=${order.id}`\n  })\n}\n\n// 删除订单\nconst handleDeleteOrder = (order) => {\n  uni.showModal({\n    title: '删除订单',\n    content: '确定要删除这个订单吗？删除后不可恢复。',\n    confirmText: '删除',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          uni.showLoading({\n            title: '删除中...'\n          })\n          \n          // 调用删除订单API\n          const deleteData = {\n            order_id: order.id\n          }\n          \n          const response = await deleteOrder(deleteData)\n          \n          if (response.data.code === 0) {\n            // 前端移除\n            orderListData.value[currentStatus.value] = orderListData.value[currentStatus.value].filter(o => o.id !== order.id)\n            uni.showToast({\n              title: '订单已删除',\n              icon: 'success'\n            })\n          } else {\n            throw new Error(response.data.msg || '删除订单失败')\n          }\n        } catch (error) {\n          console.error('删除订单失败:', error)\n          uni.showToast({\n            title: error.message || '删除订单失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 跳转到订单详情\nconst navigateToDetail = (orderId) => {\n  uni.navigateTo({\n    url: `/subPackages/order/detail?orderId=${orderId}`\n  })\n}\n\n// 格式化时间\nconst formatTime = (timeStr) => {\n  const date = new Date(timeStr)\n  \n  // 格式化为 YYYY-MM-DD HH:mm 格式\n  const year = date.getFullYear()\n  const month = String(date.getMonth() + 1).padStart(2, '0')\n  const day = String(date.getDate()).padStart(2, '0')\n  const hours = String(date.getHours()).padStart(2, '0')\n  const minutes = String(date.getMinutes()).padStart(2, '0')\n  \n  return `${year}-${month}-${day} ${hours}:${minutes}`\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.order-container {\n  height: 100vh;\n  background-color: #F7F8FA;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n/* 状态筛选栏 */\n.status-filter {\n  background: #FFFFFF;\n  border-bottom: 1rpx solid #f0f0f0;\n  flex-shrink: 0;\n}\n\n.filter-scroll {\n  white-space: nowrap;\n}\n\n.filter-tabs {\n  display: flex;\n  padding: 0rpx 10rpx 24rpx 0;\n  justify-content: space-around;\n}\n\n.filter-tab {\n  display: flex;\n  align-items: center;\n  padding: 12rpx 16rpx;\n  transition: all 0.3s ease;\n  position: relative;\n  flex: 1;\n  justify-content: center;\n}\n\n.filter-tab.active::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 50rpx;\n  height: 6rpx;\n  background: #7363FF;\n  border-radius: 3rpx;\n}\n\n.tab-text {\n  font-size: 28rpx;\n  font-weight: 500;\n  color: #666666;\n  transition: color 0.3s ease;\n}\n\n.filter-tab.active .tab-text {\n  color: #7363FF;\n  font-weight: 600;\n}\n\n/* 订单列表滑动容器 */\n.order-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.order-swiper {\n  flex: 1;\n  height: 100%;\n}\n\n.order-scroll-view {\n  height: 100%;\n  padding: 0 24rpx;\n  box-sizing: border-box;\n}\n\n/* 空状态 */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 120rpx 0;\n}\n\n.empty-image {\n  width: 200rpx;\n  height: 200rpx;\n  margin-bottom: 32rpx;\n  opacity: 0.6;\n}\n\n.empty-text {\n  font-size: 32rpx;\n  color: #999999;\n  margin-bottom: 16rpx;\n}\n\n.empty-desc {\n  font-size: 26rpx;\n  color: #cccccc;\n}\n\n/* 订单卡片 */\n.order-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n  margin-top: 20rpx;\n}\n\n.order-card {\n  background: #FFFFFF;\n  border-radius: 16rpx;\n  padding: 20rpx;\n  box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.06);\n  border: 1rpx solid #f0f0f0;\n}\n\n/* 订单头部 */\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 24rpx;\n}\n\n.order-info {\n  flex: 1;\n}\n\n.order-number {\n  font-size: 28rpx;\n  color: #1A1A1A;\n  font-weight: 500;\n  margin-bottom: 8rpx;\n  display: block;\n}\n\n.order-time {\n  font-size: 26rpx;\n  color: #999999;\n}\n\n.order-status {\n  font-size: 24rpx;\n  font-weight: 500;\n}\n\n.status-pending {\n  color: #ff6b35;\n}\n\n.status-to-serve {\n  color: #007bff;\n}\n\n.status-in-progress {\n  color: #28a745;\n}\n\n.status-completed {\n  color: #6c757d;\n}\n\n.status-cancelled {\n  color: #b0b0b0;\n}\n.status-refunded {\n  color: #00bcd4;\n}\n.status-refunding {\n  color: #ff9800;\n}\n\n\n/* 服务信息和订单金额行 */\n.service-amount-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24rpx;\n  padding-bottom: 24rpx;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n/* 服务信息 */\n.service-info {\n  display: flex;\n  align-items: flex-start;\n  flex: 1;\n}\n\n.service-image {\n  width: 120rpx;\n  height: 120rpx;\n  border-radius: 12rpx;\n  margin-right: 24rpx;\n  flex-shrink: 0;\n}\n\n.service-details {\n  flex: 1;\n  flex-direction: column;\n}\n\n.service-name {\n  font-size: 28rpx;\n  color: #1A1A1A;\n  margin-bottom: 8rpx;\n  display: block;\n}\n\n.service-meta {\n  display: flex;\n  justify-content: space-between;\n  gap: 8rpx;\n  align-items: flex-start;\n}\n\n.service-duration {\n  font-size: 26rpx;\n  color: #1a1a1a;\n}\n\n.service-price {\n  font-size: 26rpx;\n  color: #1a1a1a;\n\n}\n\n/* 下单时间信息 */\n.order-time-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24rpx;\n  padding-bottom: 24rpx;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n.time-label {\n  font-size: 26rpx;\n  color: #666666;\n}\n\n.time-value {\n  font-size: 26rpx;\n  color: #999999;\n}\n\n/* 订单金额 */\n.order-amount {\n  display: flex;\n  // align-items: flex-end;\n  // text-align: right;\n  // align-self: flex-end;\n  justify-content: flex-end;\n  align-items: center;\n  margin-top: 40rpx;\n \n}\n\n.amount-label {\n  font-size: 26rpx;\n  color: #666666;\n}\n\n.amount-value {\n  font-size: 30rpx;\n  color: #f43f5e;\n  font-weight: 600;\n}\n\n/* 操作按钮 */\n.order-actions {\n  display: flex;\n  gap: 16rpx;\n  justify-content: flex-end;\n}\n\n.action-btn {\n  padding: 16rpx 32rpx;\n  border-radius: 99999rpx;\n  font-size: 26rpx;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  border: 1rpx solid transparent;\n  box-sizing: border-box;\n  height: 72rpx;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.action-btn.primary {\n  background: #7363FF;\n  color: #FFFFFF;\n  border-color: #7363FF;\n}\n\n.action-btn.primary:active {\n  background: #6354e6;\n  transform: scale(0.96);\n}\n\n.action-btn.secondary {\n  background: #FFFFFF;\n  color: #666666;\n  border-color: #e9ecef;\n}\n\n.action-btn.secondary:active {\n  background: #f8f9fa;\n  transform: scale(0.96);\n}\n\n.action-btn.start {\n  background: #F44336;\n  color: #FFFFFF;\n  border-color: #F44336;\n}\n\n.action-btn.start:active {\n  background: #d32f2f;\n  transform: scale(0.96);\n}\n\n/* 微信客服透明覆盖按钮 */\n.kf_btn {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  background: transparent !important;\n  opacity: 0;\n  border: none;\n  z-index: 5;\n}\n.kf_btn::after {\n  border: none;\n}\n\n/* 提示容器 */\n.tip-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20rpx;\n}\n\n/* 自动开始服务提示 */\n.auto-start-tip {\n  background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\n  border: 1rpx solid #ffc107;\n  border-radius: 12rpx;\n  padding: 12rpx 16rpx;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  max-width: fit-content;\n  gap: 8rpx;\n}\n\n.tip-icon {\n  width: 34rpx;\n  height: 34rpx;\n  flex-shrink: 0;\n}\n.tip-text {\n  font-size: 24rpx;\n  color: #856404;\n  font-weight: 500;\n  text-align: center;\n  line-height: 1.4;\n  white-space: nowrap;\n}\n\n/* 加载更多 */\n.load-more {\n  text-align: center;\n  padding: 32rpx 0;\n}\n\n.loading-text,\n.load-more-text {\n  font-size: 26rpx;\n  color: #999999;\n}\n</style>\n","import MiniProgramPage from '/Users/xiaoqiang/Documents/friemd/firend-loving-app/subPackages/order/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserStore","useCityStore","ref","onUnmounted","onLoad","uni","watch","getOrderList","cancelOrder","applyRefund","applyRefundAfterDeparture","orderParams","startService","deleteOrder"],"mappings":"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"}