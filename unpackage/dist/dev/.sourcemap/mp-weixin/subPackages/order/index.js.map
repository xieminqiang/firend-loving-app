{"version":3,"file":"index.js","sources":["subPackages/order/index.vue","subPackages/order/index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"order-container\">\n    <!-- 状态筛选栏 -->\n    <view class=\"status-filter\">\n      <scroll-view class=\"filter-scroll\" scroll-x=\"true\" show-scrollbar=\"false\">\n        <view class=\"filter-tabs\">\n          <view \n            v-for=\"(tab, index) in statusTabs\" \n            :key=\"index\"\n            class=\"filter-tab\"\n            :class=\"{ active: currentTabIndex === index }\"\n            @click=\"switchStatus(tab.value)\"\n          >\n            <text class=\"tab-text\">{{ tab.label }}</text>\n          </view>\n        </view>\n      </scroll-view>\n    </view>\n\n    <!-- 订单列表滑动容器 -->\n    <view class=\"order-content\">\n      <swiper\n        class=\"order-swiper\"\n        :current=\"currentTabIndex\"\n        @change=\"onSwiperChange\"\n        :indicator-dots=\"false\"\n        :circular=\"false\"\n        :autoplay=\"false\"\n        :duration=\"300\"\n      >\n        <!-- 每个状态选项卡的内容 -->\n        <swiper-item v-for=\"tab in statusTabs\" :key=\"tab.value\">\n          <scroll-view \n            class=\"order-scroll-view\" \n            scroll-y=\"true\"\n            refresher-enabled=\"true\"\n            :refresher-triggered=\"isRefreshing\"\n            @refresherrefresh=\"onRefresh\"\n            @refresherrestore=\"onRefreshRestore\"\n            @scrolltolower=\"loadMore\"\n          >\n            <!-- 空状态 -->\n            <view v-if=\"getTabOrderList(tab.value).length === 0 && !isLoading\" class=\"empty-state\">\n              <image src=\"@/static/images/empty.png\" class=\"empty-image\" mode=\"aspectFit\" />\n              <text class=\"empty-text\">暂无订单</text>\n              <text class=\"empty-desc\">快去发现更多精彩服务吧</text>\n            </view>\n\n            <!-- 订单卡片列表 -->\n            <view v-else class=\"order-cards\">\n              <view \n                v-for=\"order in getTabOrderList(tab.value)\" \n                :key=\"order.id\"\n                class=\"order-card\"\n                @click=\"navigateToDetail(order.id)\"\n              >\n                <!-- 订单头部 -->\n                <view class=\"order-header\">\n                  <view class=\"order-info\">\n                    <text class=\"order-time\">{{ formatTime(order.created_at) }}</text>\n                  </view>\n                  <view class=\"order-status\" :class=\"getStatusClass(order.status)\">\n                    <text class=\"status-text\">{{ getStatusText(order.status) }}</text>\n                  </view>\n                </view>\n\n                <!-- 服务信息和订单金额 -->\n                <view class=\"service-amount-row\">\n                  <view class=\"service-info\">\n                    <image :src=\"$imgBaseUrl + order.service_image_url\" class=\"service-image\" mode=\"aspectFill\" />\n                    <view class=\"service-details\">\n                      <text class=\"service-name\">{{ order.service_name }}</text>\n                      <view class=\"service-meta\">\n                        \n                        <text class=\"service-price\">¥{{ order.unit_price }}/{{ order.unit }}</text>\n                        <text class=\"service-duration\">x{{ order.quantity }}</text>\n                      </view>\n                      <view class=\"order-amount\">\n                    <text class=\"amount-label\">{{ getAmountLabel(order.status) }}</text>\n                    <text class=\"amount-value\">¥{{ order.total_amount }}</text>\n                  </view>\n                    </view>\n                  </view>\n                 \n                </view>\n\n                <!-- 状态4的提示语 -->\n                <view v-if=\"order.status === 4\" class=\"tip-container\">\n                  <view class=\"auto-start-tip\">\n                    <image src=\"@/static/icons/common/shijian.png\" class=\"tip-icon\" mode=\"aspectFit\" />\n                    <text class=\"tip-text\">友伴师已到达，5分钟后将自动开始计时服务</text>\n                  </view>\n                </view>\n\n                <!-- 操作按钮 -->\n                <view class=\"order-actions\">\n                  <view \n                    v-for=\"(action, actionIndex) in getOrderActions(order.status, order)\" \n                    :key=\"actionIndex\"\n                    class=\"action-btn\"\n                    :class=\"action.type\"\n                    @click.stop=\"handleOrderAction(action.action, order)\"\n                  >\n                    <text class=\"action-text\">{{ action.text }}</text>\n                    <!-- #ifdef MP-WEIXIN -->\n                    <button v-if=\"action.text === '联系客服'\" open-type=\"contact\" class=\"kf_btn\" @tap.stop></button>\n                    <!-- #endif -->\n                  </view>\n                </view>\n              </view>\n\n              <!-- 加载更多 -->\n              <view v-if=\"hasMore && getTabOrderList(tab.value).length > 0\" class=\"load-more\">\n                <text v-if=\"isLoadingMore\" class=\"loading-text\">加载中...</text>\n                <!-- <text v-else class=\"load-more-text\">上拉加载更多</text> -->\n              </view>\n            </view>\n             <view style=\"height: 50rpx;\"></view>\n\t\t  \n\t\t  \n\t\t  </scroll-view>\n        </swiper-item>\n      </swiper>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onUnmounted, onMounted } from 'vue'\nimport { onLoad } from '@dcloudio/uni-app'\nimport { useUserStore } from '@/stores/user.js'\nimport { useCityStore } from '@/stores/city.js'\nimport { getOrderList, cancelOrder, deleteOrder, applyRefund, applyRefundAfterDeparture, startService, orderParams, getCompanionPhone } from '@/api/order.js'\n\n// 用户状态管理\nconst userStore = useUserStore()\nconst cityStore = useCityStore()\n\n// 页面状态\nconst currentStatus = ref('all')\nconst currentTabIndex = ref(0)\nconst isRefreshing = ref(false)\nconst isLoading = ref(false)\nconst isLoadingMore = ref(false)\nconst hasMore = ref(true)\nconst page = ref(1)\nconst pageSize = ref(20)\n\n// 订单列表数据缓存 - 为每个状态维护独立的列表\nconst orderListCache = ref({})\nconst orderListData = ref({\n  'all': [],\n  'pending_payment': [],\n  'pending_service': [],\n  'in_service': [],\n  'completed': [],\n  'cancelled': [],\n  'refunded': [],\n  'refunding': []\n})\n\n// 防抖定时器\nlet swiperChangeTimer = null\n\n// 页面卸载时清除定时器\nonUnmounted(() => {\n  if (swiperChangeTimer) {\n    clearTimeout(swiperChangeTimer)\n  }\n  \n  // 移除事件监听器\n  uni.$off('orderStatusChanged')\n  uni.$off('orderOrderDeleted')\n})\n\n// 页面挂载时添加事件监听器\nonMounted(() => {\n  // 监听订单状态变化事件\n  uni.$on('orderStatusChanged', handleOrderStatusChanged)\n  \n  // 监听订单删除事件\n  uni.$on('orderOrderDeleted', handleOrderDeleted)\n})\n\n// 状态筛选标签\nconst statusTabs = ref([\n  { label: '全部', value: 'all', count: 0 },\n  { label: '待付款', value: 'pending_payment', count: 0 },\n  { label: '待服务', value: 'pending_service', count: 0 },\n  { label: '进行中', value: 'in_service', count: 0 },\n  { label: '已完成', value: 'completed', count: 0 },\n  // { label: '已取消', value: 'cancelled', count: 0 },\n  // { label: '已退款', value: 'refunded', count: 0 },\n  // { label: '退款中', value: 'refunding', count: 0 }\n])\n\n// 处理页面参数\nonLoad((options) => {\n  console.log('订单页面接收到的参数:', options)\n  if (options.status) {\n    console.log('设置订单状态为:', options.status)\n    currentStatus.value = options.status\n    // 设置对应的选项卡索引\n    const statusIndex = statusTabs.value.findIndex(tab => tab.value === options.status)\n    if (statusIndex !== -1) {\n      currentTabIndex.value = statusIndex\n    }\n    // 重置页面状态\n    page.value = 1\n    hasMore.value = true\n    // 清除缓存，强制重新加载\n    delete orderListCache.value[options.status]\n  } else {\n    console.log('没有传递状态参数，使用默认状态: all')\n    currentStatus.value = 'all'\n    currentTabIndex.value = 0\n  }\n  \n  // 在onLoad中加载数据，这是唯一的数据加载入口\n  console.log('onLoad中加载数据，当前状态:', currentStatus.value)\n  loadOrderList()\n})\n\n// 监听状态变化\nwatch(currentStatus, (newStatus, oldStatus) => {\n  console.log('状态变化:', oldStatus, '->', newStatus)\n})\n\n// 切换状态筛选\nconst switchStatus = async (status) => {\n  if (currentStatus.value === status) return // 避免重复切换\n  \n  currentStatus.value = status\n  const statusIndex = statusTabs.value.findIndex(tab => tab.value === status)\n  if (statusIndex !== -1) {\n    currentTabIndex.value = statusIndex\n  }\n  \n  // 检查缓存中是否已有该状态的数据\n  if (orderListCache.value[status]) {\n    // 从缓存恢复数据\n    orderListData.value[status] = orderListCache.value[status].list\n    page.value = orderListCache.value[status].page\n    hasMore.value = orderListCache.value[status].hasMore\n  } else {\n    // 缓存中没有数据，需要请求\n    page.value = 1\n    hasMore.value = true\n    orderListData.value[status] = []\n    \n    try {\n      await loadOrderList()\n    } catch (error) {\n      console.error('切换状态失败:', error)\n    }\n  }\n}\n\n// swiper滑动改变时的处理\nconst onSwiperChange = async (e) => {\n  const index = e.detail.current\n  const newStatus = statusTabs.value[index].value\n  const oldStatus = currentStatus.value\n  \n  currentTabIndex.value = index\n  currentStatus.value = newStatus\n  \n  // 清除之前的定时器\n  if (swiperChangeTimer) {\n    clearTimeout(swiperChangeTimer)\n  }\n  \n  // 如果切换到新的状态且该状态未加载数据，则延迟加载数据（防抖）\n  if (oldStatus !== newStatus && !orderListCache.value[newStatus]) {\n    swiperChangeTimer = setTimeout(async () => {\n      page.value = 1\n      hasMore.value = true\n      orderListData.value[newStatus] = []\n      await loadOrderList()\n    }, 300) // 300ms防抖延迟\n  }\n}\n\n// 获取指定状态的订单列表\nconst getTabOrderList = (status) => {\n  return orderListData.value[status] || []\n}\n\n// 加载订单列表\nconst loadOrderList = async () => {\n  if (isLoading.value) return\n  \n  isLoading.value = true\n  \n  try {\n    const params = {\n      page: page.value,\n      page_size: pageSize.value,\n      status_group: currentStatus.value\n    }\n    \n    const response = await getOrderList(params)\n    console.log(\"response.data\",response.data)\n    if (response.data.code === 0) {\n      const { list, total } = response.data.data\n\n      \n      if (page.value === 1) {\n        orderListData.value[currentStatus.value] = list || []\n        // 更新当前状态的计数\n        updateCurrentStatusCount(total)\n      } else {\n        orderListData.value[currentStatus.value].push(...(list || []))\n      }\n      \n      hasMore.value = orderListData.value[currentStatus.value].length < total\n      \n      // 缓存当前状态的数据\n      orderListCache.value[currentStatus.value] = {\n        list: [...orderListData.value[currentStatus.value]],\n        page: page.value,\n        hasMore: hasMore.value\n      }\n    } else {\n      throw new Error(response.msg || '获取订单列表失败')\n    }\n  } catch (error) {\n    console.error('加载订单列表失败:', error)\n    uni.showToast({\n      title: error.message || '加载失败',\n      icon: 'none'\n    })\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// 更新当前状态的计数（不需要额外API请求）\nconst updateCurrentStatusCount = (total) => {\n  const currentTab = statusTabs.value.find(tab => tab.value === currentStatus.value)\n  if (currentTab) {\n    currentTab.count = total || 0\n  }\n}\n\n// 更新状态计数（用于需要单独获取计数的场景）\nconst updateStatusCounts = async () => {\n  try {\n    // 只更新当前状态的计数，避免重复请求\n    const currentTab = statusTabs.value.find(tab => tab.value === currentStatus.value)\n    if (currentTab) {\n      const response = await getOrderList({ page: 1, page_size: 1, status_group: currentStatus.value })\n      if (response.data.code === 0) {\n        currentTab.count = response.data.data?.total || 0\n      }\n    }\n  } catch (error) {\n    console.error('更新状态计数失败:', error)\n  }\n}\n\n// 下拉刷新\nconst onRefresh = async () => {\n  if (isRefreshing.value) return // 防止重复刷新\n  \n  isRefreshing.value = true\n  page.value = 1\n  hasMore.value = true\n  \n  // 清除当前状态的缓存，强制重新加载\n  delete orderListCache.value[currentStatus.value]\n  \n  try {\n    await loadOrderList()\n    \n    // 模拟加载时间，确保用户能看到刷新动画\n    await new Promise(resolve => setTimeout(resolve, 800))\n  } catch (error) {\n    console.error('刷新失败:', error)\n  } finally {\n    isRefreshing.value = false\n  }\n}\n\nconst onRefreshRestore = () => {\n  isRefreshing.value = false\n}\n\n// 加载更多\nconst loadMore = async () => {\n  if (isLoadingMore.value || !hasMore.value) return\n  \n  isLoadingMore.value = true\n  page.value++\n  \n  try {\n    await loadOrderList()\n  } catch (error) {\n    console.error('加载更多失败:', error)\n    page.value--\n  } finally {\n    isLoadingMore.value = false\n  }\n}\n\n// 获取状态样式类\nconst getStatusClass = (status) => {\n  const statusMap = {\n    1: 'status-pending',      // 待付款\n    2: 'status-to-serve',     // 待服务（已支付待确认）\n    3: 'status-to-serve',     // 待服务（已确认待到达）\n    4: 'status-to-serve',     // 待服务（已到达待开始）\n    5: 'status-in-progress',  // 进行中\n    6: 'status-completed',    // 已完成\n    7: 'status-cancelled',    // 已取消\n    8: 'status-refunded',     // 已退款\n    9: 'status-refunding',    // 退款中\n    10: 'status-cancelled',   // 超时取消\n    11: 'status-to-serve'     // 待服务（已确认待开始出发）\n  }\n  return statusMap[status] || 'status-default'\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  const statusMap = {\n    1: '待付款',\n    2: '等待接单',\n    3: '友伴已出发',\n    4: '友伴已到达',\n    5: '进行中',\n    6: '已完成',\n    7: '已取消',\n    8: '已退款',\n    9: '退款中',\n    10: '超时取消',\n    11: '已接单，等待出发'\n  }\n  return statusMap[status] || '未知状态'\n}\n\n// 获取金额标签文本\nconst getAmountLabel = (status) => {\n  if (status === 1) {\n    return '需付款：'\n  } else if (status === 2 || status === 3 || status === 4 || status === 5 || status === 6 || status === 11) {\n    return '实付款：'\n  } else {\n    return '订单金额：'\n  }\n}\n\n// 获取订单操作按钮\nconst getOrderActions = (status, order = null) => {\n  const actionMap = {\n    1: [ // 待付款\n      { text: '取消订单', action: 'cancel', type: 'secondary' },\n      { text: '立即支付', action: 'pay', type: 'primary' }\n    ],\n    2: [ // 待服务（已支付待确认）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '联系友伴', action: 'contact', type: 'primary' }\n    ],\n    3: [ // 待服务（已确认待到达）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '联系友伴', action: 'contact', type: 'primary' }\n    ],\n    4: [ // 待服务（已到达待开始）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '开始服务', action: 'start', type: 'start' }\n    ],\n    5: [ // 进行中\n      // { text: '续钟', action: 'extend', type: 'primary' },\n      { text: '联系友伴', action: 'contact', type: 'secondary' }\n    ],\n    6: [ // 已完成\n      { text: order && order.is_comment === 1 ? '查看评价' : '去评价', action: order && order.is_comment === 1 ? 'viewComment' : 'evaluate', type: 'primary' },\n      { text: '再次预约', action: 'rebook', type: 'secondary' }\n    ],\n    7: [ // 已取消\n      { text: '删除订单', action: 'delete', type: 'secondary' }\n    ],\n    8: [ // 已退款\n      { text: '删除订单', action: 'delete', type: 'secondary' }\n    ],\n    9: [ // 退款中\n\n      { text: '联系客服', action: 'contact', type: 'primary' }\n    ],\n    10: [ // 超时取消\n      { text: '删除订单', action: 'delete', type: 'secondary' }\n    ],\n    11: [ // 待服务（已确认待开始出发）\n      { text: '申请退款', action: 'refund', type: 'secondary' },\n      { text: '联系友伴', action: 'contact', type: 'primary' }\n    ]\n  }\n  return actionMap[status] || []\n}\n\n// 处理订单操作\nconst handleOrderAction = (action, order) => {\n  switch (action) {\n    case 'cancel':\n      handleCancelOrder(order)\n      break\n    case 'refund':\n      // 根据订单状态选择不同的退款处理方式\n      if (order.status === 3) {\n        handleApplyRefundAfterDeparture(order)\n      } else if (order.status === 4) {\n        handleApplyRefundAfterArrival(order)\n      } else {\n        handleApplyRefund(order)\n      }\n      break\n    case 'pay':\n      handlePayOrder(order)\n      break\n    case 'contact':\n      handleContactPartner(order)\n      break\n    case 'extend':\n      handleExtendOrder(order)\n      break\n    case 'rebook':\n      handleRebookOrder(order)\n      break\n    case 'review':\n      handleReviewOrder(order)\n      break\n    case 'delete':\n      handleDeleteOrder(order)\n      break\n    case 'start':\n      handleStartService(order)\n      break\n    case 'evaluate':\n      handleEvaluateOrder(order)\n      break\n    case 'viewComment':\n      handleViewComment(order)\n      break\n  }\n}\n\n// 取消订单\nconst handleCancelOrder = (order) => {\n  uni.showModal({\n    title: '取消订单',\n    content: '确定要取消这个订单吗？',\n    confirmText: '确定取消',\n    cancelText: '再想想',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '取消中...'\n          })\n          \n          // 调用取消订单API\n          const cancelData = {\n            order_id: order.id,\n            cancel_reason: '用户取消'\n          }\n          \n          const response = await cancelOrder(cancelData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '订单已取消',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '取消订单失败')\n          }\n        } catch (error) {\n          console.error('取消订单失败:', error)\n          uni.showToast({\n            title: error.message || '取消订单失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 申请退款\nconst handleApplyRefund = (order) => {\n  uni.showModal({\n    title: '申请退款',\n    content: '确定要申请退款吗？',\n    confirmText: '继续退款',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '申请中...'\n          })\n          \n          // 调用申请退款API\n          const refundData = {\n            order_id: order.id,\n            refund_reason: '用户申请退款'\n          }\n          \n          const response = await applyRefund(refundData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '退款申请已提交',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '申请退款失败')\n          }\n        } catch (error) {\n          console.error('申请退款失败:', error)\n          uni.showToast({\n            title: error.message || '申请退款失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 申请退款（出发后）\nconst handleApplyRefundAfterDeparture = (order) => {\n  uni.showModal({\n    title: '申请退款',\n    content: '确定要申请退款吗？由于对方已出发，退款时将扣除来回程车费。',\n    confirmText: '继续退款',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '申请中...'\n          })\n          \n          // 调用申请退款API（出发后）\n          const refundData = {\n            order_id: order.id,\n            refund_reason: '部分退款，扣除来回程车费'\n          }\n          \n          const response = await applyRefundAfterDeparture(refundData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '退款申请已提交',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '申请退款失败')\n          }\n        } catch (error) {\n          console.error('申请退款失败:', error)\n          uni.showToast({\n            title: error.message || '申请退款失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 申请退款（到达后）\nconst handleApplyRefundAfterArrival = (order) => {\n  uni.showModal({\n    title: '申请退款',\n    content: '确定要申请退款吗？由于对方已到达，退款时将扣除友伴师来回程车费。',\n    confirmText: '申请退款',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '申请中...'\n          })\n          \n          // 调用申请退款API（到达后）\n          const refundData = {\n            order_id: order.id,\n            refund_reason: '部分退款，扣除友伴师来回程车费'\n          }\n          \n          const response = await applyRefundAfterDeparture(refundData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '退款申请已提交',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '申请退款失败')\n          }\n        } catch (error) {\n          console.error('申请退款失败:', error)\n          uni.showToast({\n            title: error.message || '申请退款失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 支付订单\nconst handlePayOrder = async (order) => {\n  try {\n    // 显示加载提示\n    uni.showLoading({\n      title: '处理中...'\n    })\n    \n    // 调用支付参数接口\n    const orderParamsData = {\n      order_id: order.id,\n      payment_method: 1\n    }\n    \n    const paramsResponse = await orderParams(orderParamsData)\n    \n    if (paramsResponse.data.code === 0) {\n      // 调用微信支付\n      uni.requestPayment({\n        provider: 'wxpay',\n        ...paramsResponse.data.data.pay_params,\n        success: (res) => {\n          console.log('支付成功', res);\n          uni.showToast({\n            title: '支付成功',\n            icon: 'success',\n          });\n          // 支付成功后刷新列表\n          setTimeout(() => {\n            onRefresh()\n          }, 1500)\n        },\n        fail: (err) => {\n          console.error('支付失败', JSON.stringify(err));\n          uni.showToast({\n            title: '支付失败',\n            icon: 'none'\n          })\n        },\n      });\n    } else {\n      throw new Error(paramsResponse.data.msg || '获取支付参数失败')\n    }\n  } catch (error) {\n    console.error('支付失败:', error)\n    uni.showToast({\n      title: error.message || '支付失败',\n      icon: 'none'\n    })\n  } finally {\n    uni.hideLoading()\n  }\n}\n\n// 联系友伴师\nconst handleContactPartner = async (order) => {\n  console.log(order)\n  if (order.companion_id) {\n    try {\n      // 显示加载提示\n      uni.showLoading({\n        title: '获取电话中...'\n      })\n      \n      // 调用获取友伴师电话API\n      const phoneData = {\n        companion_id: order.companion_id\n      }\n      \n      const response = await getCompanionPhone(phoneData)\n      \n      if (response.data.code === 0) {\n        const phoneNumber = response.data.data.phone\n        uni.hideLoading()\n        \n        uni.showModal({\n          title: '联系友伴师',\n          content: `是否拨打友伴师的电话？\\n${phoneNumber}`,\n          confirmText: '拨打',\n          cancelText: '取消',\n          success: (res) => {\n            if (res.confirm) {\n              uni.makePhoneCall({\n                phoneNumber: phoneNumber\n              })\n            }\n          }\n        })\n      } else {\n        throw new Error(response.data.msg || '获取友伴师电话失败')\n      }\n    } catch (error) {\n      console.error('获取友伴师电话失败:', error)\n      uni.hideLoading()\n      uni.showToast({\n        title: error.message || '获取友伴师电话失败',\n        icon: 'none'\n      })\n    }\n  } else {\n    uni.showToast({\n      title: '友伴师信息不存在',\n      icon: 'none'\n    })\n  }\n}\n\n// 开始计时服务\nconst handleStartService = (order) => {\n  uni.showModal({\n    title: '开始服务',\n    content: '确认友伴师已到达并开始服务吗？',\n    confirmText: '开始服务',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          // 显示加载提示\n          uni.showLoading({\n            title: '处理中...'\n          })\n          \n          // 调用开始计时API\n          const startData = {\n            order_id: order.id\n          }\n          \n          const response = await startService(startData)\n          \n          if (response.data.code === 0) {\n            uni.showToast({\n              title: '服务已开始',\n              icon: 'success'\n            })\n            // 刷新列表\n            onRefresh()\n          } else {\n            throw new Error(response.data.msg || '开始服务失败')\n          }\n        } catch (error) {\n          console.error('开始服务失败:', error)\n          uni.showToast({\n            title: error.message || '开始服务失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 续钟\nconst handleExtendOrder = (order) => {\n  uni.navigateTo({\n    url: `/subPackages/order/extend?orderId=${order.id}`\n  })\n}\n\n// 再次预约\nconst handleRebookOrder = (order) => {\n  if (order.companion_id) {\n    let url = '/subPackages/py/detail?id=' + order.companion_id + '&city_code=' + cityStore.currentCityCode\n    \n    uni.navigateTo({\n      url: url\n    })\n  } else {\n    uni.showToast({\n      title: '友伴信息不存在',\n      icon: 'none'\n    })\n  }\n}\n\n// 去评价订单\nconst handleEvaluateOrder = (order) => {\n  // 跳转到评价页面，传递必要参数\n  uni.navigateTo({\n    url: `/subPackages/order/evaluate?orderId=${order.id}&serviceName=${encodeURIComponent(order.service_name)}&serviceImage=${encodeURIComponent(order.service_image_url)}`\n  })\n}\n\n// 查看评价\nconst handleViewComment = (order) => {\n  // 跳转到评价详情页面\n  uni.navigateTo({\n    url: `/subPackages/order/evaluate-detail?orderId=${order.id}`\n  })\n}\n\n// 删除订单\nconst handleDeleteOrder = (order) => {\n  uni.showModal({\n    title: '删除订单',\n    content: '确定要删除这个订单吗？删除后不可恢复。',\n    confirmText: '删除',\n    cancelText: '取消',\n    success: async (res) => {\n      if (res.confirm) {\n        try {\n          uni.showLoading({\n            title: '删除中...'\n          })\n          \n          // 调用删除订单API\n          const deleteData = {\n            order_id: order.id\n          }\n          \n          const response = await deleteOrder(deleteData)\n          \n          if (response.data.code === 0) {\n            // 前端移除\n            orderListData.value[currentStatus.value] = orderListData.value[currentStatus.value].filter(o => o.id !== order.id)\n            uni.showToast({\n              title: '订单已删除',\n              icon: 'success'\n            })\n          } else {\n            throw new Error(response.data.msg || '删除订单失败')\n          }\n        } catch (error) {\n          console.error('删除订单失败:', error)\n          uni.showToast({\n            title: error.message || '删除订单失败',\n            icon: 'none'\n          })\n        } finally {\n          uni.hideLoading()\n        }\n      }\n    }\n  })\n}\n\n// 跳转到订单详情\nconst navigateToDetail = (orderId) => {\n  uni.navigateTo({\n    url: `/subPackages/order/detail?orderId=${orderId}`\n  })\n}\n\n// 处理订单状态变化事件\nconst handleOrderStatusChanged = (data) => {\n  console.log('收到订单状态变化事件:', data)\n  \n  // 更新对应状态的订单列表\n  const { type, orderId, status } = data\n  \n  if (type === 'cancel') {\n    // 订单被取消，需要从当前状态列表中移除\n    // 并添加到已取消状态列表中\n    updateOrderStatus(orderId, status)\n  }\n}\n\n// 处理订单删除事件\nconst handleOrderDeleted = (data) => {\n  console.log('收到订单删除事件:', data)\n  \n  const { orderId, status } = data\n  \n  // 从所有状态列表中移除该订单\n  removeOrderFromAllStatus(orderId)\n}\n\n// 更新订单状态\nconst updateOrderStatus = (orderId, newStatus) => {\n  // 从所有状态列表中查找并移除该订单\n  let foundOrder = null\n  \n  Object.keys(orderListData.value).forEach(statusKey => {\n    const orderIndex = orderListData.value[statusKey].findIndex(order => order.id === orderId)\n    if (orderIndex !== -1) {\n      foundOrder = orderListData.value[statusKey][orderIndex]\n      orderListData.value[statusKey].splice(orderIndex, 1)\n    }\n  })\n  \n  // 如果找到了订单，根据新状态添加到对应列表\n  if (foundOrder) {\n    foundOrder.status = newStatus\n    \n    // 根据新状态添加到对应列表\n    if (newStatus === 7) { // 已取消\n      orderListData.value.cancelled.unshift(foundOrder)\n    } else if (newStatus === 8) { // 已退款\n      orderListData.value.refunded.unshift(foundOrder)\n    } else if (newStatus === 9) { // 退款中\n      orderListData.value.refunding.unshift(foundOrder)\n    }\n    \n    // 更新缓存\n    updateOrderListCache()\n  }\n}\n\n// 从所有状态列表中移除订单\nconst removeOrderFromAllStatus = (orderId) => {\n  Object.keys(orderListData.value).forEach(statusKey => {\n    const orderIndex = orderListData.value[statusKey].findIndex(order => order.id === orderId)\n    if (orderIndex !== -1) {\n      orderListData.value[statusKey].splice(orderIndex, 1)\n    }\n  })\n  \n  // 更新缓存\n  updateOrderListCache()\n}\n\n// 更新订单列表缓存\nconst updateOrderListCache = () => {\n  Object.keys(orderListData.value).forEach(statusKey => {\n    if (orderListCache.value[statusKey]) {\n      orderListCache.value[statusKey].list = [...orderListData.value[statusKey]]\n    }\n  })\n}\n\n// 格式化时间\nconst formatTime = (timeStr) => {\n  const date = new Date(timeStr)\n  \n  // 格式化为 YYYY-MM-DD HH:mm 格式\n  const year = date.getFullYear()\n  const month = String(date.getMonth() + 1).padStart(2, '0')\n  const day = String(date.getDate()).padStart(2, '0')\n  const hours = String(date.getHours()).padStart(2, '0')\n  const minutes = String(date.getMinutes()).padStart(2, '0')\n  \n  return `${year}-${month}-${day} ${hours}:${minutes}`\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.order-container {\n  height: 100vh;\n  background-color: #F7F8FA;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n/* 状态筛选栏 */\n.status-filter {\n  background: #FFFFFF;\n  border-bottom: 1rpx solid #f0f0f0;\n  flex-shrink: 0;\n}\n\n.filter-scroll {\n  white-space: nowrap;\n}\n\n.filter-tabs {\n  display: flex;\n  padding: 0rpx 10rpx 24rpx 0;\n  justify-content: space-around;\n}\n\n.filter-tab {\n  display: flex;\n  align-items: center;\n  padding: 12rpx 16rpx;\n  transition: all 0.3s ease;\n  position: relative;\n  flex: 1;\n  justify-content: center;\n}\n\n.filter-tab.active::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 50rpx;\n  height: 6rpx;\n  background: #7363FF;\n  border-radius: 3rpx;\n}\n\n.tab-text {\n  font-size: 28rpx;\n  font-weight: 500;\n  color: #666666;\n  transition: color 0.3s ease;\n}\n\n.filter-tab.active .tab-text {\n  color: #7363FF;\n  font-weight: 600;\n}\n\n/* 订单列表滑动容器 */\n.order-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.order-swiper {\n  flex: 1;\n  height: 100%;\n}\n\n.order-scroll-view {\n  height: 100%;\n  padding: 0 24rpx;\n  box-sizing: border-box;\n}\n\n/* 空状态 */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 120rpx 0;\n}\n\n.empty-image {\n  width: 200rpx;\n  height: 200rpx;\n  margin-bottom: 32rpx;\n  opacity: 0.6;\n}\n\n.empty-text {\n  font-size: 28rpx;\n  color: #999999;\n  margin-bottom: 16rpx;\n}\n\n.empty-desc {\n  font-size: 24rpx;\n  color: #cccccc;\n}\n\n/* 订单卡片 */\n.order-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n  margin-top: 20rpx;\n}\n\n.order-card {\n  background: #FFFFFF;\n  border-radius: 16rpx;\n  padding: 20rpx;\n\n}\n\n/* 订单头部 */\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 24rpx;\n}\n\n.order-info {\n  flex: 1;\n}\n\n.order-number {\n  font-size: 28rpx;\n  color: #1A1A1A;\n  font-weight: 500;\n  margin-bottom: 8rpx;\n  display: block;\n}\n\n.order-time {\n  font-size: 26rpx;\n  color: #999999;\n}\n\n.order-status {\n  font-size: 24rpx;\n  font-weight: 500;\n}\n\n.status-pending {\n  color: #ff6b35;\n}\n\n.status-to-serve {\n  color: #007bff;\n}\n\n.status-in-progress {\n  color: #28a745;\n}\n\n.status-completed {\n  color: #6c757d;\n}\n\n.status-cancelled {\n  color: #b0b0b0;\n}\n.status-refunded {\n  color: #00bcd4;\n}\n.status-refunding {\n  color: #ff9800;\n}\n\n\n/* 服务信息和订单金额行 */\n.service-amount-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24rpx;\n  padding-bottom: 24rpx;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n/* 服务信息 */\n.service-info {\n  display: flex;\n  align-items: flex-start;\n  flex: 1;\n}\n\n.service-image {\n  width: 120rpx;\n  height: 120rpx;\n  border-radius: 12rpx;\n  margin-right: 24rpx;\n  flex-shrink: 0;\n}\n\n.service-details {\n  flex: 1;\n  flex-direction: column;\n}\n\n.service-name {\n  font-size: 28rpx;\n  color: #1A1A1A;\n  margin-bottom: 8rpx;\n  display: block;\n}\n\n.service-meta {\n  display: flex;\n  justify-content: space-between;\n  gap: 8rpx;\n  align-items: flex-start;\n}\n\n.service-duration {\n  font-size: 26rpx;\n  color: #1a1a1a;\n}\n\n.service-price {\n  font-size: 26rpx;\n  color: #1a1a1a;\n\n}\n\n/* 下单时间信息 */\n.order-time-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24rpx;\n  padding-bottom: 24rpx;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n.time-label {\n  font-size: 26rpx;\n  color: #666666;\n}\n\n.time-value {\n  font-size: 26rpx;\n  color: #999999;\n}\n\n/* 订单金额 */\n.order-amount {\n  display: flex;\n  // align-items: flex-end;\n  // text-align: right;\n  // align-self: flex-end;\n  justify-content: flex-end;\n  align-items: center;\n  margin-top: 40rpx;\n \n}\n\n.amount-label {\n  font-size: 26rpx;\n  color: #666666;\n}\n\n.amount-value {\n  font-size: 30rpx;\n  color: #f43f5e;\n  font-weight: 600;\n}\n\n/* 操作按钮 */\n.order-actions {\n  display: flex;\n  gap: 16rpx;\n  justify-content: flex-end;\n}\n\n.action-btn {\n  padding: 16rpx 32rpx;\n  border-radius: 99999rpx;\n  font-size: 26rpx;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  border: 1rpx solid transparent;\n  box-sizing: border-box;\n  height: 72rpx;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.action-btn.primary {\n  background: #7363FF;\n  color: #FFFFFF;\n  border-color: #7363FF;\n}\n\n.action-btn.primary:active {\n  background: #6354e6;\n  transform: scale(0.96);\n}\n\n.action-btn.secondary {\n  background: #FFFFFF;\n  color: #666666;\n  border-color: #e9ecef;\n}\n\n.action-btn.secondary:active {\n  background: #f8f9fa;\n  transform: scale(0.96);\n}\n\n.action-btn.start {\n  background: #F44336;\n  color: #FFFFFF;\n  border-color: #F44336;\n}\n\n.action-btn.start:active {\n  background: #d32f2f;\n  transform: scale(0.96);\n}\n\n/* 微信客服透明覆盖按钮 */\n.kf_btn {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  background: transparent !important;\n  opacity: 0;\n  border: none;\n  z-index: 5;\n}\n.kf_btn::after {\n  border: none;\n}\n\n/* 提示容器 */\n.tip-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20rpx;\n}\n\n/* 自动开始服务提示 */\n.auto-start-tip {\n  background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);\n  border: 1rpx solid #ffc107;\n  border-radius: 12rpx;\n  padding: 12rpx 16rpx;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  max-width: fit-content;\n  gap: 8rpx;\n}\n\n.tip-icon {\n  width: 34rpx;\n  height: 34rpx;\n  flex-shrink: 0;\n}\n.tip-text {\n  font-size: 24rpx;\n  color: #856404;\n  font-weight: 500;\n  text-align: center;\n  line-height: 1.4;\n  white-space: nowrap;\n}\n\n/* 加载更多 */\n.load-more {\n  text-align: center;\n  padding: 32rpx 0;\n}\n\n.loading-text,\n.load-more-text {\n  font-size: 26rpx;\n  color: #999999;\n}\n</style>\n","import MiniProgramPage from '/Users/xiaoqiang/Documents/friemd/firend-loving-app/subPackages/order/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserStore","cityStore","useCityStore","currentStatus","ref","currentTabIndex","isRefreshing","isLoading","isLoadingMore","hasMore","page","pageSize","orderListCache","orderListData","swiperChangeTimer","onUnmounted","uni","onMounted","handleOrderStatusChanged","handleOrderDeleted","statusTabs","onLoad","options","statusIndex","tab","loadOrderList","watch","newStatus","oldStatus","switchStatus","status","error","onSwiperChange","e","index","getTabOrderList","params","response","getOrderList","list","total","updateCurrentStatusCount","currentTab","onRefresh","resolve","onRefreshRestore","loadMore","getStatusClass","getStatusText","getAmountLabel","getOrderActions","order","handleOrderAction","action","handleCancelOrder","handleApplyRefundAfterDeparture","handleApplyRefundAfterArrival","handleApplyRefund","handlePayOrder","handleContactPartner","handleExtendOrder","handleRebookOrder","handleDeleteOrder","handleStartService","handleEvaluateOrder","handleViewComment","res","cancelData","cancelOrder","refundData","applyRefund","applyRefundAfterDeparture","orderParamsData","paramsResponse","orderParams","err","phoneData","getCompanionPhone","phoneNumber","startData","startService","url","deleteData","deleteOrder","o","navigateToDetail","orderId","data","type","updateOrderStatus","removeOrderFromAllStatus","foundOrder","statusKey","orderIndex","updateOrderListCache","formatTime","timeStr","date","year","month","day","hours","minutes","MiniProgramPage"],"mappings":"8NAuIkBA,GAAAA,aAAc,EAChC,MAAMC,EAAYC,GAAAA,aAAc,EAG1BC,EAAgBC,EAAG,IAAC,KAAK,EACzBC,EAAkBD,EAAG,IAAC,CAAC,EACvBE,EAAeF,EAAG,IAAC,EAAK,EACxBG,EAAYH,EAAG,IAAC,EAAK,EACrBI,EAAgBJ,EAAG,IAAC,EAAK,EACzBK,EAAUL,EAAG,IAAC,EAAI,EAClBM,EAAON,EAAG,IAAC,CAAC,EACZO,EAAWP,EAAG,IAAC,EAAE,EAGjBQ,EAAiBR,EAAG,IAAC,EAAE,EACvBS,EAAgBT,EAAAA,IAAI,CACxB,IAAO,CAAE,EACT,gBAAmB,CAAE,EACrB,gBAAmB,CAAE,EACrB,WAAc,CAAE,EAChB,UAAa,CAAE,EACf,UAAa,CAAE,EACf,SAAY,CAAE,EACd,UAAa,CAAE,CACjB,CAAC,EAGD,IAAIU,EAAoB,KAGxBC,EAAAA,YAAY,IAAM,CACZD,GACF,aAAaA,CAAiB,EAIhCE,EAAG,MAAC,KAAK,oBAAoB,EAC7BA,EAAG,MAAC,KAAK,mBAAmB,CAC9B,CAAC,EAGDC,EAAAA,UAAU,IAAM,CAEdD,QAAI,IAAI,qBAAsBE,CAAwB,EAGtDF,QAAI,IAAI,oBAAqBG,CAAkB,CACjD,CAAC,EAGD,MAAMC,EAAahB,EAAAA,IAAI,CACrB,CAAE,MAAO,KAAM,MAAO,MAAO,MAAO,CAAG,EACvC,CAAE,MAAO,MAAO,MAAO,kBAAmB,MAAO,CAAG,EACpD,CAAE,MAAO,MAAO,MAAO,kBAAmB,MAAO,CAAG,EACpD,CAAE,MAAO,MAAO,MAAO,aAAc,MAAO,CAAG,EAC/C,CAAE,MAAO,MAAO,MAAO,YAAa,MAAO,CAAG,CAIhD,CAAC,EAGDiB,EAAM,OAAEC,GAAY,CAElB,GADAN,EAAAA,MAAY,MAAA,MAAA,qCAAA,cAAeM,CAAO,EAC9BA,EAAQ,OAAQ,CAClBN,EAAA,MAAA,MAAA,MAAA,qCAAY,WAAYM,EAAQ,MAAM,EACtCnB,EAAc,MAAQmB,EAAQ,OAE9B,MAAMC,EAAcH,EAAW,MAAM,UAAUI,GAAOA,EAAI,QAAUF,EAAQ,MAAM,EAC9EC,IAAgB,KAClBlB,EAAgB,MAAQkB,GAG1Bb,EAAK,MAAQ,EACbD,EAAQ,MAAQ,GAEhB,OAAOG,EAAe,MAAMU,EAAQ,MAAM,CAC9C,MACIN,EAAAA,MAAY,MAAA,MAAA,qCAAA,sBAAsB,EAClCb,EAAc,MAAQ,MACtBE,EAAgB,MAAQ,EAI1BW,EAAY,MAAA,MAAA,MAAA,qCAAA,oBAAqBb,EAAc,KAAK,EACpDsB,EAAe,CACjB,CAAC,EAGDC,EAAAA,MAAMvB,EAAe,CAACwB,EAAWC,IAAc,CAC7CZ,EAAY,MAAA,MAAA,MAAA,qCAAA,QAASY,EAAW,KAAMD,CAAS,CACjD,CAAC,EAGD,MAAME,EAAe,MAAOC,GAAW,CACrC,GAAI3B,EAAc,QAAU2B,EAAQ,OAEpC3B,EAAc,MAAQ2B,EACtB,MAAMP,EAAcH,EAAW,MAAM,UAAUI,GAAOA,EAAI,QAAUM,CAAM,EAM1E,GALIP,IAAgB,KAClBlB,EAAgB,MAAQkB,GAItBX,EAAe,MAAMkB,CAAM,EAE7BjB,EAAc,MAAMiB,CAAM,EAAIlB,EAAe,MAAMkB,CAAM,EAAE,KAC3DpB,EAAK,MAAQE,EAAe,MAAMkB,CAAM,EAAE,KAC1CrB,EAAQ,MAAQG,EAAe,MAAMkB,CAAM,EAAE,YACxC,CAELpB,EAAK,MAAQ,EACbD,EAAQ,MAAQ,GAChBI,EAAc,MAAMiB,CAAM,EAAI,CAAE,EAEhC,GAAI,CACF,MAAML,EAAe,CACtB,OAAQM,EAAO,CACdf,EAAAA,MAAc,MAAA,QAAA,qCAAA,UAAWe,CAAK,CAC/B,CACF,CACH,EAGMC,EAAiB,MAAOC,GAAM,CAClC,MAAMC,EAAQD,EAAE,OAAO,QACjBN,EAAYP,EAAW,MAAMc,CAAK,EAAE,MACpCN,EAAYzB,EAAc,MAEhCE,EAAgB,MAAQ6B,EACxB/B,EAAc,MAAQwB,EAGlBb,GACF,aAAaA,CAAiB,EAI5Bc,IAAcD,GAAa,CAACf,EAAe,MAAMe,CAAS,IAC5Db,EAAoB,WAAW,SAAY,CACzCJ,EAAK,MAAQ,EACbD,EAAQ,MAAQ,GAChBI,EAAc,MAAMc,CAAS,EAAI,CAAE,EACnC,MAAMF,EAAe,CACtB,EAAE,GAAG,EAEV,EAGMU,EAAmBL,GAChBjB,EAAc,MAAMiB,CAAM,GAAK,CAAE,EAIpCL,EAAgB,SAAY,CAChC,GAAI,CAAAlB,EAAU,MAEd,CAAAA,EAAU,MAAQ,GAElB,GAAI,CACF,MAAM6B,EAAS,CACb,KAAM1B,EAAK,MACX,UAAWC,EAAS,MACpB,aAAcR,EAAc,KAC7B,EAEKkC,EAAW,MAAMC,EAAY,aAACF,CAAM,EAE1C,GADApB,EAAA,MAAA,MAAA,MAAA,qCAAY,gBAAgBqB,EAAS,IAAI,EACrCA,EAAS,KAAK,OAAS,EAAG,CAC5B,KAAM,CAAE,KAAAE,EAAM,MAAAC,CAAO,EAAGH,EAAS,KAAK,KAGlC3B,EAAK,QAAU,GACjBG,EAAc,MAAMV,EAAc,KAAK,EAAIoC,GAAQ,CAAE,EAErDE,EAAyBD,CAAK,GAE9B3B,EAAc,MAAMV,EAAc,KAAK,EAAE,KAAK,GAAIoC,GAAQ,EAAI,EAGhE9B,EAAQ,MAAQI,EAAc,MAAMV,EAAc,KAAK,EAAE,OAASqC,EAGlE5B,EAAe,MAAMT,EAAc,KAAK,EAAI,CAC1C,KAAM,CAAC,GAAGU,EAAc,MAAMV,EAAc,KAAK,CAAC,EAClD,KAAMO,EAAK,MACX,QAASD,EAAQ,KAClB,CACP,KACM,OAAM,IAAI,MAAM4B,EAAS,KAAO,UAAU,CAE7C,OAAQN,EAAO,CACdf,EAAAA,MAAA,MAAA,QAAA,qCAAc,YAAae,CAAK,EAChCf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,OACxB,KAAM,MACZ,CAAK,CACL,QAAY,CACRxB,EAAU,MAAQ,EACnB,EACH,EAGMkC,EAA4BD,GAAU,CAC1C,MAAME,EAAatB,EAAW,MAAM,KAAKI,GAAOA,EAAI,QAAUrB,EAAc,KAAK,EAC7EuC,IACFA,EAAW,MAAQF,GAAS,EAEhC,EAmBMG,EAAY,SAAY,CAC5B,GAAI,CAAArC,EAAa,MAEjB,CAAAA,EAAa,MAAQ,GACrBI,EAAK,MAAQ,EACbD,EAAQ,MAAQ,GAGhB,OAAOG,EAAe,MAAMT,EAAc,KAAK,EAE/C,GAAI,CACF,MAAMsB,EAAe,EAGrB,MAAM,IAAI,QAAQmB,GAAW,WAAWA,EAAS,GAAG,CAAC,CACtD,OAAQb,EAAO,CACdf,EAAAA,yDAAc,QAASe,CAAK,CAChC,QAAY,CACRzB,EAAa,MAAQ,EACtB,EACH,EAEMuC,EAAmB,IAAM,CAC7BvC,EAAa,MAAQ,EACvB,EAGMwC,EAAW,SAAY,CAC3B,GAAI,EAAAtC,EAAc,OAAS,CAACC,EAAQ,OAEpC,CAAAD,EAAc,MAAQ,GACtBE,EAAK,QAEL,GAAI,CACF,MAAMe,EAAe,CACtB,OAAQM,EAAO,CACdf,EAAAA,MAAA,MAAA,QAAA,qCAAc,UAAWe,CAAK,EAC9BrB,EAAK,OACT,QAAY,CACRF,EAAc,MAAQ,EACvB,EACH,EAGMuC,EAAkBjB,IACJ,CAChB,EAAG,iBACH,EAAG,kBACH,EAAG,kBACH,EAAG,kBACH,EAAG,qBACH,EAAG,mBACH,EAAG,mBACH,EAAG,kBACH,EAAG,mBACH,GAAI,mBACJ,GAAI,iBACL,GACgBA,CAAM,GAAK,iBAIxBkB,EAAiBlB,IACH,CAChB,EAAG,MACH,EAAG,OACH,EAAG,QACH,EAAG,QACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,GAAI,OACJ,GAAI,UACL,GACgBA,CAAM,GAAK,OAIxBmB,EAAkBnB,GAClBA,IAAW,EACN,OACEA,IAAW,GAAKA,IAAW,GAAKA,IAAW,GAAKA,IAAW,GAAKA,IAAW,GAAKA,IAAW,GAC7F,OAEA,QAKLoB,EAAkB,CAACpB,EAAQqB,EAAQ,QACrB,CAChB,EAAG,CACD,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,EACrD,CAAE,KAAM,OAAQ,OAAQ,MAAO,KAAM,SAAW,CACjD,EACD,EAAG,CACD,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,EACrD,CAAE,KAAM,OAAQ,OAAQ,UAAW,KAAM,SAAW,CACrD,EACD,EAAG,CACD,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,EACrD,CAAE,KAAM,OAAQ,OAAQ,UAAW,KAAM,SAAW,CACrD,EACD,EAAG,CACD,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,EACrD,CAAE,KAAM,OAAQ,OAAQ,QAAS,KAAM,OAAS,CACjD,EACD,EAAG,CAED,CAAE,KAAM,OAAQ,OAAQ,UAAW,KAAM,WAAa,CACvD,EACD,EAAG,CACD,CAAE,KAAMA,GAASA,EAAM,aAAe,EAAI,OAAS,MAAO,OAAQA,GAASA,EAAM,aAAe,EAAI,cAAgB,WAAY,KAAM,SAAW,EACjJ,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,CACtD,EACD,EAAG,CACD,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,CACtD,EACD,EAAG,CACD,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,CACtD,EACD,EAAG,CAED,CAAE,KAAM,OAAQ,OAAQ,UAAW,KAAM,SAAW,CACrD,EACD,GAAI,CACF,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,CACtD,EACD,GAAI,CACF,CAAE,KAAM,OAAQ,OAAQ,SAAU,KAAM,WAAa,EACrD,CAAE,KAAM,OAAQ,OAAQ,UAAW,KAAM,SAAW,CACrD,CACF,GACgBrB,CAAM,GAAK,CAAE,EAI1BsB,EAAoB,CAACC,EAAQF,IAAU,CAC3C,OAAQE,EAAM,CACZ,IAAK,SACHC,EAAkBH,CAAK,EACvB,MACF,IAAK,SAECA,EAAM,SAAW,EACnBI,EAAgCJ,CAAK,EAC5BA,EAAM,SAAW,EAC1BK,EAA8BL,CAAK,EAEnCM,EAAkBN,CAAK,EAEzB,MACF,IAAK,MACHO,EAAeP,CAAK,EACpB,MACF,IAAK,UACHQ,EAAqBR,CAAK,EAC1B,MACF,IAAK,SACHS,EAAkBT,CAAK,EACvB,MACF,IAAK,SACHU,EAAkBV,CAAK,EACvB,MACF,IAAK,SACH,kBAAkBA,CAAK,EACvB,MACF,IAAK,SACHW,EAAkBX,CAAK,EACvB,MACF,IAAK,QACHY,EAAmBZ,CAAK,EACxB,MACF,IAAK,WACHa,EAAoBb,CAAK,EACzB,MACF,IAAK,cACHc,EAAkBd,CAAK,EACvB,KACH,CACH,EAGMG,EAAqBH,GAAU,CACnCnC,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,QAAS,cACT,YAAa,OACb,WAAY,MACZ,QAAS,MAAOkD,GAAQ,CACtB,GAAIA,EAAI,QACN,GAAI,CAEFlD,EAAAA,MAAI,YAAY,CACd,MAAO,QACnB,CAAW,EAGD,MAAMmD,EAAa,CACjB,SAAUhB,EAAM,GAChB,cAAe,MAChB,EAEKd,EAAW,MAAM+B,EAAW,YAACD,CAAU,EAE7C,GAAI9B,EAAS,KAAK,OAAS,EACzBrB,EAAAA,MAAI,UAAU,CACZ,MAAO,QACP,KAAM,SACpB,CAAa,EAED2B,EAAW,MAEX,OAAM,IAAI,MAAMN,EAAS,KAAK,KAAO,QAAQ,CAEhD,OAAQN,EAAO,CACdf,EAAAA,MAAc,MAAA,QAAA,qCAAA,UAAWe,CAAK,EAC9Bf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,SACxB,KAAM,MAClB,CAAW,CACX,QAAkB,CACRf,EAAAA,MAAI,YAAa,CAClB,CAEJ,CACL,CAAG,CACH,EAGMyC,EAAqBN,GAAU,CACnCnC,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,QAAS,YACT,YAAa,OACb,WAAY,KACZ,QAAS,MAAOkD,GAAQ,CACtB,GAAIA,EAAI,QACN,GAAI,CAEFlD,EAAAA,MAAI,YAAY,CACd,MAAO,QACnB,CAAW,EAGD,MAAMqD,EAAa,CACjB,SAAUlB,EAAM,GAChB,cAAe,QAChB,EAEKd,EAAW,MAAMiC,EAAW,YAACD,CAAU,EAE7C,GAAIhC,EAAS,KAAK,OAAS,EACzBrB,EAAAA,MAAI,UAAU,CACZ,MAAO,UACP,KAAM,SACpB,CAAa,EAED2B,EAAW,MAEX,OAAM,IAAI,MAAMN,EAAS,KAAK,KAAO,QAAQ,CAEhD,OAAQN,EAAO,CACdf,EAAAA,MAAc,MAAA,QAAA,qCAAA,UAAWe,CAAK,EAC9Bf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,SACxB,KAAM,MAClB,CAAW,CACX,QAAkB,CACRf,EAAAA,MAAI,YAAa,CAClB,CAEJ,CACL,CAAG,CACH,EAGMuC,EAAmCJ,GAAU,CACjDnC,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,QAAS,gCACT,YAAa,OACb,WAAY,KACZ,QAAS,MAAOkD,GAAQ,CACtB,GAAIA,EAAI,QACN,GAAI,CAEFlD,EAAAA,MAAI,YAAY,CACd,MAAO,QACnB,CAAW,EAGD,MAAMqD,EAAa,CACjB,SAAUlB,EAAM,GAChB,cAAe,cAChB,EAEKd,EAAW,MAAMkC,EAAyB,0BAACF,CAAU,EAE3D,GAAIhC,EAAS,KAAK,OAAS,EACzBrB,EAAAA,MAAI,UAAU,CACZ,MAAO,UACP,KAAM,SACpB,CAAa,EAED2B,EAAW,MAEX,OAAM,IAAI,MAAMN,EAAS,KAAK,KAAO,QAAQ,CAEhD,OAAQN,EAAO,CACdf,EAAAA,MAAc,MAAA,QAAA,qCAAA,UAAWe,CAAK,EAC9Bf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,SACxB,KAAM,MAClB,CAAW,CACX,QAAkB,CACRf,EAAAA,MAAI,YAAa,CAClB,CAEJ,CACL,CAAG,CACH,EAGMwC,EAAiCL,GAAU,CAC/CnC,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,QAAS,mCACT,YAAa,OACb,WAAY,KACZ,QAAS,MAAOkD,GAAQ,CACtB,GAAIA,EAAI,QACN,GAAI,CAEFlD,EAAAA,MAAI,YAAY,CACd,MAAO,QACnB,CAAW,EAGD,MAAMqD,EAAa,CACjB,SAAUlB,EAAM,GAChB,cAAe,iBAChB,EAEKd,EAAW,MAAMkC,EAAyB,0BAACF,CAAU,EAE3D,GAAIhC,EAAS,KAAK,OAAS,EACzBrB,EAAAA,MAAI,UAAU,CACZ,MAAO,UACP,KAAM,SACpB,CAAa,EAED2B,EAAW,MAEX,OAAM,IAAI,MAAMN,EAAS,KAAK,KAAO,QAAQ,CAEhD,OAAQN,EAAO,CACdf,EAAAA,MAAc,MAAA,QAAA,qCAAA,UAAWe,CAAK,EAC9Bf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,SACxB,KAAM,MAClB,CAAW,CACX,QAAkB,CACRf,EAAAA,MAAI,YAAa,CAClB,CAEJ,CACL,CAAG,CACH,EAGM0C,EAAiB,MAAOP,GAAU,CACtC,GAAI,CAEFnC,EAAAA,MAAI,YAAY,CACd,MAAO,QACb,CAAK,EAGD,MAAMwD,EAAkB,CACtB,SAAUrB,EAAM,GAChB,eAAgB,CACjB,EAEKsB,EAAiB,MAAMC,EAAW,YAACF,CAAe,EAExD,GAAIC,EAAe,KAAK,OAAS,EAE/BzD,EAAAA,MAAI,eAAe,CACjB,SAAU,QACV,GAAGyD,EAAe,KAAK,KAAK,WAC5B,QAAUP,GAAQ,CAChBlD,EAAY,MAAA,MAAA,MAAA,qCAAA,OAAQkD,CAAG,EACvBlD,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,KAAM,SAClB,CAAW,EAED,WAAW,IAAM,CACf2B,EAAW,CACZ,EAAE,IAAI,CACR,EACD,KAAOgC,GAAQ,CACb3D,QAAA,MAAA,QAAA,qCAAc,OAAQ,KAAK,UAAU2D,CAAG,CAAC,EACzC3D,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,KAAM,MAClB,CAAW,CACF,CACT,CAAO,MAED,OAAM,IAAI,MAAMyD,EAAe,KAAK,KAAO,UAAU,CAExD,OAAQ1C,EAAO,CACdf,EAAAA,yDAAc,QAASe,CAAK,EAC5Bf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,OACxB,KAAM,MACZ,CAAK,CACL,QAAY,CACRf,EAAAA,MAAI,YAAa,CAClB,CACH,EAGM2C,EAAuB,MAAOR,GAAU,CAE5C,GADAnC,EAAAA,MAAY,MAAA,MAAA,qCAAAmC,CAAK,EACbA,EAAM,aACR,GAAI,CAEFnC,EAAAA,MAAI,YAAY,CACd,MAAO,UACf,CAAO,EAGD,MAAM4D,EAAY,CAChB,aAAczB,EAAM,YACrB,EAEKd,EAAW,MAAMwC,EAAiB,kBAACD,CAAS,EAElD,GAAIvC,EAAS,KAAK,OAAS,EAAG,CAC5B,MAAMyC,EAAczC,EAAS,KAAK,KAAK,MACvCrB,EAAAA,MAAI,YAAa,EAEjBA,EAAAA,MAAI,UAAU,CACZ,MAAO,QACP,QAAS;AAAA,EAAgB8D,CAAW,GACpC,YAAa,KACb,WAAY,KACZ,QAAUZ,GAAQ,CACZA,EAAI,SACNlD,EAAAA,MAAI,cAAc,CAChB,YAAa8D,CAC7B,CAAe,CAEJ,CACX,CAAS,CACT,KACQ,OAAM,IAAI,MAAMzC,EAAS,KAAK,KAAO,WAAW,CAEnD,OAAQN,EAAO,CACdf,EAAAA,yDAAc,aAAce,CAAK,EACjCf,EAAAA,MAAI,YAAa,EACjBA,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,YACxB,KAAM,MACd,CAAO,CACF,MAEDf,EAAAA,MAAI,UAAU,CACZ,MAAO,WACP,KAAM,MACZ,CAAK,CAEL,EAGM+C,EAAsBZ,GAAU,CACpCnC,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,QAAS,kBACT,YAAa,OACb,WAAY,KACZ,QAAS,MAAOkD,GAAQ,CACtB,GAAIA,EAAI,QACN,GAAI,CAEFlD,EAAAA,MAAI,YAAY,CACd,MAAO,QACnB,CAAW,EAGD,MAAM+D,EAAY,CAChB,SAAU5B,EAAM,EACjB,EAEKd,EAAW,MAAM2C,EAAY,aAACD,CAAS,EAE7C,GAAI1C,EAAS,KAAK,OAAS,EACzBrB,EAAAA,MAAI,UAAU,CACZ,MAAO,QACP,KAAM,SACpB,CAAa,EAED2B,EAAW,MAEX,OAAM,IAAI,MAAMN,EAAS,KAAK,KAAO,QAAQ,CAEhD,OAAQN,EAAO,CACdf,EAAAA,MAAc,MAAA,QAAA,qCAAA,UAAWe,CAAK,EAC9Bf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,SACxB,KAAM,MAClB,CAAW,CACX,QAAkB,CACRf,EAAAA,MAAI,YAAa,CAClB,CAEJ,CACL,CAAG,CACH,EAGM4C,EAAqBT,GAAU,CACnCnC,EAAAA,MAAI,WAAW,CACb,IAAK,qCAAqCmC,EAAM,EAAE,EACtD,CAAG,CACH,EAGMU,EAAqBV,GAAU,CACnC,GAAIA,EAAM,aAAc,CACtB,IAAI8B,EAAM,6BAA+B9B,EAAM,aAAe,cAAgBlD,EAAU,gBAExFe,EAAAA,MAAI,WAAW,CACb,IAAKiE,CACX,CAAK,CACL,MACIjE,EAAAA,MAAI,UAAU,CACZ,MAAO,UACP,KAAM,MACZ,CAAK,CAEL,EAGMgD,EAAuBb,GAAU,CAErCnC,EAAAA,MAAI,WAAW,CACb,IAAK,uCAAuCmC,EAAM,EAAE,gBAAgB,mBAAmBA,EAAM,YAAY,CAAC,iBAAiB,mBAAmBA,EAAM,iBAAiB,CAAC,EAC1K,CAAG,CACH,EAGMc,EAAqBd,GAAU,CAEnCnC,EAAAA,MAAI,WAAW,CACb,IAAK,8CAA8CmC,EAAM,EAAE,EAC/D,CAAG,CACH,EAGMW,EAAqBX,GAAU,CACnCnC,EAAAA,MAAI,UAAU,CACZ,MAAO,OACP,QAAS,sBACT,YAAa,KACb,WAAY,KACZ,QAAS,MAAOkD,GAAQ,CACtB,GAAIA,EAAI,QACN,GAAI,CACFlD,EAAAA,MAAI,YAAY,CACd,MAAO,QACnB,CAAW,EAGD,MAAMkE,EAAa,CACjB,SAAU/B,EAAM,EACjB,EAEKd,EAAW,MAAM8C,EAAW,YAACD,CAAU,EAE7C,GAAI7C,EAAS,KAAK,OAAS,EAEzBxB,EAAc,MAAMV,EAAc,KAAK,EAAIU,EAAc,MAAMV,EAAc,KAAK,EAAE,OAAOiF,GAAKA,EAAE,KAAOjC,EAAM,EAAE,EACjHnC,EAAAA,MAAI,UAAU,CACZ,MAAO,QACP,KAAM,SACpB,CAAa,MAED,OAAM,IAAI,MAAMqB,EAAS,KAAK,KAAO,QAAQ,CAEhD,OAAQN,EAAO,CACdf,EAAAA,MAAc,MAAA,QAAA,qCAAA,UAAWe,CAAK,EAC9Bf,EAAAA,MAAI,UAAU,CACZ,MAAOe,EAAM,SAAW,SACxB,KAAM,MAClB,CAAW,CACX,QAAkB,CACRf,EAAAA,MAAI,YAAa,CAClB,CAEJ,CACL,CAAG,CACH,EAGMqE,EAAoBC,GAAY,CACpCtE,EAAAA,MAAI,WAAW,CACb,IAAK,qCAAqCsE,CAAO,EACrD,CAAG,CACH,EAGMpE,EAA4BqE,GAAS,CACzCvE,EAAAA,uDAAY,cAAeuE,CAAI,EAG/B,KAAM,CAAE,KAAAC,EAAM,QAAAF,EAAS,OAAAxD,CAAQ,EAAGyD,EAE9BC,IAAS,UAGXC,GAAkBH,EAASxD,CAAM,CAErC,EAGMX,EAAsBoE,GAAS,CACnCvE,EAAAA,MAAY,MAAA,MAAA,qCAAA,YAAauE,CAAI,EAE7B,KAAM,CAAE,QAAAD,EAAS,OAAAxD,CAAM,EAAKyD,EAG5BG,GAAyBJ,CAAO,CAClC,EAGMG,GAAoB,CAACH,EAAS3D,IAAc,CAEhD,IAAIgE,EAAa,KAEjB,OAAO,KAAK9E,EAAc,KAAK,EAAE,QAAQ+E,GAAa,CACpD,MAAMC,EAAahF,EAAc,MAAM+E,CAAS,EAAE,UAAUzC,GAASA,EAAM,KAAOmC,CAAO,EACrFO,IAAe,KACjBF,EAAa9E,EAAc,MAAM+E,CAAS,EAAEC,CAAU,EACtDhF,EAAc,MAAM+E,CAAS,EAAE,OAAOC,EAAY,CAAC,EAEzD,CAAG,EAGGF,IACFA,EAAW,OAAShE,EAGhBA,IAAc,EAChBd,EAAc,MAAM,UAAU,QAAQ8E,CAAU,EACvChE,IAAc,EACvBd,EAAc,MAAM,SAAS,QAAQ8E,CAAU,EACtChE,IAAc,GACvBd,EAAc,MAAM,UAAU,QAAQ8E,CAAU,EAIlDG,EAAsB,EAE1B,EAGMJ,GAA4BJ,GAAY,CAC5C,OAAO,KAAKzE,EAAc,KAAK,EAAE,QAAQ+E,GAAa,CACpD,MAAMC,EAAahF,EAAc,MAAM+E,CAAS,EAAE,UAAUzC,GAASA,EAAM,KAAOmC,CAAO,EACrFO,IAAe,IACjBhF,EAAc,MAAM+E,CAAS,EAAE,OAAOC,EAAY,CAAC,CAEzD,CAAG,EAGDC,EAAsB,CACxB,EAGMA,EAAuB,IAAM,CACjC,OAAO,KAAKjF,EAAc,KAAK,EAAE,QAAQ+E,GAAa,CAChDhF,EAAe,MAAMgF,CAAS,IAChChF,EAAe,MAAMgF,CAAS,EAAE,KAAO,CAAC,GAAG/E,EAAc,MAAM+E,CAAS,CAAC,EAE/E,CAAG,CACH,EAGMG,GAAcC,GAAY,CAC9B,MAAMC,EAAO,IAAI,KAAKD,CAAO,EAGvBE,EAAOD,EAAK,YAAa,EACzBE,EAAQ,OAAOF,EAAK,SAAQ,EAAK,CAAC,EAAE,SAAS,EAAG,GAAG,EACnDG,EAAM,OAAOH,EAAK,QAAS,CAAA,EAAE,SAAS,EAAG,GAAG,EAC5CI,EAAQ,OAAOJ,EAAK,SAAU,CAAA,EAAE,SAAS,EAAG,GAAG,EAC/CK,EAAU,OAAOL,EAAK,WAAY,CAAA,EAAE,SAAS,EAAG,GAAG,EAEzD,MAAO,GAAGC,CAAI,IAAIC,CAAK,IAAIC,CAAG,IAAIC,CAAK,IAAIC,CAAO,EACpD,47BC1iCA,GAAG,WAAWC,EAAe"}