{"version":3,"file":"uni-data-picker.js","sources":["uni_modules/uni-data-picker/components/uni-data-pickerview/uni-data-picker.js"],"sourcesContent":["export default {\r\n  props: {\r\n    localdata: {\r\n      type: [Array, Object],\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    spaceInfo: {\r\n      type: Object,\r\n      default () {\r\n        return {}\r\n      }\r\n    },\r\n    collection: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    action: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    field: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    orderby: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    where: {\r\n      type: [String, Object],\r\n      default: ''\r\n    },\r\n    pageData: {\r\n      type: String,\r\n      default: 'add'\r\n    },\r\n    pageCurrent: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    pageSize: {\r\n      type: Number,\r\n      default: 500\r\n    },\r\n    getcount: {\r\n      type: [Boolean, String],\r\n      default: false\r\n    },\r\n    getone: {\r\n      type: [Boolean, String],\r\n      default: false\r\n    },\r\n    gettree: {\r\n      type: [Boolean, String],\r\n      default: false\r\n    },\r\n    manual: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    value: {\r\n      type: [Array, String, Number],\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    modelValue: {\r\n      type: [Array, String, Number],\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    preload: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    stepSearh: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    selfField: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    parentField: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    map: {\r\n      type: Object,\r\n      default () {\r\n        return {\r\n          text: \"text\",\r\n          value: \"value\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      errorMessage: '',\r\n      loadMore: {\r\n        contentdown: '',\r\n        contentrefresh: '',\r\n        contentnomore: ''\r\n      },\r\n      dataList: [],\r\n      selected: [],\r\n      selectedIndex: 0,\r\n      page: {\r\n        current: this.pageCurrent,\r\n        size: this.pageSize,\r\n        count: 0\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isLocalData() {\r\n      return !this.collection.length;\r\n    },\r\n    isCloudData() {\r\n      return this.collection.length > 0;\r\n    },\r\n    isCloudDataList() {\r\n      return (this.isCloudData && (!this.parentField && !this.selfField));\r\n    },\r\n    isCloudDataTree() {\r\n      return (this.isCloudData && this.parentField && this.selfField);\r\n    },\r\n    dataValue() {\r\n      let isModelValue = Array.isArray(this.modelValue) ? (this.modelValue.length > 0) : (this.modelValue !== null ||\r\n        this.modelValue !== undefined);\r\n      return isModelValue ? this.modelValue : this.value;\r\n    },\r\n    hasValue() {\r\n      if (typeof this.dataValue === 'number') {\r\n        return true\r\n      }\r\n      return (this.dataValue != null) && (this.dataValue.length > 0)\r\n    }\r\n  },\r\n  created() {\r\n    this.$watch(() => {\r\n      var al = [];\r\n      ['pageCurrent',\r\n        'pageSize',\r\n        'spaceInfo',\r\n        'value',\r\n        'modelValue',\r\n        'localdata',\r\n        'collection',\r\n        'action',\r\n        'field',\r\n        'orderby',\r\n        'where',\r\n        'getont',\r\n        'getcount',\r\n        'gettree'\r\n      ].forEach(key => {\r\n        al.push(this[key])\r\n      });\r\n      return al\r\n    }, (newValue, oldValue) => {\r\n      let needReset = false\r\n      for (let i = 2; i < newValue.length; i++) {\r\n        if (newValue[i] != oldValue[i]) {\r\n          needReset = true\r\n          break\r\n        }\r\n      }\r\n      if (newValue[0] != oldValue[0]) {\r\n        this.page.current = this.pageCurrent\r\n      }\r\n      this.page.size = this.pageSize\r\n\r\n      this.onPropsChange()\r\n    })\r\n    this._treeData = []\r\n  },\r\n  methods: {\r\n    onPropsChange() {\r\n      this._treeData = [];\r\n    },\r\n\r\n    // 填充 pickview 数据\r\n    async loadData() {\r\n      if (this.isLocalData) {\r\n        this.loadLocalData();\r\n      } else if (this.isCloudDataList) {\r\n        this.loadCloudDataList();\r\n      } else if (this.isCloudDataTree) {\r\n        this.loadCloudDataTree();\r\n      }\r\n    },\r\n\r\n    // 加载本地数据\r\n    async loadLocalData() {\r\n      this._treeData = [];\r\n      this._extractTree(this.localdata, this._treeData);\r\n\r\n      let inputValue = this.dataValue;\r\n      if (inputValue === undefined) {\r\n        return;\r\n      }\r\n\r\n      if (Array.isArray(inputValue)) {\r\n        inputValue = inputValue[inputValue.length - 1];\r\n        if (typeof inputValue === 'object' && inputValue[this.map.value]) {\r\n          inputValue = inputValue[this.map.value];\r\n        }\r\n      }\r\n\r\n      this.selected = this._findNodePath(inputValue, this.localdata);\r\n    },\r\n\r\n    // 加载 Cloud 数据 (单列)\r\n    async loadCloudDataList() {\r\n      if (this.loading) {\r\n        return;\r\n      }\r\n      this.loading = true;\r\n\r\n      try {\r\n        let response = await this.getCommand();\r\n        let responseData = response.result.data;\r\n\r\n        this._treeData = responseData;\r\n\r\n        this._updateBindData();\r\n        this._updateSelected();\r\n\r\n        this.onDataChange();\r\n      } catch (e) {\r\n        this.errorMessage = e;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 加载 Cloud 数据 (树形)\r\n    async loadCloudDataTree() {\r\n      if (this.loading) {\r\n        return;\r\n      }\r\n      this.loading = true;\r\n\r\n      try {\r\n        let commandOptions = {\r\n          field: this._cloudDataPostField(),\r\n          where: this._cloudDataTreeWhere()\r\n        };\r\n        if (this.gettree) {\r\n          commandOptions.startwith = `${this.selfField}=='${this.dataValue}'`;\r\n        }\r\n\r\n        let response = await this.getCommand(commandOptions);\r\n        let responseData = response.result.data;\r\n\r\n        this._treeData = responseData;\r\n        this._updateBindData();\r\n        this._updateSelected();\r\n\r\n        this.onDataChange();\r\n      } catch (e) {\r\n        this.errorMessage = e;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 加载 Cloud 数据 (节点)\r\n    async loadCloudDataNode(callback) {\r\n      if (this.loading) {\r\n        return;\r\n      }\r\n      this.loading = true;\r\n\r\n      try {\r\n        let commandOptions = {\r\n          field: this._cloudDataPostField(),\r\n          where: this._cloudDataNodeWhere()\r\n        };\r\n\r\n        let response = await this.getCommand(commandOptions);\r\n        let responseData = response.result.data;\r\n\r\n        callback(responseData);\r\n      } catch (e) {\r\n        this.errorMessage = e;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 回显 Cloud 数据\r\n    getCloudDataValue() {\r\n      if (this.isCloudDataList) {\r\n        return this.getCloudDataListValue();\r\n      }\r\n\r\n      if (this.isCloudDataTree) {\r\n        return this.getCloudDataTreeValue();\r\n      }\r\n    },\r\n\r\n    // 回显 Cloud 数据 (单列)\r\n    getCloudDataListValue() {\r\n      // 根据 field's as value标识匹配 where 条件\r\n      let where = [];\r\n      let whereField = this._getForeignKeyByField();\r\n      if (whereField) {\r\n        where.push(`${whereField} == '${this.dataValue}'`)\r\n      }\r\n\r\n      where = where.join(' || ');\r\n\r\n      if (this.where) {\r\n        where = `(${this.where}) && (${where})`\r\n      }\r\n\r\n      return this.getCommand({\r\n        field: this._cloudDataPostField(),\r\n        where\r\n      }).then((res) => {\r\n        this.selected = res.result.data;\r\n        return res.result.data;\r\n      });\r\n    },\r\n\r\n    // 回显 Cloud 数据 (树形)\r\n    getCloudDataTreeValue() {\r\n      return this.getCommand({\r\n        field: this._cloudDataPostField(),\r\n        getTreePath: {\r\n          startWith: `${this.selfField}=='${this.dataValue}'`\r\n        }\r\n      }).then((res) => {\r\n        let treePath = [];\r\n        this._extractTreePath(res.result.data, treePath);\r\n        this.selected = treePath;\r\n        return treePath;\r\n      });\r\n    },\r\n\r\n    getCommand(options = {}) {\r\n      /* eslint-disable no-undef */\r\n      let db = uniCloud.database(this.spaceInfo)\r\n\r\n      const action = options.action || this.action\r\n      if (action) {\r\n        db = db.action(action)\r\n      }\r\n\r\n      const collection = options.collection || this.collection\r\n      db = db.collection(collection)\r\n\r\n      const where = options.where || this.where\r\n      if (!(!where || !Object.keys(where).length)) {\r\n        db = db.where(where)\r\n      }\r\n\r\n      const field = options.field || this.field\r\n      if (field) {\r\n        db = db.field(field)\r\n      }\r\n\r\n      const orderby = options.orderby || this.orderby\r\n      if (orderby) {\r\n        db = db.orderBy(orderby)\r\n      }\r\n\r\n      const current = options.pageCurrent !== undefined ? options.pageCurrent : this.page.current\r\n      const size = options.pageSize !== undefined ? options.pageSize : this.page.size\r\n      const getCount = options.getcount !== undefined ? options.getcount : this.getcount\r\n      const getTree = options.gettree !== undefined ? options.gettree : this.gettree\r\n\r\n      const getOptions = {\r\n        getCount,\r\n        getTree\r\n      }\r\n      if (options.getTreePath) {\r\n        getOptions.getTreePath = options.getTreePath\r\n      }\r\n\r\n      db = db.skip(size * (current - 1)).limit(size).get(getOptions)\r\n\r\n      return db\r\n    },\r\n\r\n    _cloudDataPostField() {\r\n      let fields = [this.field];\r\n      if (this.parentField) {\r\n        fields.push(`${this.parentField} as parent_value`);\r\n      }\r\n      return fields.join(',');\r\n    },\r\n\r\n    _cloudDataTreeWhere() {\r\n      let result = []\r\n      let selected = this.selected\r\n      let parentField = this.parentField\r\n      if (parentField) {\r\n        result.push(`${parentField} == null || ${parentField} == \"\"`)\r\n      }\r\n      if (selected.length) {\r\n        for (var i = 0; i < selected.length - 1; i++) {\r\n          result.push(`${parentField} == '${selected[i].value}'`)\r\n        }\r\n      }\r\n\r\n      let where = []\r\n      if (this.where) {\r\n        where.push(`(${this.where})`)\r\n      }\r\n\r\n      if (result.length) {\r\n        where.push(`(${result.join(' || ')})`)\r\n      }\r\n\r\n      return where.join(' && ')\r\n    },\r\n\r\n    _cloudDataNodeWhere() {\r\n      let where = []\r\n      let selected = this.selected;\r\n      if (selected.length) {\r\n        where.push(`${this.parentField} == '${selected[selected.length - 1].value}'`);\r\n      }\r\n\r\n      where = where.join(' || ');\r\n\r\n      if (this.where) {\r\n        return `(${this.where}) && (${where})`\r\n      }\r\n\r\n      return where\r\n    },\r\n\r\n    _getWhereByForeignKey() {\r\n      let result = []\r\n      let whereField = this._getForeignKeyByField();\r\n      if (whereField) {\r\n        result.push(`${whereField} == '${this.dataValue}'`)\r\n      }\r\n\r\n      if (this.where) {\r\n        return `(${this.where}) && (${result.join(' || ')})`\r\n      }\r\n\r\n      return result.join(' || ')\r\n    },\r\n\r\n    _getForeignKeyByField() {\r\n      let fields = this.field.split(',');\r\n      let whereField = null;\r\n      for (let i = 0; i < fields.length; i++) {\r\n        const items = fields[i].split('as');\r\n        if (items.length < 2) {\r\n          continue;\r\n        }\r\n        if (items[1].trim() === 'value') {\r\n          whereField = items[0].trim();\r\n          break;\r\n        }\r\n      }\r\n      return whereField;\r\n    },\r\n\r\n    _updateBindData(node) {\r\n      const {\r\n        dataList,\r\n        hasNodes\r\n      } = this._filterData(this._treeData, this.selected)\r\n\r\n      let isleaf = this._stepSearh === false && !hasNodes\r\n\r\n      if (node) {\r\n        node.isleaf = isleaf\r\n      }\r\n\r\n      this.dataList = dataList\r\n      this.selectedIndex = dataList.length - 1\r\n\r\n      if (!isleaf && this.selected.length < dataList.length) {\r\n        this.selected.push({\r\n          value: null,\r\n          text: \"请选择\"\r\n        })\r\n      }\r\n\r\n      return {\r\n        isleaf,\r\n        hasNodes\r\n      }\r\n    },\r\n\r\n    _updateSelected() {\r\n      let dl = this.dataList\r\n      let sl = this.selected\r\n      let textField = this.map.text\r\n      let valueField = this.map.value\r\n      for (let i = 0; i < sl.length; i++) {\r\n        let value = sl[i].value\r\n        let dl2 = dl[i]\r\n        for (let j = 0; j < dl2.length; j++) {\r\n          let item2 = dl2[j]\r\n          if (item2[valueField] === value) {\r\n            sl[i].text = item2[textField]\r\n            break\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    _filterData(data, paths) {\r\n      let dataList = []\r\n      let hasNodes = true\r\n\r\n      dataList.push(data.filter((item) => {\r\n        return (item.parent_value === null || item.parent_value === undefined || item.parent_value === '')\r\n      }))\r\n      for (let i = 0; i < paths.length; i++) {\r\n        let value = paths[i].value\r\n        let nodes = data.filter((item) => {\r\n          return item.parent_value === value\r\n        })\r\n\r\n        if (nodes.length) {\r\n          dataList.push(nodes)\r\n        } else {\r\n          hasNodes = false\r\n        }\r\n      }\r\n\r\n      return {\r\n        dataList,\r\n        hasNodes\r\n      }\r\n    },\r\n\r\n    _extractTree(nodes, result, parent_value) {\r\n      let list = result || []\r\n      let valueField = this.map.value\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        let node = nodes[i]\r\n\r\n        let child = {}\r\n        for (let key in node) {\r\n          if (key !== 'children') {\r\n            child[key] = node[key]\r\n          }\r\n        }\r\n        if (parent_value !== null && parent_value !== undefined && parent_value !== '') {\r\n          child.parent_value = parent_value\r\n        }\r\n        result.push(child)\r\n\r\n        let children = node.children\r\n        if (children) {\r\n          this._extractTree(children, result, node[valueField])\r\n        }\r\n      }\r\n    },\r\n\r\n    _extractTreePath(nodes, result) {\r\n      let list = result || []\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        let node = nodes[i]\r\n\r\n        let child = {}\r\n        for (let key in node) {\r\n          if (key !== 'children') {\r\n            child[key] = node[key]\r\n          }\r\n        }\r\n        result.push(child)\r\n\r\n        let children = node.children\r\n        if (children) {\r\n          this._extractTreePath(children, result)\r\n        }\r\n      }\r\n    },\r\n\r\n    _findNodePath(key, nodes, path = []) {\r\n      let textField = this.map.text\r\n      let valueField = this.map.value\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        let node = nodes[i]\r\n        let children = node.children\r\n        let text = node[textField]\r\n        let value = node[valueField]\r\n\r\n        path.push({\r\n          value,\r\n          text\r\n        })\r\n\r\n        if (value === key) {\r\n          return path\r\n        }\r\n\r\n        if (children) {\r\n          const p = this._findNodePath(key, children, path)\r\n          if (p.length) {\r\n            return p\r\n          }\r\n        }\r\n\r\n        path.pop()\r\n      }\r\n      return []\r\n    }\r\n  }\r\n}\r\n"],"names":["uniCloud"],"mappings":"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"}