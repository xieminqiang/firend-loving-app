{"version":3,"file":"test.js","sources":["uni_modules/uview-plus/libs/function/test.js"],"sourcesContent":["/**\r\n * 验证电子邮箱格式\r\n */\r\nexport function email(value) {\r\n    return /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证手机格式\r\n */\r\nexport function mobile(value) {\r\n    return /^1[23456789]\\d{9}$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证URL格式\r\n */\r\nexport function url(value) {\r\n    return /^((https|http|ftp|rtsp|mms):\\/\\/)(([0-9a-zA-Z_!~*'().&=+$%-]+: )?[0-9a-zA-Z_!~*'().&=+$%-]+@)?(([0-9]{1,3}.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*'()-]+.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z].[a-zA-Z]{2,6})(:[0-9]{1,4})?((\\/?)|(\\/[0-9a-zA-Z_!~*'().;?:@&=+$,%#-]+)+\\/?)$/\r\n        .test(value)\r\n}\r\n\r\n/**\r\n * 验证日期格式\r\n * @param {number | string} value yyyy-mm-dd hh:mm:ss 或 时间戳\r\n */\r\nexport function date(value) {\r\n    if (!value) return false;\r\n    // number类型，判断是否是时间戳\r\n    if (typeof value === \"number\") {\r\n        // len === 10 秒级时间戳 len === 13 毫秒级时间戳\r\n        if (value.toString().length !== 10 && value.toString().length !== 13) {\r\n            return false;\r\n        }\r\n        return !isNaN(new Date(value).getTime());\r\n    }\r\n    if (typeof value === \"string\") {\r\n        // 是否为string类型时间戳\r\n        const numV = Number(value);\r\n        if (!isNaN(numV)) {\r\n            if (\r\n                numV.toString().length === 10 ||\r\n                numV.toString().length === 13\r\n            ) {\r\n                return !isNaN(new Date(numV).getTime());\r\n            }\r\n        }\r\n        // 非时间戳，且长度在yyyy-mm-dd 至 yyyy-mm-dd hh:mm:ss 之间\r\n        if (value.length < 10 || value.length > 19) {\r\n            return false;\r\n        }\r\n        const dateRegex =\r\n            /^\\d{4}[-\\/]\\d{2}[-\\/]\\d{2}( \\d{1,2}:\\d{2}(:\\d{2})?)?$/;\r\n        if (!dateRegex.test(value)) {\r\n            return false;\r\n        }\r\n        // 检查是否为有效日期\r\n        const dateValue = new Date(value);\r\n        return !isNaN(dateValue.getTime());\r\n    }\r\n    // 非number和string类型，不做校验\r\n    return false;\r\n}\r\n\r\n/**\r\n * 验证ISO类型的日期格式\r\n */\r\nexport function dateISO(value) {\r\n    return /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证十进制数字\r\n */\r\nexport function number(value) {\r\n    return /^[\\+-]?(\\d+\\.?\\d*|\\.\\d+|\\d\\.\\d+e\\+\\d+)$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证字符串\r\n */\r\nexport function string(value) {\r\n    return typeof value === 'string'\r\n}\r\n\r\n/**\r\n * 验证整数\r\n */\r\nexport function digits(value) {\r\n    return /^\\d+$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证身份证号码\r\n */\r\nexport function idCard(value) {\r\n    return /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/.test(\r\n        value\r\n    )\r\n}\r\n\r\n/**\r\n * 是否车牌号\r\n */\r\nexport function carNo(value) {\r\n    // 新能源车牌\r\n    const xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]{4}$))/\r\n    // 旧车牌\r\n    const creg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/\r\n    if (value.length === 7) {\r\n        return creg.test(value)\r\n    } if (value.length === 8) {\r\n        return xreg.test(value)\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * 金额,只允许2位小数\r\n */\r\nexport function amount(value) {\r\n    // 金额，只允许保留两位小数\r\n    return /^[1-9]\\d*(,\\d{3})*(\\.\\d{1,2})?$|^0\\.\\d{1,2}$/.test(value)\r\n}\r\n\r\n/**\r\n * 中文\r\n */\r\nexport function chinese(value) {\r\n    const reg = /^[\\u4e00-\\u9fa5]+$/gi\r\n    return reg.test(value)\r\n}\r\n\r\n/**\r\n * 只能输入字母\r\n */\r\nexport function letter(value) {\r\n    return /^[a-zA-Z]*$/.test(value)\r\n}\r\n\r\n/**\r\n * 只能是字母或者数字\r\n */\r\nexport function enOrNum(value) {\r\n    // 英文或者数字\r\n    const reg = /^[0-9a-zA-Z]*$/g\r\n    return reg.test(value)\r\n}\r\n\r\n/**\r\n * 验证是否包含某个值\r\n */\r\nexport function contains(value, param) {\r\n    return value.indexOf(param) >= 0\r\n}\r\n\r\n/**\r\n * 验证一个值范围[min, max]\r\n */\r\nexport function range(value, param) {\r\n    return value >= param[0] && value <= param[1]\r\n}\r\n\r\n/**\r\n * 验证一个长度范围[min, max]\r\n */\r\nexport function rangeLength(value, param) {\r\n    return value.length >= param[0] && value.length <= param[1]\r\n}\r\n\r\n/**\r\n * 是否固定电话\r\n */\r\nexport function landline(value) {\r\n    const reg = /^\\d{3,4}-\\d{7,8}(-\\d{3,4})?$/\r\n    return reg.test(value)\r\n}\r\n\r\n/**\r\n * 判断是否为空\r\n */\r\nexport function empty(value) {\r\n    switch (typeof value) {\r\n    case 'undefined':\r\n        return true\r\n    case 'string':\r\n        if (value.replace(/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g, '').length == 0) return true\r\n        break\r\n    case 'boolean':\r\n        if (!value) return true\r\n        break\r\n    case 'number':\r\n        if (value === 0 || isNaN(value)) return true\r\n        break\r\n    case 'object':\r\n        if (value === null || value.length === 0) return true\r\n        for (const i in value) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * 是否json字符串\r\n */\r\nexport function jsonString(value) {\r\n    if (typeof value === 'string') {\r\n        try {\r\n            const obj = JSON.parse(value)\r\n            if (typeof obj === 'object' && obj) {\r\n                return true\r\n            }\r\n            return false\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * 是否数组\r\n */\r\nexport function array(value) {\r\n    if (typeof Array.isArray === 'function') {\r\n        return Array.isArray(value)\r\n    }\r\n    return Object.prototype.toString.call(value) === '[object Array]'\r\n}\r\n\r\n/**\r\n * 是否对象\r\n */\r\nexport function object(value) {\r\n    return Object.prototype.toString.call(value) === '[object Object]'\r\n}\r\n\r\n/**\r\n * 是否是Promise对象\r\n */\r\nexport function objectPromise(value) {\r\n    return Object.prototype.toString.call(value) === '[object Promise]';\r\n}\r\n\r\n/**\r\n * 是否短信验证码\r\n */\r\nexport function code(value, len = 6) {\r\n    return new RegExp(`^\\\\d{${len}}$`).test(value)\r\n}\r\n\r\n/**\r\n * 是否函数方法\r\n * @param {Object} value\r\n */\r\nexport function func(value) {\r\n    return typeof value === 'function'\r\n}\r\n\r\n/**\r\n * 是否promise对象\r\n * @param {Object} value\r\n */\r\nexport function promise(value) {\r\n    return objectPromise(value) && func(value.then) && func(value.catch)\r\n}\r\n\r\n/** 是否图片格式\r\n * @param {Object} value\r\n */\r\nexport function image(value) {\r\n    const newValue = value.split('?')[0]\r\n    const IMAGE_REGEXP = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i\r\n    return IMAGE_REGEXP.test(newValue)\r\n}\r\n\r\n/**\r\n * 是否视频格式\r\n * @param {Object} value\r\n */\r\nexport function video(value) {\r\n    const VIDEO_REGEXP = /\\.(mp4|mpg|mpeg|dat|asf|avi|rm|rmvb|mov|wmv|flv|mkv|m3u8)/i\r\n    return VIDEO_REGEXP.test(value)\r\n}\r\n\r\n/**\r\n * 是否为正则对象\r\n * @param {Object}\r\n * @return {Boolean}\r\n */\r\nexport function regExp(o) {\r\n    return o && Object.prototype.toString.call(o) === '[object RegExp]'\r\n}\r\n\r\nexport default {\r\n    email,\r\n    mobile,\r\n    url,\r\n    date,\r\n    dateISO,\r\n    number,\r\n    digits,\r\n    idCard,\r\n    carNo,\r\n    amount,\r\n    chinese,\r\n    letter,\r\n    enOrNum,\r\n    contains,\r\n    range,\r\n    rangeLength,\r\n    empty,\r\n    isEmpty: empty,\r\n    jsonString,\r\n    landline,\r\n    object,\r\n    array,\r\n    code,\r\n    func,\r\n    promise,\r\n    video,\r\n    image,\r\n    regExp,\r\n    string\r\n}\r\n"],"names":["email","value","mobile","url","date","numV","dateValue","dateISO","number","string","digits","idCard","carNo","xreg","creg","amount","chinese","letter","enOrNum","contains","param","range","rangeLength","landline","empty","i","jsonString","obj","array","object","objectPromise","code","len","func","promise","image","newValue","video","regExp","o","test"],"mappings":"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"}