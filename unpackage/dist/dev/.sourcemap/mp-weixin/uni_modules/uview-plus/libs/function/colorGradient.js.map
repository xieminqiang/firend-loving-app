{"version":3,"file":"colorGradient.js","sources":["uni_modules/uview-plus/libs/function/colorGradient.js"],"sourcesContent":["/**\r\n * 求两个颜色之间的渐变值\r\n * @param {string} startColor 开始的颜色\r\n * @param {string} endColor 结束的颜色\r\n * @param {number} step 颜色等分的份额\r\n * */\r\nexport function colorGradient(startColor = 'rgb(0, 0, 0)', endColor = 'rgb(255, 255, 255)', step = 10) {\r\n    const startRGB = hexToRgb(startColor, false) // 转换为rgb数组模式\r\n    const startR = startRGB[0]\r\n    const startG = startRGB[1]\r\n    const startB = startRGB[2]\r\n\r\n    const endRGB = hexToRgb(endColor, false)\r\n    const endR = endRGB[0]\r\n    const endG = endRGB[1]\r\n    const endB = endRGB[2]\r\n\r\n    const sR = (endR - startR) / step // 总差值\r\n    const sG = (endG - startG) / step\r\n    const sB = (endB - startB) / step\r\n    const colorArr = []\r\n    for (let i = 0; i < step; i++) {\r\n        // 计算每一步的hex值\r\n        let hex = rgbToHex(`rgb(${Math.round((sR * i + startR))},${Math.round((sG * i + startG))},${Math.round((sB\r\n\t\t\t* i + startB))})`)\r\n        // 确保第一个颜色值为startColor的值\r\n        if (i === 0) hex = rgbToHex(startColor)\r\n        // 确保最后一个颜色值为endColor的值\r\n        if (i === step - 1) hex = rgbToHex(endColor)\r\n        colorArr.push(hex)\r\n    }\r\n    return colorArr\r\n}\r\n\r\n// 将hex表示方式转换为rgb表示方式(这里返回rgb数组模式)\r\nexport function hexToRgb(sColor, str = true) {\r\n    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n    sColor = String(sColor).toLowerCase()\r\n    if (sColor && reg.test(sColor)) {\r\n        if (sColor.length === 4) {\r\n            let sColorNew = '#'\r\n            for (let i = 1; i < 4; i += 1) {\r\n                sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\r\n            }\r\n            sColor = sColorNew\r\n        }\r\n        // 处理六位的颜色值\r\n        const sColorChange = []\r\n        for (let i = 1; i < 7; i += 2) {\r\n            sColorChange.push(parseInt(`0x${sColor.slice(i, i + 2)}`))\r\n        }\r\n        if (!str) {\r\n            return sColorChange\r\n        }\r\n        return `rgb(${sColorChange[0]},${sColorChange[1]},${sColorChange[2]})`\r\n    } if (/^(rgb|RGB)/.test(sColor)) {\r\n        const arr = sColor.replace(/(?:\\(|\\)|rgb|RGB)*/g, '').split(',')\r\n        return arr.map((val) => Number(val))\r\n    }\r\n    return sColor\r\n}\r\n\r\n// 将rgb表示方式转换为hex表示方式\r\nexport function rgbToHex(rgb) {\r\n    const _this = rgb\r\n    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n    if (/^(rgb|RGB)/.test(_this)) {\r\n        const aColor = _this.replace(/(?:\\(|\\)|rgb|RGB)*/g, '').split(',')\r\n        let strHex = '#'\r\n        for (let i = 0; i < aColor.length; i++) {\r\n            let hex = Number(aColor[i]).toString(16)\r\n            hex = String(hex).length == 1 ? `${0}${hex}` : hex // 保证每个rgb的值为2位\r\n            if (hex === '0') {\r\n                hex += hex\r\n            }\r\n            strHex += hex\r\n        }\r\n        if (strHex.length !== 7) {\r\n            strHex = _this\r\n        }\r\n        return strHex\r\n    } if (reg.test(_this)) {\r\n        const aNum = _this.replace(/#/, '').split('')\r\n        if (aNum.length === 6) {\r\n            return _this\r\n        } if (aNum.length === 3) {\r\n            let numHex = '#'\r\n            for (let i = 0; i < aNum.length; i += 1) {\r\n                numHex += (aNum[i] + aNum[i])\r\n            }\r\n            return numHex\r\n        }\r\n    } else {\r\n        return _this\r\n    }\r\n}\r\n\r\n/**\r\n* JS颜色十六进制转换为rgb或rgba,返回的格式为 rgba（255，255，255，0.5）字符串\r\n* sHex为传入的十六进制的色值\r\n* alpha为rgba的透明度\r\n*/\r\nexport function colorToRgba(color, alpha) {\r\n    color = rgbToHex(color)\r\n    // 十六进制颜色值的正则表达式\r\n    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n    /* 16进制颜色转为RGB格式 */\r\n    let sColor = String(color).toLowerCase()\r\n    if (sColor && reg.test(sColor)) {\r\n        if (sColor.length === 4) {\r\n            let sColorNew = '#'\r\n            for (let i = 1; i < 4; i += 1) {\r\n                sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\r\n            }\r\n            sColor = sColorNew\r\n        }\r\n        // 处理六位的颜色值\r\n        const sColorChange = []\r\n        for (let i = 1; i < 7; i += 2) {\r\n            sColorChange.push(parseInt(`0x${sColor.slice(i, i + 2)}`))\r\n        }\r\n        // return sColorChange.join(',')\r\n        return `rgba(${sColorChange.join(',')},${alpha})`\r\n    }\r\n\r\n    return sColor\r\n}\r\n\r\nexport default {\r\n    colorGradient,\r\n    hexToRgb,\r\n    rgbToHex,\r\n    colorToRgba\r\n}\r\n"],"names":["colorGradient","startColor","endColor","step","startRGB","hexToRgb","startR","startG","startB","endRGB","endR","endG","endB","sR","sG","sB","colorArr","i","hex","rgbToHex","sColor","str","reg","sColorNew","sColorChange","val","rgb","_this","aColor","strHex","aNum","numHex"],"mappings":"aAMO,SAASA,EAAcC,EAAa,eAAgBC,EAAW,qBAAsBC,EAAO,GAAI,CACnG,MAAMC,EAAWC,EAASJ,EAAY,EAAK,EACrCK,EAASF,EAAS,CAAC,EACnBG,EAASH,EAAS,CAAC,EACnBI,EAASJ,EAAS,CAAC,EAEnBK,EAASJ,EAASH,EAAU,EAAK,EACjCQ,EAAOD,EAAO,CAAC,EACfE,EAAOF,EAAO,CAAC,EACfG,EAAOH,EAAO,CAAC,EAEfI,GAAMH,EAAOJ,GAAUH,EACvBW,GAAMH,EAAOJ,GAAUJ,EACvBY,GAAMH,EAAOJ,GAAUL,EACvBa,EAAW,CAAE,EACnB,QAASC,EAAI,EAAGA,EAAId,EAAMc,IAAK,CAE3B,IAAIC,EAAMC,EAAS,OAAO,KAAK,MAAON,EAAKI,EAAIX,CAAQ,CAAA,IAAI,KAAK,MAAOQ,EAAKG,EAAIV,CAAM,CAAE,IAAI,KAAK,MAAOQ,EAC3GE,EAAIT,EAAQ,GAAG,EAERS,IAAM,IAAGC,EAAMC,EAASlB,CAAU,GAElCgB,IAAMd,EAAO,IAAGe,EAAMC,EAASjB,CAAQ,GAC3Cc,EAAS,KAAKE,CAAG,CACpB,CACD,OAAOF,CACX,CAGO,SAASX,EAASe,EAAQC,EAAM,GAAM,CACzC,MAAMC,EAAM,qCAEZ,GADAF,EAAS,OAAOA,CAAM,EAAE,YAAa,EACjCA,GAAUE,EAAI,KAAKF,CAAM,EAAG,CAC5B,GAAIA,EAAO,SAAW,EAAG,CACrB,IAAIG,EAAY,IAChB,QAASN,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBM,GAAaH,EAAO,MAAMH,EAAGA,EAAI,CAAC,EAAE,OAAOG,EAAO,MAAMH,EAAGA,EAAI,CAAC,CAAC,EAErEG,EAASG,CACZ,CAED,MAAMC,EAAe,CAAE,EACvB,QAASP,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBO,EAAa,KAAK,SAAS,KAAKJ,EAAO,MAAMH,EAAGA,EAAI,CAAC,CAAC,EAAE,CAAC,EAE7D,OAAKI,EAGE,OAAOG,EAAa,CAAC,CAAC,IAAIA,EAAa,CAAC,CAAC,IAAIA,EAAa,CAAC,CAAC,IAFxDA,CAGd,CAAC,MAAI,aAAa,KAAKJ,CAAM,EACdA,EAAO,QAAQ,sBAAuB,EAAE,EAAE,MAAM,GAAG,EACpD,IAAKK,GAAQ,OAAOA,CAAG,CAAC,EAEhCL,CACX,CAGO,SAASD,EAASO,EAAK,CAC1B,MAAMC,EAAQD,EACRJ,EAAM,qCACZ,GAAI,aAAa,KAAKK,CAAK,EAAG,CAC1B,MAAMC,EAASD,EAAM,QAAQ,sBAAuB,EAAE,EAAE,MAAM,GAAG,EACjE,IAAIE,EAAS,IACb,QAASZ,EAAI,EAAGA,EAAIW,EAAO,OAAQX,IAAK,CACpC,IAAIC,EAAM,OAAOU,EAAOX,CAAC,CAAC,EAAE,SAAS,EAAE,EACvCC,EAAM,OAAOA,CAAG,EAAE,QAAU,EAAI,IAAOA,CAAG,GAAKA,EAC3CA,IAAQ,MACRA,GAAOA,GAEXW,GAAUX,CACb,CACD,OAAIW,EAAO,SAAW,IAClBA,EAASF,GAENE,CACV,CAAC,GAAIP,EAAI,KAAKK,CAAK,EAAG,CACnB,MAAMG,EAAOH,EAAM,QAAQ,IAAK,EAAE,EAAE,MAAM,EAAE,EAC5C,GAAIG,EAAK,SAAW,EAChB,OAAOH,EACT,GAAIG,EAAK,SAAW,EAAG,CACrB,IAAIC,EAAS,IACb,QAASd,EAAI,EAAGA,EAAIa,EAAK,OAAQb,GAAK,EAClCc,GAAWD,EAAKb,CAAC,EAAIa,EAAKb,CAAC,EAE/B,OAAOc,CACV,CACT,KACQ,QAAOJ,CAEf"}