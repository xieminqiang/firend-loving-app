{"version":3,"file":"u-subsection.js","sources":["uni_modules/uview-plus/components/u-subsection/u-subsection.vue","/Users/xiaoqiang/Documents/friemd/firend-loving-app/uni_modules/uview-plus/components/u-subsection/u-subsection.vue?type=component"],"sourcesContent":["<template>\n    <view\n        class=\"u-subsection\"\n        ref=\"u-subsection\"\n        :class=\"[`u-subsection--${mode}`]\"\n        :style=\"[addStyle(customStyle), wrapperStyle]\"\n    >\n        <view\n            class=\"u-subsection__bar cursor-pointer\"\n            ref=\"u-subsection__bar\"\n            :style=\"[barStyle]\"\n            :class=\"[\n                mode === 'button' && 'u-subsection--button__bar',\n                innerCurrent === 0 &&\n                    mode === 'subsection' &&\n                    'u-subsection__bar--first',\n                innerCurrent > 0 &&\n                innerCurrent < list.length - 1 &&\n                    mode === 'subsection' &&\n                    'u-subsection__bar--center',\n                innerCurrent === list.length - 1 &&\n                    mode === 'subsection' &&\n                    'u-subsection__bar--last',\n            ]\"\n        ></view>\n        <view\n            class=\"u-subsection__item cursor-pointer\"\n            :class=\"[\n                `u-subsection__item--${index}`,\n                index < list.length - 1 &&\n                    'u-subsection__item--no-border-right',\n                index === 0 && 'u-subsection__item--first',\n                index === list.length - 1 && 'u-subsection__item--last',\n                getTextViewDisableClass(index),\n            ]\"\n            :ref=\"`u-subsection__item--${index}`\"\n            :style=\"[itemStyle(index)]\"\n            @tap=\"clickHandler(index)\"\n            v-for=\"(item, index) in list\"\n            :key=\"index\"\n        >\n            <text\n                class=\"u-subsection__item__text\"\n                :class=\"[disabled ? 'u-subsection--disabled' : '']\"\n                :style=\"[textStyle(index,item)]\"\n                >{{ getText(item) }}</text\n            >\n        </view>\n    </view>\n</template>\n\n<script>\n// #ifdef APP-NVUE\nconst dom = uni.requireNativePlugin(\"dom\");\nconst animation = uni.requireNativePlugin(\"animation\");\n// #endif\nimport { props } from \"./props.js\";\nimport { mpMixin } from '../../libs/mixin/mpMixin';\nimport { mixin } from '../../libs/mixin/mixin';\nimport { addStyle, addUnit, sleep } from '../../libs/function/index';\n/**\n * Subsection 分段器\n * @description 该分段器一般用于用户从几个选项中选择某一个的场景\n * @tutorial https://ijry.github.io/uview-plus/components/subsection.html\n * @property {Array}\t\t\tlist\t\t\t        tab的数据\n * @property {String ｜ Number}\tcurrent\t\t\t        当前活动的tab的index（默认 0 ）\n * @property {String}\t\t\tactiveColor\t\t        激活时的颜色（默认 '#3c9cff' ）\n * @property {String}\t\t\tinactiveColor\t        未激活时的颜色（默认 '#303133' ）\n * @property {String}\t\t\tmode\t\t\t        模式选择，mode=button为按钮形式，mode=subsection时为分段模式（默认 'button' ）\n * @property {String ｜ Number}\tfontSize\t\t        字体大小，单位px（默认 12 ）\n * @property {Boolean}\t\t\tbold\t\t\t        激活选项的字体是否加粗（默认 true ）\n * @property {String}\t\t\tbgColor\t\t\t        组件背景颜色，mode为button时有效（默认 '#eeeeef' ）\n * @property {Object}\t\t\tcustomStyle\t\t        定义需要用到的外部样式\n * @property {String}\t        keyName\t                从`list`元素对象中读取的键名（默认 'name' ）\n * @property {String}\t        activeColorKeyName      从`list`元素对象中读取激活时的颜色（默认 'activeColorKey' ）  如果存在字段 优先级大于 activeColor\n * @property {String}\t        inactiveColorKeyName    从`list`元素对象中读取未激活时的颜色 （默认 'inactiveColorKey' ）如果存在字段 优先级大于 inactiveColor\n * @property {Boolean}\t        disabled                是否禁用分段器 （默认 false ）\n *\n * @event {Function} change\t\t分段器选项发生改变时触发  回调 index：选项的index索引值，从0开始\n * @example <u-subsection :list=\"list\" :current=\"curNow\" @change=\"sectionChange\"></u-subsection>\n */\nexport default {\n    name: \"u-subsection\",\n    mixins: [mpMixin, mixin, props],\n    data() {\n        return {\n            // 组件尺寸\n            itemRect: {\n                width: 0,\n                height: 0,\n            },\n            innerCurrent: '',\n            windowResizeCallback: {}\n        };\n    },\n    watch: {\n        list(newValue, oldValue) {\n            this.init();\n        },\n        current: {\n            immediate: true,\n            handler(n) {\n                if (n !== this.innerCurrent) {\n                    this.innerCurrent = n\n                }\n                // #ifdef APP-NVUE\n                // 在安卓nvue上，如果通过translateX进行位移，到最后一个时，会导致右侧无法绘制圆角\n                // 故用animation模块进行位移\n                const ref = this.$refs?.[\"u-subsection__bar\"]?.ref;\n                // 不存在ref的时候(理解为第一次初始化时，需要渲染dom，进行一定延时再获取ref)，这里的100ms是经过测试得出的结果(某些安卓需要延时久一点)，勿随意修改\n                sleep(ref ? 0 : 100).then(() => {\n                    animation.transition(this.$refs[\"u-subsection__bar\"].ref, {\n                        styles: {\n                            transform: `translateX(${\n                                n * this.itemRect.width\n                            }px)`,\n                            transformOrigin: \"center center\",\n                        },\n                        duration: 300,\n                    });\n                });\n                // #endif\n            },\n        },\n    },\n    computed: {\n        wrapperStyle() {\n            const style = {};\n            // button模式时，设置背景色\n            if (this.mode === \"button\") {\n                style.backgroundColor = this.bgColor;\n            }\n            return style;\n        },\n        // 滑块的样式\n        barStyle() {\n            const style = {};\n            style.width = `${this.itemRect.width}px`;\n            style.height = `${this.itemRect.height}px`;\n            // 通过translateX移动滑块，其移动的距离为索引*item的宽度\n            // #ifndef APP-NVUE\n            style.transform = `translateX(${\n                this.innerCurrent * this.itemRect.width\n            }px)`;\n            // #endif\n            if (this.mode === \"subsection\") {\n                // 在subsection模式下，需要动态设置滑块的圆角，因为移动滑块使用的是translateX，无法通过父元素设置overflow: hidden隐藏滑块的直角\n                style.backgroundColor = this.activeColor;\n            }\n            return style;\n        },\n        // 分段器item的样式\n        itemStyle(index) {\n            return (index) => {\n                const style = {};\n                if (this.mode === \"subsection\") {\n                    // 设置border的样式\n                    style.borderColor = this.activeColor;\n                    style.borderWidth = \"1px\";\n                    style.borderStyle = \"solid\";\n                }\n                return style;\n            };\n        },\n        // 分段器文字颜色\n        textStyle(index,item) {\n            return (index,item) => {\n                const style = {};\n                style.fontWeight =\n                    this.bold && this.innerCurrent === index ? \"bold\" : \"normal\";\n                style.fontSize = addUnit(this.fontSize);\n\n                let activeColorTemp = null;\n                let inactiveColorTemp = null;\n                // 如果是对象并且设置了对应的背景色字段 则优先使用设置的字段\n                if(typeof item === 'object' && item[this.activeColorKeyName]){\n                    activeColorTemp = item[this.activeColorKeyName];\n                }\n                if(typeof item === 'object' && item[this.inactiveColorKeyName]){\n                    inactiveColorTemp = item[this.inactiveColorKeyName];\n                }\n\n                // subsection模式下，激活时默认为白色的文字\n                if (this.mode === \"subsection\") {\n                    // 判断当前是否激活\n                    if(this.innerCurrent === index){\n                        // 判断当前是否有自定义的颜色\n                        style.color = activeColorTemp ? activeColorTemp : '#FFF'\n                        // style.color = activeColorTemp ? activeColorTemp : this.activeColor\n                    }\n                    else{\n                        // 判断当前是否有自定义的颜色\n                        style.color = inactiveColorTemp ? inactiveColorTemp : this.inactiveColor;\n                    }\n                }\n                else {\n                    // button模式下，激活时文字颜色默认为activeColor\n                    if(this.innerCurrent === index){\n                        // 判断当前是否有自定义的颜色\n                        style.color = activeColorTemp ? activeColorTemp : this.activeColor\n                    }\n                    else{\n                        // 判断当前是否有自定义的颜色\n                        style.color = inactiveColorTemp ? inactiveColorTemp : this.inactiveColor;\n                    }\n                }\n                return style;\n            };\n        },\n    },\n    mounted() {\n        this.init();\n        // #ifndef APP || MP-WEIXIN || MP-LARK|| MP-QQ || H5\n        this.windowResizeCallback = (res) => {\n            this.init();\n        }\n        uni.onWindowResize(this.windowResizeCallback)\n        // #endif\n    },\n    beforeUnmount() {\n        // #ifndef APP || MP-WEIXIN || MP-LARK|| MP-QQ || H5\n        uni.offWindowResize(this.windowResizeCallback)\n        // #endif\n    },\n\temits: [\"change\", \"update:current\"],\n    methods: {\n        addStyle,\n        init() {\n            this.innerCurrent = this.current\n            sleep().then(() => this.getRect());\n        },\n\t\t// 判断展示文本\n\t\tgetText(item) {\n\t\t\treturn typeof item === 'object' ? item[this.keyName] : item\n\t\t},\n        // 获取组件的尺寸\n        getRect() {\n            // #ifndef APP-NVUE\n            this.$uGetRect(\".u-subsection__item--0\").then((size) => {\n                this.itemRect = size;\n            });\n            // #endif\n\n            // #ifdef APP-NVUE\n            const ref = this.$refs[\"u-subsection__item--0\"][0];\n            ref &&\n                dom.getComponentRect(ref, (res) => {\n                    this.itemRect = res.size;\n                });\n            // #endif\n        },\n        clickHandler(index) {\n            // 防止某些平台 css 无法阻止点击事件 在此处拦截\n            if(this.disabled){\n                return\n            }\n            this.innerCurrent = index;\n\t\t\tthis.$emit('update:current', index);\n            this.$emit(\"change\", index);\n        },\n        /**\n         * 获取当前文字区域的 class禁用样式\n         * @param index\n         */\n        getTextViewDisableClass(index){\n            // 禁用状态下\n            if(this.disabled){\n                // 判断模式\n                if(this.mode === 'button'){\n                    return 'item-button--disabled'\n                }\n                else{\n                    return 'item-subsection--disabled'\n                }\n            }\n            return '';\n        }\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.u-subsection {\n    @include flex;\n    position: relative;\n    overflow: hidden;\n\t/* #ifndef APP-NVUE */\n\twidth: 100%;\n\tbox-sizing: border-box;\n\t/* #endif */\n\n    &--button {\n        height: 34px;\n        background-color: rgb(238, 238, 239);\n        padding: 3px;\n        border-radius: 4px;\n        align-items: stretch;\n\n        &__bar {\n            background-color: #ffffff;\n            border-radius: 4px !important;\n        }\n    }\n\n    &--subsection {\n        height: 32px;\n    }\n\n    &__bar {\n        position: absolute;\n        /* #ifndef APP-NVUE */\n        transition-property: transform, color;\n        transition-duration: 0.3s;\n        transition-timing-function: ease-in-out;\n        /* #endif */\n\n        &--first {\n            border-top-left-radius: 4px;\n            border-bottom-left-radius: 4px;\n            border-top-right-radius: 0px;\n            border-bottom-right-radius: 0px;\n        }\n\n        &--center {\n            border-top-left-radius: 0px;\n            border-bottom-left-radius: 0px;\n            border-top-right-radius: 0px;\n            border-bottom-right-radius: 0px;\n        }\n\n        &--last {\n            border-top-left-radius: 0px;\n            border-bottom-left-radius: 0px;\n            border-top-right-radius: 4px;\n            border-bottom-right-radius: 4px;\n        }\n    }\n\n    &__item {\n        @include flex;\n        flex: 1;\n        justify-content: center;\n        align-items: center;\n        // vue环境下，需要设置相对定位，因为滑块为绝对定位，item需要在滑块的上面\n        position: relative;\n\n        &--no-border-right {\n            border-right-width: 0 !important;\n        }\n\n        &--first {\n            border-top-left-radius: 4px;\n            border-bottom-left-radius: 4px;\n        }\n\n        &--last {\n            border-top-right-radius: 4px;\n            border-bottom-right-radius: 4px;\n        }\n\n        &__text {\n            font-size: 12px;\n            line-height: 14px;\n            @include flex;\n            align-items: center;\n            transition-property: color;\n            transition-duration: 0.3s;\n        }\n    }\n\n    // 禁用标志\n    //\n    //&--subsectio--disabled{\n    //    cursor: no-drop;\n    //    background: #FFFFFF !important;\n    //    color: #BDBDBD !important;\n    //    border-color: #BDBDBD !important;\n    //}\n    //\n    //&--button--disabled{\n    //    cursor: no-drop;\n    //    color: #BDBDBD !important;\n    //    border-color: #BDBDBD !important;\n    //}\n\n}\n\n.item-button--disabled{\n    cursor: no-drop;\n    color: #BDBDBD !important;\n    border-color: #BDBDBD !important;\n    text{\n        color: #BDBDBD !important;\n    }\n}\n.item-subsection--disabled{\n    cursor: no-drop;\n    background: #FFFFFF !important;\n    color: #BDBDBD !important;\n    border-color: #BDBDBD !important;\n    text{\n        color: #BDBDBD !important;\n    }\n}\n</style>\n","import Component from '/Users/xiaoqiang/Documents/friemd/firend-loving-app/uni_modules/uview-plus/components/u-subsection/u-subsection.vue'\nwx.createComponent(Component)"],"names":["_sfc_main","mpMixin","mixin","props","newValue","oldValue","n","style","index","item","addUnit","activeColorTemp","inactiveColorTemp","addStyle","sleep","size","Component"],"mappings":"+MAyFKA,EAAU,CACX,KAAM,eACN,OAAQ,CAACC,EAAAA,QAASC,EAAK,MAAEC,OAAA,EACzB,MAAO,CACH,MAAE,CAEE,SAAA,CACI,MAAO,EACP,OAAQ,CACd,EACE,aAAM,GACN,qBAAgB,CAAA,EAEvB,EACD,MAAO,CACH,KAAKC,EAAIC,EAAA,CACL,KAAK,KAAI,CACZ,EACD,QAAS,CACL,UAAW,GACX,QAAQC,EAAG,CACHA,IAAM,KAAK,eACX,KAAK,aAAeA,EAmB3B,CACJ,CACJ,EACD,SAAM,CACF,cAAQ,CACJ,MAAMC,EAAE,CAAA,EAER,OAAI,KAAK,OAAS,WACdA,EAAM,gBAAkB,KAAK,SAE1BA,CACV,EAED,UAAU,CACN,MAAMA,EAAG,CAAA,EACT,OAAAA,EAAM,MAAQ,GAAG,KAAK,SAAS,KAAE,KACjCA,EAAM,OAAS,GAAG,KAAK,SAAS,MAAM,KAGtCA,EAAM,UAAO,cACf,KAAA,aAAA,KAAA,SAAA,KACG,MAEG,KAAK,OAAS,eAEdA,EAAM,gBAAkB,KAAK,aAE1BA,CACV,EAED,UAASC,EAAA,CACL,OAAQA,GAAS,CACf,MAAAD,EAAA,CAAA,EACJ,OAAA,KAAA,OAAA,eAEUA,EAAM,YAAK,KAAA,YACXA,EAAM,YAAU,MAChBA,EAAM,YAAO,SAEVA,EAEvB,EAEQ,UAAUC,EAAMC,EAAM,CAClB,MAAO,CAACD,EAAMC,IAAS,CACnB,MAAMF,EAAQ,CAAA,EACdA,EAAM,WACL,KAAA,MAAA,KAAA,eAAAC,EAAA,OAAA,SACDD,EAAM,SAAWG,EAAAA,QAAQ,KAAK,QAAQ,EAEtC,IAACC,EAAA,KACjBC,EAAA,KAEgB,OAAG,OAAOH,GAAS,UAAYA,EAAE,KAAA,kBAAA,IAC7BE,EAAWF,EAAA,KAAA,kBAAA,GAEZ,OAAOA,GAAS,UAAKA,EAAA,KAAA,oBAAA,IACpBG,EAAoBH,EAAK,KAAK,oBAAoB,GAIlD,KAAK,OAAS,aAEb,KAAA,eAAAD,EAECD,EAAA,MAAAI,GAAA,OAKDJ,EAAA,MAAAK,GAAA,KAAA,cAKJ,KAAA,eAAAJ,EAEHD,EAAA,MAAAI,GAAA,KAAA,YAIMJ,EAAA,MAAAK,GAAA,KAAA,cAGGL,EAEd,CACJ,EACD,SAAE,CACE,KAAK,KAAI,CAOZ,EACD,eAAY,CAIX,EACJ,MAAO,CAAC,SAAQ,gBAAA,EACb,QAAS,CACT,SAAAM,EAAA,SACI,MAAO,CACH,KAAK,aAAE,KAAA,QACPC,EAAAA,MAAO,EAAC,KAAK,IAAM,KAAA,QAAA,CAAA,CACtB,EAEP,QAAQL,EAAK,CACZ,OAAO,OAAOA,GAAI,SAAAA,EAAA,KAAA,OAAA,EAAAA,CACrB,EAEQ,SAAU,CAEN,KAAK,UAAU,wBAAwB,EAAC,KAAAM,GAAA,CACpC,KAAK,SAAWA,CACpB,CAAC,CAUJ,EACD,aAAEP,EAAA,CAEK,KAAK,WAGR,KAAK,aAAeA,EAC7B,KAAK,MAAM,iBAAMA,CAAA,EACR,KAAK,MAAM,SAAOA,CAAA,EACrB,EAKD,wBAAwBA,EAAM,CAE1B,OAAC,KAAA,SAEJ,KAAA,OAAA,SACH,wBAGN,4BAGkB,EACV,CACH,CACL,88BC7RA,GAAG,gBAAgBQ,CAAS"}