{"version":3,"file":"user.js","sources":["api/user.js"],"sourcesContent":["/**\n * 用户相关 API 接口\n */\nimport { http } from '@/config/http.js'\n\n/**\n * 微信授权登录\n * @param {Object} data - 登录数据\n * @param {string} data.code - 微信登录code\n * @param {string} data.encryptedData - 加密数据（可选）\n * @param {string} data.iv - 初始向量（可选）\n * @param {string} data.signature - 数据签名（可选）\n * @param {string} data.rawData - 原始数据（可选）\n * @returns {Promise} 返回登录结果\n */\nexport const wxLogin = (data) => {\n  return http({\n    url: '/front/user/wx',\n    method: 'POST',\n    data\n  })\n}\n\n/**\n * 获取用户信息\n * @returns {Promise} 返回用户信息\n */\nexport const getUserInfo = () => {\n  return http({\n    url: '/front/user/center/info',\n    method: 'GET'\n  })\n}\n\nexport const getApplicatioInfo = () => {\n  return http({\n    url: '/front/companion/application/my',\n    method: 'GET'\n  })\n}\n\n/**\n * 获取指定城市的服务列表\n * @param {Array} cityCodes - 城市代码列表\n * @returns {Promise} 返回服务列表\n */\nexport const getServicesByCities = (cityCodes) => {\n  const queryParams = cityCodes.map(code => `city_codes=${code}`).join('&')\n  return http({\n    url: `/front/companion/services/cities?${queryParams}`,\n    method: 'GET'\n  })\n}\n\n/**\n * 创建伴侣申请\n * @param {Object} data - 申请数据\n * @returns {Promise} 返回创建结果\n */\nexport const createCompanionApplication = (data) => {\n  return http({\n    url: '/front/companion/application',\n    method: 'POST',\n    data\n  })\n}\n\n/**\n * 更新友伴师上线/下线状态\n * @param {Object} data - 在线状态信息\n * @param {number} data.is_online - 在线状态：0=下线，1=上线\n * @param {number} data.latitude - 纬度\n * @param {number} data.longitude - 经度\n * @param {string} data.location_text - 位置描述\n * @returns {Promise} API响应\n */\nexport function updateCompanionOnlineStatus(data) {\n  return http({\n    url: '/front/companion/online-status',\n    method: 'POST',\n    data\n  })\n}\n\n/**\n * 获取友伴师在线状态信息\n * @returns {Promise} API响应\n */\nexport function getCompanionOnlineStatus() {\n  return http({\n    url: '/front/companion/online-status',\n    method: 'GET'\n  })\n}\n\n/**\n * 更新用户信息\n * @param {Object} data - 用户信息数据\n * @returns {Promise} 返回更新结果\n */\nexport const updateUserInfo = (data) => {\n  return http({\n    url: '/front/user/update',\n    method: 'PUT',\n    data\n  })\n}\n\n/**\n * 用户退出登录\n * @returns {Promise} 返回退出结果\n */\nexport const logout = () => {\n  return http({\n    url: '/front/user/logout',\n    method: 'POST'\n  })\n}\n\n/**\n * 上传友伴师自我介绍视频\n * @param {Object} data - 视频上传数据\n * @param {string} data.intro_video_url - 自我介绍视频地址\n * @returns {Promise} 返回上传结果\n */\nexport const uploadCompanionVideo = (data) => {\n  return http({\n    url: '/front/companion/video/upload',\n    method: 'POST',\n    data\n  })\n}\n\n/**\n * 获取个性标签列表\n * @param {Object} params - 查询参数\n * @param {number} params.tag_type - 标签类型：4=个性特质，5=我的爱好，6=外貌风格，7=专业技能，8=热门推荐\n * @param {string} params.keyword - 搜索关键词（可选）\n * @param {number} params.page - 页码，默认1\n * @param {number} params.pageSize - 每页数量，默认20\n * @returns {Promise} 返回标签列表\n */\nexport const getPersonalityTags = (params) => {\n  console.log('getPersonalityTags 调用开始', params)\n  \n  // 手动构建查询字符串，兼容小程序环境\n  const queryParts = []\n  if (params.tag_type) queryParts.push(`tag_type=${params.tag_type}`)\n  if (params.keyword) queryParts.push(`keyword=${encodeURIComponent(params.keyword)}`)\n  if (params.page) queryParts.push(`page=${params.page}`)\n  if (params.pageSize) queryParts.push(`pageSize=${params.pageSize}`)\n  \n  const queryString = queryParts.join('&')\n  const url = queryString ? `/front/service/tags?${queryString}` : '/front/service/tags'\n  \n  console.log('构建的URL:', url)\n  console.log('查询字符串:', queryString)\n  \n  return http({\n    url: url,\n    method: 'GET'\n  })\n}\n\n/**\n * 获取热门个性标签\n * @param {Object} params - 查询参数\n * @param {number} params.tag_type - 标签类型（可选）\n * @param {number} params.limit - 返回数量，默认20\n * @returns {Promise} 返回热门标签列表\n */\nexport const getPopularPersonalityTags = (params) => {\n  return http({\n    url: '/front/service/tags/popular',\n    method: 'GET',\n    params\n  })\n}\n\n/**\n * 更新友伴师申请信息\n * @param {Object} data - 申请数据\n * @returns {Promise} 返回更新结果\n */\nexport const updateCompanionApplication = (data) => {\n  return http({\n    url: '/front/companion/application',\n    method: 'PUT',\n    data\n  })\n}\n\n/**\n * 获取服务等级列表\n * @returns {Promise} 返回服务等级列表\n */\nexport const getServiceLevels = () => {\n  return http({\n    url: '/front/companion/service-levels',\n    method: 'GET'\n  })\n}"],"names":["http","uni"],"mappings":";;;AAeY,MAAC,UAAU,CAAC,SAAS;AAC/B,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EACJ,CAAG;AACH;AAMY,MAAC,cAAc,MAAM;AAC/B,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,EACZ,CAAG;AACH;AAEY,MAAC,oBAAoB,MAAM;AACrC,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,EACZ,CAAG;AACH;AAOY,MAAC,sBAAsB,CAAC,cAAc;AAChD,QAAM,cAAc,UAAU,IAAI,UAAQ,cAAc,IAAI,EAAE,EAAE,KAAK,GAAG;AACxE,SAAOA,iBAAK;AAAA,IACV,KAAK,oCAAoC,WAAW;AAAA,IACpD,QAAQ;AAAA,EACZ,CAAG;AACH;AAOY,MAAC,6BAA6B,CAAC,SAAS;AAClD,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EACJ,CAAG;AACH;AAWO,SAAS,4BAA4B,MAAM;AAChD,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EACJ,CAAG;AACH;AA2CY,MAAC,uBAAuB,CAAC,SAAS;AAC5C,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EACJ,CAAG;AACH;AAWY,MAAC,qBAAqB,CAAC,WAAW;AAC5CC,gBAAAA,MAAA,MAAA,OAAA,sBAAY,2BAA2B,MAAM;AAG7C,QAAM,aAAa,CAAE;AACrB,MAAI,OAAO;AAAU,eAAW,KAAK,YAAY,OAAO,QAAQ,EAAE;AAClE,MAAI,OAAO;AAAS,eAAW,KAAK,WAAW,mBAAmB,OAAO,OAAO,CAAC,EAAE;AACnF,MAAI,OAAO;AAAM,eAAW,KAAK,QAAQ,OAAO,IAAI,EAAE;AACtD,MAAI,OAAO;AAAU,eAAW,KAAK,YAAY,OAAO,QAAQ,EAAE;AAElE,QAAM,cAAc,WAAW,KAAK,GAAG;AACvC,QAAM,MAAM,cAAc,uBAAuB,WAAW,KAAK;AAEjEA,gBAAAA,MAAY,MAAA,OAAA,sBAAA,WAAW,GAAG;AAC1BA,gBAAAA,yCAAY,UAAU,WAAW;AAEjC,SAAOD,iBAAK;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,EACZ,CAAG;AACH;AAsBY,MAAC,6BAA6B,CAAC,SAAS;AAClD,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EACJ,CAAG;AACH;AAMY,MAAC,mBAAmB,MAAM;AACpC,SAAOA,iBAAK;AAAA,IACV,KAAK;AAAA,IACL,QAAQ;AAAA,EACZ,CAAG;AACH;;;;;;;;;;;"}