{"version":3,"file":"file.js","sources":["api/file.js"],"sourcesContent":["/**\n * 文件上传相关 API 接口\n */\nimport { http } from '@/config/http.js'\nimport config from '@/config/config.js';\n // const baseURL = 'http://192.168.1.11:8883/v1'\n\nconst baseURL =  process.env.NODE_ENV === 'development' ? config.development.baseUrl : config.production.baseUrl;\n/**\n * 上传文件\n * @param {Object} fileData - 文件数据\n * @param {string} fileData.filePath - 文件路径\n * @param {string} fileData.name - 文件名称\n * @returns {Promise} 返回上传结果\n */\nexport const uploadFile = (fileData) => {\n  return new Promise((resolve, reject) => {\n\t  console.log('开始上传文件:', fileData)\n\n\t   console.log('开始上传文件:eeee', baseURL + '/file/upload')\n    uni.uploadFile({\n      url: baseURL+ '/file/upload',\n      filePath: fileData.filePath,\n      name: 'file',\n      header: {\n        'Authorization': uni.getStorageSync('token') || ''\n      },\n      success: (res) => {\n        try {\n          const data = JSON.parse(res.data)\n          if (data.code === 0) {\n            resolve(data)\n          } else {\n            reject(new Error(data.message || '上传失败'))\n          }\n        } catch (error) {\n          console.error('响应数据解析失败:', error, res.data)\n          reject(new Error('响应数据解析失败'))\n        }\n      },\n      fail: (error) => {\n        console.error('网络请求失败:', error)\n        reject(new Error('网络请求失败'))\n      }\n    })\n  })\n}\n\n/**\n * 批量上传文件\n * @param {Array} fileList - 文件列表\n * @returns {Promise} 返回批量上传结果\n */\nexport const uploadFiles = async (fileList) => {\n  const uploadPromises = fileList.map(fileData => uploadFile(fileData))\n  return Promise.all(uploadPromises)\n}\n\n/**\n * 获取文件上传结果\n * @param {Object} uploadResult - 上传结果\n * @returns {Object} 文件信息\n */\nexport const getUploadResult = (uploadResult) => {\n  if (uploadResult && uploadResult.data) {\n    return {\n      objectKey: uploadResult.data.object_key,\n      url: uploadResult.data.url,\n      cover: uploadResult.data.cover,\n      isVideo: uploadResult.data.is_video\n    }\n  }\n  return null\n} "],"names":["config","uni"],"mappings":";;;;AAOA,MAAM,UAAoDA,cAAA,OAAO,YAAY;AAQhE,MAAA,aAAa,CAAC,aAAa;AACtC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvCC,kBAAA,MAAY,MAAA,OAAA,qBAAA,WAAW,QAAQ;AAE9BA,kBAAA,wCAAY,eAAe,UAAU,cAAc;AACnDA,kBAAAA,MAAI,WAAW;AAAA,MACb,KAAK,UAAS;AAAA,MACd,UAAU,SAAS;AAAA,MACnB,MAAM;AAAA,MACN,QAAQ;AAAA,QACN,iBAAiBA,cAAA,MAAI,eAAe,OAAO,KAAK;AAAA,MAClD;AAAA,MACA,SAAS,CAAC,QAAQ;AACZ,YAAA;AACF,gBAAM,OAAO,KAAK,MAAM,IAAI,IAAI;AAC5B,cAAA,KAAK,SAAS,GAAG;AACnB,oBAAQ,IAAI;AAAA,UAAA,OACP;AACL,mBAAO,IAAI,MAAM,KAAK,WAAW,MAAM,CAAC;AAAA,UAC1C;AAAA,iBACO,OAAO;AACdA,8BAAA,MAAA,SAAA,qBAAc,aAAa,OAAO,IAAI,IAAI;AACnC,iBAAA,IAAI,MAAM,UAAU,CAAC;AAAA,QAC9B;AAAA,MACF;AAAA,MACA,MAAM,CAAC,UAAU;AACfA,sBAAA,MAAA,MAAA,SAAA,qBAAc,WAAW,KAAK;AACvB,eAAA,IAAI,MAAM,QAAQ,CAAC;AAAA,MAC5B;AAAA,IAAA,CACD;AAAA,EAAA,CACF;AACH;AAiBa,MAAA,kBAAkB,CAAC,iBAAiB;AAC3C,MAAA,gBAAgB,aAAa,MAAM;AAC9B,WAAA;AAAA,MACL,WAAW,aAAa,KAAK;AAAA,MAC7B,KAAK,aAAa,KAAK;AAAA,MACvB,OAAO,aAAa,KAAK;AAAA,MACzB,SAAS,aAAa,KAAK;AAAA,IAAA;AAAA,EAE/B;AACO,SAAA;AACT;;;"}