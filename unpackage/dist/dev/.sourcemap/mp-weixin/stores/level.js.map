{"version":3,"file":"level.js","sources":["stores/level.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { getServiceLevels } from '@/api/user.js'\n\n// 定义服务等级 Store\nexport const useLevelStore = defineStore('level', {\n  // 定义 state\n  state: () => ({\n    serviceLevels: [],\n    isLoading: false,\n    lastUpdateTime: null\n  }),\n  \n  // 定义 getters\n  getters: {\n    // 获取排序后的等级列表\n    sortedServiceLevels: (state) => {\n      return [...state.serviceLevels].sort((a, b) => a.level_order - b.level_order)\n    },\n    \n    // 检查是否需要更新数据（超过1小时）\n    needUpdate: (state) => {\n      if (!state.lastUpdateTime) return true\n      const now = Date.now()\n      const oneHour = 60 * 60 * 1000 // 1小时\n      return (now - state.lastUpdateTime) > oneHour\n    }\n  },\n  \n  // 定义 actions\n  actions: {\n    // 设置服务等级列表\n    setServiceLevels(levels) {\n      this.serviceLevels = levels\n      this.lastUpdateTime = Date.now()\n    },\n    \n    // 获取服务等级列表\n    async fetchServiceLevels() {\n      // 如果已有数据且不需要更新，直接返回\n      if (this.serviceLevels.length > 0 && !this.needUpdate) {\n        return this.serviceLevels\n      }\n      \n      this.isLoading = true\n      try {\n        const response = await getServiceLevels()\n        if (response.data && response.data.code === 0 && response.data.data) {\n          const levels = response.data.data || []\n          this.setServiceLevels(levels)\n          return levels\n        }\n        return []\n      } catch (error) {\n        console.error('获取服务等级列表失败:', error)\n        return []\n      } finally {\n        this.isLoading = false\n      }\n    },\n    \n    // 清除数据\n    clearServiceLevels() {\n      this.serviceLevels = []\n      this.lastUpdateTime = null\n    }\n  },\n  \n  // 持久化配置\n  persist: {\n    key: 'level-store',\n    paths: ['serviceLevels', 'lastUpdateTime']\n  }\n}) "],"names":["useLevelStore","defineStore","state","a","b","now","oneHour","levels","response","getServiceLevels","error","uni"],"mappings":"gFAIaA,EAAgBC,EAAW,YAAC,QAAS,CAEhD,MAAO,KAAO,CACZ,cAAe,CAAE,EACjB,UAAW,GACX,eAAgB,IACpB,GAGE,QAAS,CAEP,oBAAsBC,GACb,CAAC,GAAGA,EAAM,aAAa,EAAE,KAAK,CAACC,EAAGC,IAAMD,EAAE,YAAcC,EAAE,WAAW,EAI9E,WAAaF,GAAU,CACrB,GAAI,CAACA,EAAM,eAAgB,MAAO,GAClC,MAAMG,EAAM,KAAK,IAAK,EAChBC,EAAU,GAAK,GAAK,IAC1B,OAAQD,EAAMH,EAAM,eAAkBI,CACvC,CACF,EAGD,QAAS,CAEP,iBAAiBC,EAAQ,CACvB,KAAK,cAAgBA,EACrB,KAAK,eAAiB,KAAK,IAAK,CACjC,EAGD,MAAM,oBAAqB,CAEzB,GAAI,KAAK,cAAc,OAAS,GAAK,CAAC,KAAK,WACzC,OAAO,KAAK,cAGd,KAAK,UAAY,GACjB,GAAI,CACF,MAAMC,EAAW,MAAMC,mBAAkB,EACzC,GAAID,EAAS,MAAQA,EAAS,KAAK,OAAS,GAAKA,EAAS,KAAK,KAAM,CACnE,MAAMD,EAASC,EAAS,KAAK,MAAQ,CAAE,EACvC,YAAK,iBAAiBD,CAAM,EACrBA,CACR,CACD,MAAO,CAAE,CACV,OAAQG,EAAO,CACdC,OAAAA,EAAAA,MAAA,MAAA,QAAA,wBAAc,cAAeD,CAAK,EAC3B,CAAE,CACjB,QAAgB,CACR,KAAK,UAAY,EAClB,CACF,EAGD,oBAAqB,CACnB,KAAK,cAAgB,CAAE,EACvB,KAAK,eAAiB,IACvB,CACF,EAGD,QAAS,CACP,IAAK,cACL,MAAO,CAAC,gBAAiB,gBAAgB,CAC1C,CACH,CAAC"}